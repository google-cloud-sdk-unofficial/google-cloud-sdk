# -*- coding: utf-8 -*- #
# Copyright 2024 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - ALPHA
  hidden: true
  help_text:
    brief: Creates Firebase Data Connect service schema.
    description: |
      Creates Firebase Data Connect service schema. Note only `schemas/main` is supported.
    examples: |-
      Creates schema associated with postgres database and sql instance.

      $ {command} main --location=my-location --project=my-project --service=my-service \
        --source-files=path=gcloud.gql,content='' --postgresql-database=my-db \
        --postgresql-cloud-sql-instance=projects/my-project/locations/my-location/instances/my-instance \
        --postgresql-schema-validation=STRICT
  arguments:
    params:
    - help_text: |
        Identifier. The relative resource name of the schema, in the format:
        ```
        projects/{project}/locations/{location}/services/{service}/schemas/{schema}
        ```
        Right now, the only supported schema is "main".
      is_positional: true
      request_id_field: schemaId
      resource_spec: !REF googlecloudsdk.command_lib.firebase_data_connect.v1alpha_resources:project_location_service_schema
      required: true
    - arg_name: labels
      api_field: schema.labels
      required: false
      repeated: true
      help_text: |
        Labels as key value pairs.
      spec:
      - api_field: key
      - api_field: value
    - arg_name: annotations
      api_field: schema.annotations
      required: false
      repeated: true
      help_text: |
        Stores small amounts of arbitrary data.
      spec:
      - api_field: key
      - api_field: value
    - group:
        required: true
        help_text: |-
          A data source that backs Firebase Data Connect services.
        params:
        - group:
            mutex: true
            help_text: |-
              Arguments for the configuration.
            params:
            - group:
                required: false
                help_text: |-
                  Settings for PostgreSQL data source.
                params:
                - group:
                    mutex: true
                    help_text: |-
                      Arguments for the configuration.
                    params:
                    - group:
                        required: false
                        help_text: |-
                          Settings for CloudSQL instance configuration.
                        params:
                        - arg_name: postgresql-cloud-sql-instance
                          api_field: schema.primaryDatasource.postgresql.cloudSql.instance
                          required: true
                          repeated: false
                          help_text: |
                            Name of the CloudSQL instance, in the format:
                            ```
                            projects/{project}/locations/{location}/instances/{instance}
                            ```
                - arg_name: postgresql-database
                  api_field: schema.primaryDatasource.postgresql.database
                  required: true
                  repeated: false
                  help_text: |-
                    Name of the PostgreSQL database.
                - arg_name: postgresql-schema-validation
                  api_field: schema.primaryDatasource.postgresql.schemaValidation
                  required: false
                  help_text: |-
                    Configure how much Postgresql schema validation to perform.
                    Default to `STRICT` if not specified.
                  choices:
                  - arg_value: none
                    enum_value: NONE
                    help_text: |-
                      Skip no SQL schema validation. Use it with extreme caution.
                      CreateSchema or UpdateSchema will succeed even if SQL database is
                      unavailable or SQL schema is incompatible.
                      Generated SQL may fail at execution time.
                  - arg_value: strict
                    enum_value: STRICT
                    help_text: |-
                      Connect to the SQL database and validate that the SQL DDL matches the
                      schema exactly. Surface any discrepancies as `FAILED_PRECONDITION` with an
                      `IncompatibleSqlSchemaError` error detail.
    - group:
        required: true
        help_text: |-
          Used to represent a set of source files.
        params:
        - arg_name: source-files
          api_field: schema.source.files
          required: true
          repeated: true
          help_text: |-
            The files that comprise the source set.
          spec:
          - api_field: path
            help_text: |-
              The file name including folder path, if applicable. The path should be
              relative to a local workspace (e.g. dataconnect/(schema|connector)/*.gql)
              and not an absolute path (e.g. /absolute/path/(schema|connector)/*.gql).
          - api_field: content
            arg_name: contentFromFile
            type: file_type
            help_text: |-
              The file's textual content.
    - arg_name: display-name
      api_field: schema.displayName
      required: false
      repeated: false
      help_text: |
        Mutable human-readable name. 63 character limit.
  request:
    api_version: v1alpha
    collection:
    - firebasedataconnect.projects.locations.services.schemas
  async:
    collection:
    - firebasedataconnect.projects.locations.operations
