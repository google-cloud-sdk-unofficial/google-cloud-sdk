# -*- coding: utf-8 -*- #
# Copyright 2024 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - BETA
  auto_generated: true
  hidden: true
  help_text:
    brief: Updates the parameters of a single Parallelstore instance
    description: |
      Updates the parameters of a single Parallelstore instance.
    examples: |-
      To update the description of an instance `my-instance` in location `us-central1-a` run:

      $ {command} my-instance --location=us-central1-a --description="<updated description>"
  arguments:
    params:
    - help_text: |-
        Identifier. The resource name of the instance, in the format
        `projects/{project}/locations/{location}/instances/{instance_id}`.
      is_positional: true
      resource_spec: !REF googlecloudsdk.command_lib.parallelstore.v1beta_resources:project_location_instance
      required: true
    - arg_name: description
      api_field: instance.description
      required: false
      repeated: false
      help_text: |-
        The description of the instance. 2048 characters or less.
    - arg_name: labels
      api_field: instance.labels
      required: false
      repeated: true
      help_text: |-
        Cloud Labels are a flexible and lightweight mechanism for organizing cloud
        resources into groups that reflect a customer's organizational needs and
        deployment strategies. See
        https://cloud.google.com/resource-manager/docs/labels-overview for details.
      clearable: true
      spec:
      - api_field: key
      - api_field: value
    - arg_name: file-stripe-level
      api_field: instance.fileStripeLevel
      required: false
      help_text: |-
        Stripe level for files. Allowed values are:

        * `FILE_STRIPE_LEVEL_MIN`: offers the best performance for small size
          files.
        * `FILE_STRIPE_LEVEL_BALANCED`: balances performance for workloads
          involving a mix of small and large files.
        * `FILE_STRIPE_LEVEL_MAX`: higher throughput performance for larger files.
      choices:
      - arg_value: file-stripe-level-min
        enum_value: FILE_STRIPE_LEVEL_MIN
        help_text: |-
          Minimum file striping
      - arg_value: file-stripe-level-balanced
        enum_value: FILE_STRIPE_LEVEL_BALANCED
        help_text: |-
          Medium file striping
      - arg_value: file-stripe-level-max
        enum_value: FILE_STRIPE_LEVEL_MAX
        help_text: |-
          Maximum file striping
    - arg_name: directory-stripe-level
      api_field: instance.directoryStripeLevel
      required: false
      help_text: |-
        Stripe level for directories. Allowed values are:

        * `DIRECTORY_STRIPE_LEVEL_MIN`: recommended when directories contain a
          small number of files.
        * `DIRECTORY_STRIPE_LEVEL_BALANCED`: balances performance for workloads
          involving a mix of small and large directories.
        * `DIRECTORY_STRIPE_LEVEL_MAX`: recommended for directories with a large
          number of files.
      choices:
      - arg_value: directory-stripe-level-min
        enum_value: DIRECTORY_STRIPE_LEVEL_MIN
        help_text: |-
          Minimum directory striping
      - arg_value: directory-stripe-level-balanced
        enum_value: DIRECTORY_STRIPE_LEVEL_BALANCED
        help_text: |-
          Medium directory striping
      - arg_value: directory-stripe-level-max
        enum_value: DIRECTORY_STRIPE_LEVEL_MAX
        help_text: |-
          Maximum directory striping
    - arg_name: request-id
      api_field: requestId
      required: false
      repeated: false
      help_text: |-
        An optional request ID to identify requests. Specify a unique request ID
        so that if you must retry your request, the server will know to ignore
        the request if it has already been completed. The server will guarantee
        that for at least 60 minutes since the first request.

        For example, consider a situation where you make an initial request and t
        he request times out. If you make the request again with the same request
        ID, the server can check if original operation with the same request ID
        was received, and if so, will ignore the second request. This prevents
        clients from accidentally creating duplicate commitments.

        The request ID must be a valid UUID with the exception that zero UUID is
        not supported (00000000-0000-0000-0000-000000000000).
  request:
    api_version: v1beta
    collection:
    - parallelstore.projects.locations.instances
  async:
    collection:
    - parallelstore.projects.locations.operations
  update:
    read_modify_update: true
