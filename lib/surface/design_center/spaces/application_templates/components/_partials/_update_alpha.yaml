# -*- coding: utf-8 -*- #
# Copyright 2025 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - ALPHA
  auto_generated: true
  hidden: true
  help_text:
    brief: Update a component
    description: Update a component in an application template.
    examples: |-
      To update the display name to `My New Component Name` in the component `my-component` in application template `my-app-template`, space `my-space`, project `my-project` and location `us-central1`, run:

      $ {command} my-component --application-template=my-app-template --space=my-space --project=my-project --location=us-central1 --display-name="My New Component Name"

      Or run:

      $ {command} projects/my-project/locations/us-central1/spaces/my-space/applicationTemplates/my-app-template/components/my-component --display-name="My New Component Name"

      To update the parameters with new key-value pairs of `project_id:new-project` and `service_name:new-service` for the component `my-component` in application template `my-app-template`, space `my-space`, project `my-project` and location `us-central1`, run the following shorthand example:

      $ {command} my-component --application-template=my-app-template --space=my-space --project=my-project --location=us-central1 --parameters=key=project_id,value=new-project --add-parameters=key=service_name,value=new-service

      Or run the following JSON example:

      $ {command} my-component --application-template=my-app-template --space=my-space --project=my-project --location=us-central1 --parameters='[{"key": "project_id", "value": "new-project"}, {"key": "service_name", "value": "new-service"}]'

      Or create a YAML or JSON file with the parameters and run the following file example:

      $ {command} my-component --application-template=my-app-template --space=my-space --project=my-project --location=us-central1 --parameters=my-parameters.yaml

      To add new parameters key-value pair of `project_id:new-project` and `service_name:new-service` to the component `my-component` in application template `my-app-template`, space `my-space`, project `my-project` and location `us-central1`, run the following shorthand example:

      $ {command} my-component --application-template=my-app-template --space=my-space --project=my-project --location=us-central1 --add-parameters=key=project_id,value=new-project --add-parameters=key=service_name,value=new-service

      Or run the following JSON example:

      $ {command} my-component --application-template=my-app-template --space=my-space --project=my-project --location=us-central1 --add-parameters='[{"key": "project_id", "value": "new-project"}, {"key": "service_name", "value": "new-service"}]'

      Or create a YAML or JSON file with the parameters and run the following file example:

      $ {command} my-component --application-template=my-app-template --space=my-space --project=my-project --location=us-central1 --add-parameters=my-parameters.yaml

      To clear all parameters from the component `my-component` in application template `my-app-template`, space `my-space`, project `my-project` and location `us-central1`, run:

      $ {command} my-component --application-template=my-app-template --space=my-space --project=my-project --location=us-central1 --clear-parameters

      To remove an existing parameter key-value pair of `project_id:new-project` from the component `my-component` in application template `my-app-template`, space `my-space`, project `my-project` and location `us-central1`, run:

      $ {command} my-component --application-template=my-app-template --space=my-space --project=my-project --location=us-central1 --remove-parameters=key=project_id,value=my-project
  arguments:
    params:
    - help_text: |-
        Identifier. The component name.
      is_positional: true
      is_primary_resource: true
      resource_spec: !REF googlecloudsdk.command_lib.design_center.v1alpha_resources:projects_locations_spaces_application_templates_components
      required: true
    - arg_name: shared-template-revision-uri
      api_field: component.sharedTemplateRevisionUri
      required: false
      repeated: false
      help_text: |-
        The shared template used to generate the component.
    - arg_name: parameters
      api_field: component.parameters
      required: false
      repeated: true
      help_text: |-
        The component parameters.
      clearable: true
      spec:
      - api_field: key
        help_text: |-
          The key of the parameter.
      - api_field: value
        type: arg_json
        help_text: |-
          The value of the parameter.
    - arg_name: display-name
      api_field: component.displayName
      required: false
      repeated: false
      help_text: |-
        The component display name.
  request:
    api_version: v1alpha
    collection:
    - designcenter.projects.locations.spaces.applicationTemplates.components
  update:
    read_modify_update: true
