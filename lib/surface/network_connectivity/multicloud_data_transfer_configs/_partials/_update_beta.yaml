# -*- coding: utf-8 -*- #
# Copyright 2025 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - BETA
  auto_generated: true
  help_text:
    brief: Update multicloudDataTransferConfigs
    description: Update a multicloudDataTransferConfig
    examples: |-
      To update the multicloudDataTransferConfig, run:

          $ {command}
  arguments:
    params:
    - help_text: |-
        Identifier. The name of the `MulticloudDataTransferConfig` resource.
        Format:
        `projects/{project}/locations/{location}/multicloudDataTransferConfigs/{multicloud_data_transfer_config}`.
      is_positional: true
      is_primary_resource: true
      resource_spec: !REF googlecloudsdk.command_lib.network_connectivity.v1beta_resources:projects_locations_multicloud_data_transfer_configs
      required: true
    - arg_name: labels
      api_field: googleCloudNetworkconnectivityV1betaMulticloudDataTransferConfig.labels
      required: false
      repeated: true
      help_text: |-
        User-defined labels.
      clearable: true
      spec:
      - api_field: key
      - api_field: value
    - arg_name: etag
      api_field: googleCloudNetworkconnectivityV1betaMulticloudDataTransferConfig.etag
      required: false
      repeated: false
      help_text: |-
        The etag is computed by the server, and might be sent with update and
        delete requests so that the client has an up-to-date value before
        proceeding.
    - arg_name: description
      api_field: googleCloudNetworkconnectivityV1betaMulticloudDataTransferConfig.description
      required: false
      repeated: false
      help_text: |-
        A description of this resource.
    - arg_name: services
      api_field: googleCloudNetworkconnectivityV1betaMulticloudDataTransferConfig.services
      required: false
      repeated: true
      help_text: |-
        Maps services to their current or planned states. Service names are keys,
        and the associated values describe the state of the service. If a state
        change is expected, the value is either `ADDING` or `DELETING`,
        depending on the actions taken.

        Sample output:
        "services": {
          "big-query": {
            "states": [
              {
                "effectiveTime": "2024-12-12T08:00:00Z"
                "state": "ADDING",
              },
            ]
          },
          "cloud-storage": {
            "states": [
              {
                "state": "ACTIVE",
              }
            ]
          }
        }
      clearable: true
      spec:
      - api_field: key
      - api_field: value
        spec: []
    - arg_name: request-id
      api_field: requestId
      required: false
      repeated: false
      help_text: |-
        A request ID to identify requests. Specify a unique request ID
        so that if you must retry your request, the server can ignore
        the request if it has already been completed. The server waits
        for at least 60 minutes since the first request.

        For example, consider a situation where you make an initial request and
        the request times out. If you make the request again with the same request
        ID, the server can check if original operation with the same request ID
        was received, and if so, can ignore the second request. This prevents
        clients from accidentally creating duplicate `MulticloudDataTransferConfig`
        resources.

        The request ID must be a valid UUID with the exception that zero UUID
        (00000000-0000-0000-0000-000000000000) isn't supported.
  request:
    api_version: v1beta
    collection:
    - networkconnectivity.projects.locations.multicloudDataTransferConfigs
  async:
    collection:
    - networkconnectivity.projects.locations.operations
  update:
    read_modify_update: true
