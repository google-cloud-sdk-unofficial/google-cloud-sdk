- release_tracks:
  - ALPHA
  help_text:
    brief: Update a Rollout
    description: Update a Rollout
    examples: |-
      To update the Rollout, run:

      $ {command}
  arguments:
    params:
    - help_text: |-
        Identifier. The resource name (full URI of the resource) following the standard naming
        scheme:

          "projects/{project}/locations/{location}/rollout/{rollout_id}"
      is_positional: true
      is_primary_resource: true
      resource_spec: !REF googlecloudsdk.command_lib.saas.resources:rollout
      required: true
    - arg_name: rollout-orchestration-strategy
      api_field: rollout.rolloutOrchestrationStrategy
      required: false
      repeated: false
      help_text: |-
        The strategy to use for executing this rollout. If not provided, the
        strategy from Rollout Type will be used.
    - arg_name: unit-filter
      api_field: rollout.unitFilter
      required: false
      repeated: false
      help_text: |-
        CEL(https://github.com/google/cel-spec) formatted filter string against
        Unit. The filter will be applied to determine the eligible unit population.
        This filter can only reduce, but not expand the scope of the rollout. If
        not provided, the unit_filter from the RolloutType will be used.
    - group:
        api_field: rollout.control
        arg_name: control
        clearable: true
        required: false
        help_text: |-
          RolloutControl provides a way to request a change to the execution of a
          Rollout by pausing or canceling it.
        params:
        - group:
            mutex: true
            help_text: |-
              Arguments for the action params.
            params:
            - group:
                api_field: rollout.control.runParams
                required: false
                help_text: |-
                  Parameters for the RUN action controlling the behavior of the rollout
                  when it is resumed from a PAUSED state.
                params:
                - arg_name: retry-failed-operations
                  api_field: rollout.control.runParams.retryFailedOperations
                  action: store_true_false
                  required: false
                  type: bool
                  help_text: |-
                    If true, the rollout will retry failed operations when resumed.
                    This is applicable only the current state of the Rollout is PAUSED and
                    the requested action is RUN.
        - arg_name: control-action
          api_field: rollout.control.action
          required: false
          help_text: |-
            Action to be performed on the Rollout.
            The default behavior is to run the rollout until it naturally reaches a
            terminal state.
          choices:
          - arg_value: run
            enum_value: ROLLOUT_ACTION_RUN
            help_text: |-
              Run the Rollout until it naturally reaches a terminal state.
              A rollout requested to run will progress through all natural Rollout
              States (such as RUNNING -> SUCCEEDED or RUNNING -> FAILED).
              If retriable errors are encountered during the rollout, the rollout
              will paused by default and can be resumed by re-requesting this RUN
              action.
          - arg_value: pause
            enum_value: ROLLOUT_ACTION_PAUSE
            help_text: |-
              Pause the Rollout until it is resumed (i.e. RUN is requested).
          - arg_value: cancel
            enum_value: ROLLOUT_ACTION_CANCEL
            help_text: |-
              Cancel the Rollout permanently.
  request:
    api_version: v1alpha1
    collection:
    - saasservicemgmt.projects.locations.rollouts
  async:
    collection:
    - saasservicemgmt.projects.locations.operations
  update:
    read_modify_update: true
