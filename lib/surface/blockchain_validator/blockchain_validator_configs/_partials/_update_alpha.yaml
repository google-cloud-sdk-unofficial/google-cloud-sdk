# -*- coding: utf-8 -*- #
# Copyright 2024 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - ALPHA
  help_text:
    brief: Update the configuration of a single blockchain validator
    description: |
      Update the configuration of a single blockchain validator.
    examples: |-
      To enable validation work on a previously disabled blockchain validator `my-validator` in
      the project `my-project` and location `us-central1` run:

      $ {command} my-validator --location=us-central1 --project=my-project \
        --validation-work-enabled=true
  arguments:
    params:
    - group:
        mutex: true
        help_text: |-
          Arguments for the blockchain node.
        params:
        - arg_name: blockchain-node-id
          api_field: blockchainValidatorConfig.blockchainNodeId
          required: false
          repeated: false
          help_text: |-
            The fully qualified name of the blockchain node which carries out work
            on behalf of the validator. If not set, the validator must either be
            operated outside of Blockchain Validator Manager, or it will be offline
            (no attestations or blocks will be produced).
            If this node is offline or deleted, the validator will be offline.
    - group:
        mutex: true
        help_text: |-
          Arguments for the blockchain type details.
        params:
        - group:
            required: false
            help_text: |-
              Blockchain validator configuration unique to Ethereum blockchains.
            params:
            - group:
                mutex: true
                help_text: |-
                  Arguments for the  graffiti.
                params:
                - arg_name: ethereum-protocol-details-graffiti
                  api_field: blockchainValidatorConfig.ethereumProtocolDetails.graffiti
                  required: false
                  repeated: false
                  help_text: |-
                    Graffiti is a custom string published in blocks proposed by the
                    validator. This can only be written, as the current value cannot be read
                    back from the validator client API. See
                    https://lighthouse-book.sigmaprime.io/graffiti.html for an example of
                    how this is used.
                    If not set, the validator client's default is used.
                    If no blockchain node is specified, this has no effect as no validator
                    client is run.
    - group:
        mutex: true
        help_text: |-
          Arguments for the key source config.
        params:
        - group:
            required: false
            help_text: |-
              Configuration to use an external key signing service, such as the service
              endpoint. The external key signer is expected to be managed entirely by the
              customer. For reference see
              https://docs.web3signer.consensys.net/ for details on Web3Signer and
              https://docs.web3signer.consensys.net/reference/api/json-rpc for the API
              exposed by the external service.
            params:
            - group:
                mutex: true
                help_text: |-
                  Arguments for the  timeout duration.
                params:
                - arg_name: remote-web3-signer-timeout-duration
                  api_field: blockchainValidatorConfig.remoteWeb3Signer.timeoutDuration
                  required: false
                  repeated: false
                  type: googlecloudsdk.core.util.times:ParseDuration
                  processor: googlecloudsdk.core.util.times:FormatDurationForJson
                  help_text: |-
                    Timeout for requests to the Web3Signer service.
            - arg_name: remote-web3-signer-web3signer-uri
              api_field: blockchainValidatorConfig.remoteWeb3Signer.web3signerUri
              required: false
              repeated: false
              help_text: |-
                URI of the Web3Signer service the validator client connects to, to
                request signing of attestations, blocks, etc.
    - help_text: |-
        Blockchain Validator Config Name
        The name of the Blockchain Validator Config. The fully specified name must have the format
        projects/{project}/locations/{location}/blockchainValidatorConfigs/{validator}.
      is_positional: true
      resource_spec: !REF googlecloudsdk.command_lib.blockchain_validator.v1_resources:project_location_blockchain_validator_config
      required: true
    - arg_name: labels
      api_field: blockchainValidatorConfig.labels
      required: false
      repeated: true
      help_text: |-
        Labels as key value pairs
      clearable: true
      spec:
      - api_field: key
      - api_field: value
    - arg_name: validation-work-enabled
      api_field: blockchainValidatorConfig.validationWorkEnabled
      action: store_true
      required: false
      type: bool
      help_text: |-
        True if the blockchain node requests and signs attestations and blocks on
        behalf of this validator, false if not.
        This does NOT define whether the blockchain expects work to occur, only
        whether the blockchain node specified above is carrying out validation
        tasks. This should be enabled under normal conditions, but may be useful
        when migrating validators to/from Blockchain Node Engine, where the
        validator may be paused during the migration.
  request:
    api_version: v1
    collection:
    - blockchainvalidatormanager.projects.locations.blockchainValidatorConfigs
  async:
    collection:
    - blockchainvalidatormanager.projects.locations.operations
  update:
    read_modify_update: true
