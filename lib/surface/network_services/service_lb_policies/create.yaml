release_tracks: [ALPHA, BETA]

help_text:
  brief: |
    Create a service LB policy.
  description: |
    Create a new service LB policy with the given name.
  examples: |
    Create a service LB policy with the name 'my-service-lb-policy', load balancing algorithm 'waterfall-by-region', and location 'global'.

      $ {command} my-service-lb-policy --load-balancing-algorithm=waterfall-by-region --location="global"

arguments:
  resource:
    spec: !REF googlecloudsdk.command_lib.network_services.resources:serviceLbPolicy
    help_text: |
      Name of the service LB policy to be created.
  params:
  - arg_name: load-balancing-algorithm
    api_field: serviceLbPolicy.loadBalancingAlgorithm
    help_text: |
      The global load balancing algorithm to be used.
    choices:
    - arg_value: waterfall-by-region
      help_text: |
        Direct traffic to the nearest region with endpoints and capacity before spilling over to
        other regions.
    - arg_value: waterfall-by-zone
      help_text:  |
        Attempt to keep traffic in a single zone closest to the client, before spilling over to
        other zones.
    - arg_value: spray-to-region
      help_text:  |
        Spread the traffic from each client to all the MIGs/NEGs in a region.
    - arg_value: spray-to-world
      help_text:  |
        Balance traffic across all backends across the world proportionally based on capacity.
    default: waterfall-by-region
  - arg_name: auto-capacity-drain
    api_field: serviceLbPolicy.autoCapacityDrain
    ALPHA:
      processor: googlecloudsdk.command_lib.network_services.util:AutoCapacityDrainHook:api_version=v1alpha1
    BETA:
      processor: googlecloudsdk.command_lib.network_services.util:AutoCapacityDrainHook:api_version=v1beta1
    help_text: |
      If specified, an unhealthy MIG/NEG will be removed from Global load balancing and traffic
      routing for the service.
      A MIG/NEG is considered to be unhealthy if less than 25% of the instance/endpoints in the
      MIG/NEG are healthy.
      autoCapacityDrain will never drain more than 50% of the configured MIGs/NEGs of a Backend
      Service.
    type: bool
  - arg_name: description
    api_field: serviceLbPolicy.description
    help_text: The description for the service LB policy.

async:
  collection: networkservices.projects.locations.operations

request: &request
  ALPHA:
    api_version: v1alpha1
  BETA:
    api_version: v1beta1
  collection: networkservices.projects.locations.serviceLbPolicies
  method: create
