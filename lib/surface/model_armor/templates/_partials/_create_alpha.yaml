# -*- coding: utf-8 -*- #
# Copyright 2024 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - ALPHA
  hidden: true
  help_text:
    brief: Create Model Armor Template.
    description: Creates a new Template in a given project and location.
    examples: |-
      To create a Template, run:
      $ {command} my-template --location=us-central1 --malicious-uri-filter-settings-enforcement=enabled
  arguments:
    params:
    - help_text: |-
        Identifier. name of resource
      is_positional: true
      request_id_field: templateId
      resource_spec: !REF googlecloudsdk.command_lib.model_armor.v1alpha_resources:project_location_template
      required: true
    - arg_name: labels
      api_field: template.labels
      required: false
      repeated: true
      help_text: |-
        Labels as key value pairs
      spec:
      - api_field: key
      - api_field: value
    - group:
        required: true
        help_text: |-
          Filters configuration.
        params:
        - group:
            required: false
            help_text: |-
              Responsible AI Filter settings.
            params:
            - arg_name: rai-settings-filters
              api_field: template.filterConfig.raiSettings.raiFilters
              required: true
              repeated: true
              help_text: |-
                List of Responsible AI filters enabled for template.
              spec:
              - api_field: filterType
                help_text: |-
                  Type of Responsible AI filter.
              - api_field: confidenceLevel
                help_text: |-
                  Confidence level for this RAI filter.
                  During data sanitization, if data is classified under this filter with a
                  confidence level equal to or greater than the specified level, a positive
                  match is reported. If the confidence level is unspecified (i.e., 0), the
                  system will use a reasonable default level based on the `filter_type`.
        - group:
            required: false
            help_text: |-
              Sensitive Data protection settings.
            params:
            - group:
                mutex: true
                help_text: |-
                  Arguments for the sdp configuration.
                params:
                - group:
                    required: false
                    help_text: |-
                      SDP Basic configuration.
                    params:
                    - arg_name: basic-config-filter-enforcement
                      api_field: template.filterConfig.sdpSettings.basicConfig.filterEnforcement
                      required: false
                      help_text: |-
                        Tells whether the SDP basic config is enabled or disabled.
                      choices:
                      - arg_value: enabled
                        enum_value: ENABLED
                        help_text: |-
                          Enabled
                      - arg_value: disabled
                        enum_value: DISABLED
                        help_text: |-
                          Disabled
                - group:
                    required: false
                    help_text: |-
                      SDP Advanced configuration.
                    params:
                    - arg_name: advanced-config-inspect-template
                      api_field: template.filterConfig.sdpSettings.advancedConfig.inspectTemplate
                      required: false
                      repeated: false
                      help_text: |-
                        SDP inspect template resource name

                        If only inspect template is provided (de-identify template not provided),
                        then SDP InspectContent action is performed during Sanitization.
                        All DLP findings identified during inspection will be returned as
                        SdpFinding in SdpInsepctionResult
                        e.g.
                        `organizations/{organization}/inspectTemplates/{inspect_template}`,
                        `projects/{project}/inspectTemplates/{inspect_template}`
                        `organizations/{organization}/locations/{location}/inspectTemplates/{inspect_template}`
                        `projects/{project}/locations/{location}/inspectTemplates/{inspect_template}`
                    - arg_name: advanced-config-deidentify-template
                      api_field: template.filterConfig.sdpSettings.advancedConfig.deidentifyTemplate
                      required: false
                      repeated: false
                      help_text: |-
                        Optional SDP Deidentify template resource name.

                        If provided then DeidentifyContent action is performed during Sanitization
                        using this template and inspect template. The De-identified data will
                        be returned in SdpDeidentifyResult.
                        Note that if only Deidentify template is provided then SDP will perform
                        identification using all SDP built-in info types.

                        e.g.
                        `organizations/{organization}/deidentifyTemplates/{deidentify_template}`,
                        `projects/{project}/deidentifyTemplates/{deidentify_template}`
                        `organizations/{organization}/locations/{location}/deidentifyTemplates/{deidentify_template}`
                        `projects/{project}/locations/{location}/deidentifyTemplates/{deidentify_template}`
        - group:
            required: false
            help_text: |-
              Prompt injection and Jailbreak Filter settings.
            params:
            - arg_name: pi-and-jailbreak-filter-settings-enforcement
              api_field: template.filterConfig.piAndJailbreakFilterSettings.filterEnforcement
              required: false
              help_text: |-
                Tells whether Prompt injection and Jailbreak filter is enabled or
                disabled.
              choices:
              - arg_value: enabled
                enum_value: ENABLED
                help_text: |-
                  Enabled
              - arg_value: disabled
                enum_value: DISABLED
                help_text: |-
                  Enabled
        - group:
            required: false
            help_text: |-
              Malicious URI filter settings.
            params:
            - arg_name: malicious-uri-filter-settings-enforcement
              api_field: template.filterConfig.maliciousUriFilterSettings.filterEnforcement
              required: false
              help_text: |-
                Tells whether the Malicious URI filter is enabled or disabled.
              choices:
              - arg_value: enabled
                enum_value: ENABLED
                help_text: |-
                  Enabled
              - arg_value: disabled
                enum_value: DISABLED
                help_text: |-
                  Disabled
    - arg_name: request-id
      api_field: requestId
      required: false
      repeated: false
      help_text: |-
        An optional request ID to identify requests. Specify a unique request ID
        so that if you must retry your request, the server will know to ignore
        the request if it has already been completed. The server will guarantee
        that for at least 60 minutes since the first request.

        For example, consider a situation where you make an initial request and the
        request times out. If you make the request again with the same request
        ID, the server can check if original operation with the same request ID
        was received, and if so, will ignore the second request. This prevents
        clients from accidentally creating duplicate commitments.

        The request ID must be a valid UUID with the exception that zero UUID is
        not supported (00000000-0000-0000-0000-000000000000).
  request:
    api_version: v1alpha
    collection:
    - modelarmor.projects.locations.templates
