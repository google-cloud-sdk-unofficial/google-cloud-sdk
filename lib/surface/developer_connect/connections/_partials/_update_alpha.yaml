# -*- coding: utf-8 -*- #
# Copyright 2024 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - ALPHA
  help_text:
    brief: Update connections
    description: Update a connection
    examples: |-
      To update the connection, run:

      $ {command}
  arguments:
    params:
    - group:
        mutex: true
        help_text: |-
          Arguments for the connection config.
        params:
        - group:
            required: false
            help_text: |-
              Configuration for connections to github.com.
            params:
            - group:
                required: false
                help_text: |-
                  Represents an OAuth token of the account that authorized the Connection,
                  and associated metadata.
                params:
                - arg_name: github-config-authorizer-credential-oauth-token-secret-version
                  help_text: |-
                    A SecretManager resource containing the OAuth token that authorizes
                    the connection. Format: `projects/*/secrets/*/versions/*`.
                  is_positional: false
                  resource_spec: !REF googlecloudsdk.command_lib.developer_connect.v1_resources:project_secret_secret_version
                  resource_method_params:
                    connection.githubConfig.authorizerCredential.oauthTokenSecretVersion: '{__relative_name__}'
                  required: false
            - arg_name: github-config-app-installation-id
              api_field: connection.githubConfig.appInstallationId
              required: false
              repeated: false
              type: long
              help_text: |-
                GitHub App installation id.
        - group:
            hidden: true
            required: false
            help_text: |-
              Configuration for connections to an instance of GitHub Enterprise.
            params:
            - arg_name: github-enterprise-config-host-uri
              api_field: connection.githubEnterpriseConfig.hostUri
              required: false
              repeated: false
              help_text: |-
                The URI of the GitHub Enterprise host this connection is for.
            - arg_name: github-enterprise-config-app-id
              api_field: connection.githubEnterpriseConfig.appId
              required: false
              repeated: false
              type: long
              help_text: |-
                ID of the GitHub App created from the manifest.
            - arg_name: github-enterprise-config-private-key-secret-version
              help_text: |-
                SecretManager resource containing the private key of the GitHub App,
                formatted as `projects/*/secrets/*/versions/*`.
              is_positional: false
              resource_spec: !REF googlecloudsdk.command_lib.developer_connect.v1_resources:project_secret_secret_version
              resource_method_params:
                connection.githubEnterpriseConfig.privateKeySecretVersion: '{__relative_name__}'
              required: false
              clearable: true
            - arg_name: github-enterprise-config-webhook-secret-version
              help_text: |-
                SecretManager resource containing the webhook secret of the GitHub App,
                formatted as `projects/*/secrets/*/versions/*`.
              is_positional: false
              resource_spec: !REF googlecloudsdk.command_lib.developer_connect.v1_resources:project_secret_secret_version
              resource_method_params:
                connection.githubEnterpriseConfig.webhookSecretSecretVersion: '{__relative_name__}'
              required: false
              clearable: true
            - arg_name: github-enterprise-config-app-installation-id
              api_field: connection.githubEnterpriseConfig.appInstallationId
              required: false
              repeated: false
              type: long
              help_text: |-
                ID of the installation of the GitHub App.
            - group:
                required: false
                help_text: |-
                  ServiceDirectoryConfig represents Service Directory configuration for a
                  connection.
                params:
                - arg_name: github-enterprise-config-service-directory
                  api_field: connection.githubEnterpriseConfig.serviceDirectoryConfig.service
                  required: false
                  repeated: false
                  help_text: |-
                    The Service Directory service name.
                    Format:
                    projects/{project}/locations/{location}/namespaces/{namespace}/services/{service}.
            - arg_name: github-enterprise-config-ssl-ca-certificate
              api_field: connection.githubEnterpriseConfig.sslCaCertificate
              required: false
              repeated: false
              help_text: |-
                SSL certificate to use for requests to GitHub Enterprise.
        - group:
            required: false
            help_text: |-
              Configuration for connections to gitlab.com.
            params:
            - group:
                required: false
                help_text: |-
                  Represents a personal access token that authorized the Connection,
                  and associated metadata.
                params:
                - arg_name: gitlab-config-read-authorizer-credential-user-token-secret-version
                  help_text: |-
                    A SecretManager resource containing the user token that authorizes
                    the Developer Connect connection. Format:
                    `projects/*/secrets/*/versions/*`.
                  is_positional: false
                  is_primary_resource: false
                  resource_spec: !REF googlecloudsdk.command_lib.developer_connect.v1_resources:project_secret_secret_version
                  resource_method_params:
                    connection.gitlabConfig.readAuthorizerCredential.userTokenSecretVersion: '{__relative_name__}'
                  required: false
            - group:
                required: false
                help_text: |-
                  Represents a personal access token that authorized the Connection,
                  and associated metadata.
                params:
                - arg_name: gitlab-config-authorizer-credential-user-token-secret-version
                  help_text: |-
                    A SecretManager resource containing the user token that authorizes
                    the Developer Connect connection. Format:
                    `projects/*/secrets/*/versions/*`.
                  is_positional: false
                  is_primary_resource: false
                  resource_spec: !REF googlecloudsdk.command_lib.developer_connect.v1_resources:project_secret_secret_version
                  resource_method_params:
                    connection.gitlabConfig.authorizerCredential.userTokenSecretVersion: '{__relative_name__}'
                  required: false
    - help_text: |-
        Identifier. The resource name of the connection, in the format
        `projects/{project}/locations/{location}/connections/{connection_id}`.
      is_positional: true
      resource_spec: !REF googlecloudsdk.command_lib.developer_connect.v1_resources:project_location_connection
      required: true
    - arg_name: labels
      api_field: connection.labels
      required: false
      repeated: true
      help_text: |-
        Labels as key value pairs
      clearable: true
      spec:
      - api_field: key
      - api_field: value
    - arg_name: disabled
      api_field: connection.disabled
      action: store_true
      required: false
      type: bool
      help_text: |-
        If disabled is set to true, functionality is disabled for this connection.
        Repository based API methods and webhooks processing for repositories in
        this connection will be disabled.
      default: null
    - arg_name: annotations
      api_field: connection.annotations
      required: false
      repeated: true
      help_text: |-
        Allows clients to store small amounts of arbitrary data.
      clearable: true
      spec:
      - api_field: key
      - api_field: value
    - arg_name: etag
      api_field: connection.etag
      required: false
      repeated: false
      help_text: |-
        This checksum is computed by the server based on the value of other
        fields, and may be sent on update and delete requests to ensure the
        client has an up-to-date value before proceeding.
    - arg_name: request-id
      api_field: requestId
      required: false
      repeated: false
      help_text: |-
        An optional request ID to identify requests. Specify a unique request ID
        so that if you must retry your request, the server will know to ignore
        the request if it has already been completed. The server will guarantee
        that for at least 60 minutes since the first request.

        For example, consider a situation where you make an initial request and the
        request times out. If you make the request again with the same request
        ID, the server can check if original operation with the same request ID
        was received, and if so, will ignore the second request. This prevents
        clients from accidentally creating duplicate commitments.

        The request ID must be a valid UUID with the exception that zero UUID is
        not supported (00000000-0000-0000-0000-000000000000).
    - arg_name: allow-missing
      api_field: allowMissing
      action: store_true
      required: false
      type: bool
      help_text: |
        If set to true, and the connection is not found a new connection
        will be created. In this situation `update_mask` is ignored.
        The creation will succeed only if the input connection has all the
        necessary information (e.g a github_config with both  user_oauth_token and
        installation_id properties).
      default: null
    - arg_name: validate-only
      api_field: validateOnly
      action: store_true
      required: false
      type: bool
      help_text: |-
        If set, validate the request, but do not actually post it.
      default: null
  request:
    api_version: v1
    collection:
    - developerconnect.projects.locations.connections
    static_fields:
      updateMask: '*'
  async:
    collection:
    - developerconnect.projects.locations.operations
  update:
    read_modify_update: true
    disable_auto_field_mask: true
