# -*- coding: utf-8 -*- #
# Copyright 2024 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - ALPHA
  hidden: true
  help_text:
    brief: Delete a single registry node from a registry book.
    description: |
      Deletes a single registry node from a registry book.
    examples: |-
      To delete a registry node `my-registry-node` from registry book `my-registry-book` run:

      $ {command} my-registry-node  \
          --registry-book=my-registry-book \
          --location=global
  arguments:
    params:
    - help_text: |-
        Name of the resource
      is_positional: true
      resource_spec: !REF googlecloudsdk.command_lib.number_registry.v1alpha_resources:project_location_registry_book_registry_node
      required: true
    - arg_name: request-id
      api_field: requestId
      required: false
      repeated: false
      help_text: |-
        An optional request ID to identify requests. Specify a unique request ID
        so that if you must retry your request, the server will know to ignore
        the request if it has already been completed. The server will guarantee
        that for at least 60 minutes after the first request.

        For example, consider a situation where you make an initial request and the
        request times out. If you make the request again with the same request
        ID, the server can check if original operation with the same request ID
        was received, and if so, will ignore the second request. This prevents
        clients from accidentally creating duplicate commitments.

        The request ID must be a valid UUID with the exception that zero UUID is
        not supported (00000000-0000-0000-0000-000000000000).
  request:
    api_version: v1alpha
    collection:
    - cloudnumberregistry.projects.locations.registryBooks.registryNodes
  async:
    collection:
    - cloudnumberregistry.projects.locations.operations
