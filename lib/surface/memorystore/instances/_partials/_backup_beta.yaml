# -*- coding: utf-8 -*- #
# Copyright 2024 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - BETA
  auto_generated: true
  help_text:
    brief: backup instances
    description: backup instances
    examples: |-
      To backup all instances, run:

      $ {command}
  arguments:
    params:
    - help_text: |-
        Instance resource name using the form:
         `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
        where `location_id` refers to a Google Cloud region.
      is_positional: true
      is_primary_resource: true
      resource_spec: !REF googlecloudsdk.command_lib.memorystore.v1beta_resources:projects_locations_instances
      required: true
    - arg_name: ttl
      api_field: backupInstanceRequest.ttl
      required: false
      repeated: false
      type: googlecloudsdk.core.util.times:ParseDuration
      processor: googlecloudsdk.core.util.times:FormatDurationForJson
      help_text: |-
        TTL for the backup to expire. Value range is 1 day to 100 years. If not
        specified, the default value is 100 years.
    - arg_name: backup-id
      api_field: backupInstanceRequest.backupId
      required: false
      repeated: false
      help_text: |-
        The id of the backup to be created. If not specified, the
        default value ([YYYYMMDDHHMMSS]_[Shortened Instance UID] is used.
  request:
    api_version: v1beta
    collection:
    - memorystore.projects.locations.instances
    method: backup
  async:
    collection:
    - memorystore.projects.locations.operations
