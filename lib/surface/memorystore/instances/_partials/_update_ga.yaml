# -*- coding: utf-8 -*- #
# Copyright 2024 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# NOTE: This file is autogenerated and should not be edited by hand.
# AUTOGEN_CLI_VERSION: HEAD
- release_tracks:
  - GA
  auto_generated: true
  hidden: true
  help_text:
    brief: Update the configuration of a Memorystore instance.
    description: Update the configuration of a Memorystore instance.
    examples: |-
      To update Memorystore instance `my-instance` in project `my-project` and location
      `us-central1` to six shards, run:

      $ {command} `my-instance` --project=my-project --location=us-central1 --shard-count=6

      To update Memorystore instance `my-instance` in project `my-project` and location
      `us-central1` to use a maxmemory-policy of `allkeys-lru`, run:

      $ {command} `my-instance` --project=my-project --location=us-central1
        --update-engine-configs=maxmemory-policy=allkeys-lru
  arguments:
    params:
    - group:
        mutex: true
        help_text: |-
          Arguments for the  replica count.
        params:
        - arg_name: replica-count
          api_field: instance.replicaCount
          required: false
          repeated: false
          type: int
          help_text: |
            Number of replica nodes per shard. If omitted the default is 0 replicas.
    - group:
        mutex: true
        help_text: |-
          Arguments for the  deletion protection enabled.
        params:
        - arg_name: deletion-protection-enabled
          api_field: instance.deletionProtectionEnabled
          action: store_true_false
          required: false
          type: bool
          help_text: |
            If set to true deletion of the instance will fail.
    - help_text: |-
        Identifier. Unique name of the instance.
        Format: projects/{project}/locations/{location}/instances/{instance}
      is_positional: true
      is_primary_resource: true
      resource_spec: !REF googlecloudsdk.command_lib.memorystore.v1_resources:project_location_instance
      required: true
    - arg_name: labels
      api_field: instance.labels
      required: false
      repeated: true
      help_text: |-
        Labels to represent user-provided metadata.
      clearable: true
      spec:
      - api_field: key
      - api_field: value
    - arg_name: shard-count
      api_field: instance.shardCount
      required: false
      repeated: false
      type: int
      help_text: |-
        Number of shards for the instance.
    - group:
        required: false
        help_text: |-
          Represents persistence configuration for a instance.
        params:
        - arg_name: persistence-config-mode
          api_field: instance.persistenceConfig.mode
          required: false
          help_text: |-
            Current persistence mode.
          choices:
          - arg_value: disabled
            enum_value: DISABLED
            help_text: |-
              Persistence is disabled, and any snapshot data is deleted.
          - arg_value: rdb
            enum_value: RDB
            help_text: |-
              RDB based persistence is enabled.
          - arg_value: aof
            enum_value: AOF
            help_text: |-
              AOF based persistence is enabled.
        - group:
            required: false
            help_text: |-
              Configuration for RDB based persistence.
            params:
            - arg_name: rdb-config-snapshot-period
              api_field: instance.persistenceConfig.rdbConfig.rdbSnapshotPeriod
              required: false
              help_text: |-
                Period between RDB snapshots.
              choices:
              - arg_value: one-hour
                enum_value: ONE_HOUR
                help_text: |-
                  One hour.
              - arg_value: six-hours
                enum_value: SIX_HOURS
                help_text: |-
                  Six hours.
              - arg_value: twelve-hours
                enum_value: TWELVE_HOURS
                help_text: |-
                  Twelve hours.
              - arg_value: twenty-four-hours
                enum_value: TWENTY_FOUR_HOURS
                help_text: |-
                  Twenty four hours.
            - arg_name: rdb-config-snapshot-start-time
              api_field: instance.persistenceConfig.rdbConfig.rdbSnapshotStartTime
              required: false
              repeated: false
              type: googlecloudsdk.core.util.times:ParseDateTime
              processor: googlecloudsdk.core.util.times:FormatDateTime
              help_text: |-
                Time that the first snapshot was/will be attempted, and to which future
                snapshots will be aligned. If not provided, the current time will be
                used.
        - group:
            required: false
            help_text: |-
              Configuration for AOF based persistence.
            params:
            - arg_name: aof-config-append-fsync
              api_field: instance.persistenceConfig.aofConfig.appendFsync
              required: false
              help_text: |-
                The fsync mode.
              choices:
              - arg_value: never
                enum_value: NEVER
                help_text: |-
                  Never fsync. Normally Linux will flush data every 30 seconds with this
                  configuration, but it's up to the kernel's exact tuning.
              - arg_value: every-sec
                enum_value: EVERY_SEC
                help_text: |-
                  Fsync every second. You may lose 1 second of data if there is a
                  disaster.
              - arg_value: always
                enum_value: ALWAYS
                help_text: |-
                  Fsync every time new write commands are appended to the AOF. The best
                  data loss protection at the cost of performance.
    - arg_name: engine-configs
      api_field: instance.engineConfigs
      required: false
      repeated: true
      help_text: |-
        User-provided engine configurations for the instance.
      clearable: true
      spec:
      - api_field: key
      - api_field: value
    - arg_name: request-id
      api_field: requestId
      required: false
      repeated: false
      help_text: |-
        An optional request ID to identify requests. Specify a unique request ID
        so that if you must retry your request, the server will know to ignore
        the request if it has already been completed. The server will guarantee
        that for at least 60 minutes since the first request.

        For example, consider a situation where you make an initial request and the
        request times out. If you make the request again with the same request
        ID, the server can check if original operation with the same request ID
        was received, and if so, will ignore the second request. This prevents
        clients from accidentally creating duplicate commitments.

        The request ID must be a valid UUID with the exception that zero UUID is
        not supported (00000000-0000-0000-0000-000000000000).
  request:
    api_version: v1
    collection:
    - memorystore.projects.locations.instances
  async:
    collection:
    - memorystore.projects.locations.operations
  update:
    read_modify_update: true
