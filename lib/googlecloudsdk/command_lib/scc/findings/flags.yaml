# Copyright 2019 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Shared flags definitions for finding commands.

compare_duration:
  arg_name: compare-duration
  type: googlecloudsdk.core.util.times:ParseDuration
  processor: googlecloudsdk.core.util.times:FormatDurationForJson
  api_field: compareDuration
  is_positional: false
  required: false
  help_text: |
    When compare_duration is set, the result's "state_change" attribute is updated to
    indicate whether the finding had its state changed, the finding's state remained unchanged,
    or if the finding was added during the compare_duration period of time that precedes the
    read_time. This is the time between (read_time - compare_duration) and read_time.
    The state_change value is derived based on the presence and state of the finding at the two
    points in time. Intermediate state changes between the two times don't affect the result.
    For example, the results aren't affected if the finding is made inactive and then active
    again. Possible "state_change" values when compare_duration is specified:

    * 'CHANGED': indicates that the finding was present at the start of compare_duration, but
      changed its state at read_time.

    * 'UNCHANGED': indicates that the finding was present at the start of compare_duration and
      did not change state at read_time.

    * 'ADDED': indicates that the finding was not present at the start of compare_duration, but
      was present at read_time.

    * 'REMOVED': indicates that the finding was present at the start of compare_duration, but
      was not present at read_time.

    If compare_duration is not specified, then the only possible state_change is 'UNUSED',
    which will be the state_change set for all findings present at read_time. If this field is
    set then 'state_change' must be a specified field in 'group_by'. See
    `$ gcloud topic datetimes` for information on supported duration formats.

event_time:
  arg_name: event-time
  type: googlecloudsdk.core.util.times:ParseDateTime
  processor: googlecloudsdk.core.util.times:FormatDateTime
  api_field: finding.eventTime
  is_positional: false
  required: false
  help_text: |
    Time at which the event took place. For example, if the finding represents an open
    firewall it would capture the time the open firewall was detected. If event-time is not
    provided, it will default to UTC version of NOW. See `$ gcloud topic datetimes` for
    information on supported time formats.

external_uri:
  arg_name: external-uri
  api_field: finding.externalUri
  is_positional: false
  required: false
  help_text: |
    URI that, if available, points to a web page outside of Cloud SCC (Security Command Center)
    where additional information about the finding can be found. This field is guaranteed to be
    either empty or a well formed URL.

source:
  arg_name: source
  is_positional: false
  required: false
  default: "-"
  help_text: |
    Source id. Defaults to all sources.

source_properties:
  arg_name: source-properties
  api_field: finding.sourceProperties
  is_positional: false
  required: false
  help_text: |
    Source specific properties. These properties are managed by the source that writes the
    finding. The key names in the source_properties map must be between 1 and 255 characters,
    and must start with a letter and contain alphanumeric characters or underscores only.
    For example "key1=val1,key2=val2"
  type: "googlecloudsdk.calliope.arg_parsers:ArgDict:"
  processor: googlecloudsdk.command_lib.scc.hooks:SourcePropertiesHook

state:
  arg_name: state
  api_field: finding.state
  is_positional: false
  required: false
  help_text: |
    State is one of: [ACTIVE, INACTIVE].
