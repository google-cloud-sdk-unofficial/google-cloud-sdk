{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "cloudasset:v1p7beta1",
  "name": "cloudasset",
  "canonicalName": "Cloud Asset",
  "version": "v1p7beta1",
  "revision": "0",
  "title": "Cloud Asset API",
  "description": "The cloud asset API manages the history and inventory of cloud resources.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/asset-inventory/docs/quickstart",
  "protocol": "rest",
  "rootUrl": "https://cloudasset.googleapis.com/",
  "mtlsRootUrl": "https://cloudasset.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://cloudasset.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ExportAssetsRequest": {
      "id": "ExportAssetsRequest",
      "description": "Export asset request.",
      "type": "object",
      "properties": {
        "readTime": {
          "description": "Timestamp to take an asset snapshot. This can only be set to a timestamp between the current time and the current time minus 35 days (inclusive). If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.",
          "type": "string",
          "format": "google-datetime"
        },
        "assetTypes": {
          "description": "A list of asset types to take a snapshot for. For example: \"compute.googleapis.com\/Disk\". Regular expressions are also supported. For example: * \"compute.googleapis.com.*\" snapshots resources whose asset type starts with \"compute.googleapis.com\". * \".*Instance\" snapshots resources whose asset type ends with \"Instance\". * \".*Instance.*\" snapshots resources whose asset type contains \"Instance\". See [RE2](https:\/\/github.com\/google\/re2\/wiki\/Syntax) for all supported regular expression syntax. If the regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned, otherwise, it will snapshot all asset types. See [Introduction to Cloud Asset Inventory](https:\/\/cloud.google.com\/asset-inventory\/docs\/overview) for all supported asset types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contentType": {
          "description": "Asset content type. If not specified, no content but the asset name will be returned.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified content type.",
            "Resource metadata.",
            "The actual IAM policy set on a resource.",
            "The Cloud Organization Policy set on an asset.",
            "The Cloud Access context manager Policy set on an asset.",
            "The related resources."
          ],
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "RESOURCE",
            "IAM_POLICY",
            "ORG_POLICY",
            "ACCESS_POLICY",
            "RELATIONSHIP"
          ]
        },
        "outputConfig": {
          "description": "Required. Output configuration indicating where the results will be output to.",
          "$ref": "OutputConfig"
        },
        "relationshipTypes": {
          "description": "A list of relationship types to export, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. If specified, it will snapshot [asset_types]' specified relationships, or give errors if any relationship_types' supported types are not in [asset_types]. If not specified, it will snapshot all [asset_types]' supported relationships. An unspecified [asset_types] field means all supported asset_types. See [Introduction to Cloud Asset Inventory](https:\/\/cloud.google.com\/asset-inventory\/docs\/overview) for all supported asset types and relationship types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OutputConfig": {
      "id": "OutputConfig",
      "description": "Output configuration for export assets destination.",
      "type": "object",
      "properties": {
        "gcsDestination": {
          "description": "Destination on Cloud Storage.",
          "$ref": "GcsDestination"
        },
        "bigqueryDestination": {
          "description": "Destination on BigQuery. The output table stores the fields in asset proto as columns in BigQuery.",
          "$ref": "BigQueryDestination"
        }
      }
    },
    "GcsDestination": {
      "id": "GcsDestination",
      "description": "A Cloud Storage location.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The uri of the Cloud Storage object. It's the same uri that is used by gsutil. Example: \"gs:\/\/bucket_name\/object_name\". See [Viewing and Editing Object Metadata](https:\/\/cloud.google.com\/storage\/docs\/viewing-editing-metadata) for more information.",
          "type": "string"
        },
        "uriPrefix": {
          "description": "The uri prefix of all generated Cloud Storage objects. Example: \"gs:\/\/bucket_name\/object_name_prefix\". Each object uri is in format: \"gs:\/\/bucket_name\/object_name_prefix\/{ASSET_TYPE}\/{SHARD_NUMBER} and only contains assets for that type. starts from 0. Example: \"gs:\/\/bucket_name\/object_name_prefix\/compute.googleapis.com\/Disk\/0\" is the first shard of output objects containing all compute.googleapis.com\/Disk assets. An INVALID_ARGUMENT error will be returned if file with the same name \"gs:\/\/bucket_name\/object_name_prefix\" already exists.",
          "type": "string"
        }
      }
    },
    "BigQueryDestination": {
      "id": "BigQueryDestination",
      "description": "A BigQuery destination for exporting assets to.",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Required. The BigQuery dataset in format \"projects\/projectId\/datasets\/datasetId\", to which the snapshot result should be exported. If this dataset does not exist, the export call returns an INVALID_ARGUMENT error.",
          "type": "string"
        },
        "table": {
          "description": "Required. The BigQuery table to which the snapshot result should be written. If this table does not exist, a new table with the given name will be created.",
          "type": "string"
        },
        "force": {
          "description": "If the destination table already exists and this flag is `TRUE`, the table will be overwritten by the contents of assets snapshot. If the flag is `FALSE` or unset and the destination table already exists, the export call returns an INVALID_ARGUMEMT error.",
          "type": "boolean"
        },
        "partitionSpec": {
          "description": "[partition_spec] determines whether to export to partitioned table(s) and how to partition the data. If [partition_spec] is unset or [partition_spec.partition_key] is unset or `PARTITION_KEY_UNSPECIFIED`, the snapshot results will be exported to non-partitioned table(s). [force] will decide whether to overwrite existing table(s). If [partition_spec] is specified. First, the snapshot results will be written to partitioned table(s) with two additional timestamp columns, readTime and requestTime, one of which will be the partition key. Secondly, in the case when any destination table already exists, it will first try to update existing table's schema as necessary by appending additional columns. Then, if [force] is `TRUE`, the corresponding partition will be overwritten by the snapshot results (data in different partitions will remain intact); if [force] is unset or `FALSE`, it will append the data. An error will be returned if the schema update or data appension fails.",
          "$ref": "PartitionSpec"
        },
        "separateTablesPerAssetType": {
          "description": "If this flag is `TRUE`, the snapshot results will be written to one or multiple tables, each of which contains results of one asset type. The [force] and [partition_spec] fields will apply to each of them. Field [table] will be concatenated with \"_\" and the asset type names (see https:\/\/cloud.google.com\/asset-inventory\/docs\/supported-asset-types for supported asset types) to construct per-asset-type table names, in which all non-alphanumeric characters like \".\" and \"\/\" will be substituted by \"_\". Example: if field [table] is \"mytable\" and snapshot results contain \"storage.googleapis.com\/Bucket\" assets, the corresponding table name will be \"mytable_storage_googleapis_com_Bucket\". If any of these tables does not exist, a new table with the concatenated name will be created. When [content_type] in the ExportAssetsRequest is `RESOURCE`, the schema of each table will include RECORD-type columns mapped to the nested fields in the Asset.resource.data field of that asset type (up to the 15 nested level BigQuery supports (https:\/\/cloud.google.com\/bigquery\/docs\/nested-repeated#limitations)). The fields in >15 nested levels will be stored in JSON format string as a child column of its parent RECORD column. If error occurs when exporting to any table, the whole export call will return an error but the export results that already succeed will persist. Example: if exporting to table_type_A succeeds when exporting to table_type_B fails during one export call, the results in table_type_A will persist and there will not be partial results persisting in a table.",
          "type": "boolean"
        }
      }
    },
    "PartitionSpec": {
      "id": "PartitionSpec",
      "description": "Specifications of BigQuery partitioned table as export destination.",
      "type": "object",
      "properties": {
        "partitionKey": {
          "description": "The partition key for BigQuery partitioned table.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified partition key. If used, it means using non-partitioned table.",
            "The time when the snapshot is taken. If specified as partition key, the result table(s) is partitoned by the additional timestamp column, readTime. If [read_time] in ExportAssetsRequest is specified, the readTime column's value will be the same as it. Otherwise, its value will be the current time that is used to take the snapshot.",
            "The time when the request is received and started to be processed. If specified as partition key, the result table(s) is partitoned by the requestTime column, an additional timestamp column representing when the request was received."
          ],
          "enum": [
            "PARTITION_KEY_UNSPECIFIED",
            "READ_TIME",
            "REQUEST_TIME"
          ]
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    }
  },
  "resources": {
    "v1p7beta1": {
      "methods": {
        "exportAssets": {
          "id": "cloudasset.exportAssets",
          "path": "v1p7beta1/{+parent}:exportAssets",
          "flatPath": "v1p7beta1/{v1p7beta1Id}/{v1p7beta1Id1}:exportAssets",
          "httpMethod": "POST",
          "parameters": {
            "parent": {
              "description": "Required. The relative name of the root asset. This can only be an organization number (such as \"organizations\/123\"), a project ID (such as \"projects\/my-project-id\"), or a project number (such as \"projects\/12345\"), or a folder number (such as \"folders\/123\").",
              "location": "path",
              "required": true,
              "pattern": "^[^\/]+\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "request": {
            "$ref": "ExportAssetsRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Exports assets with time and resource types to a given Cloud Storage location\/BigQuery table. For Cloud Storage location destinations, the output format is newline-delimited JSON. Each line represents a google.cloud.asset.v1p7beta1.Asset in the JSON format; for BigQuery table destinations, the output table stores the fields in asset proto as columns. This API implements the google.longrunning.Operation API , which allows you to keep track of the export. We recommend intervals of at least 2 seconds with exponential retry to poll the export operation result. For regular-size resource parent, the export operation usually finishes within 5 minutes."
        }
      }
    }
  },
  "basePath": ""
}