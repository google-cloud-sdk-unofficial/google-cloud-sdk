{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "ids:v1",
  "name": "ids",
  "canonicalName": "IDS",
  "version": "v1",
  "revision": "0",
  "title": "Cloud IDS API",
  "description": "Cloud IDS (Cloud Intrusion Detection System) detects malware, spyware, command-and-control attacks, and other network-based threats. Its security efficacy is industry leading, built with Palo Alto Networks technologies. When you use this product, your organization name and consumption levels will be shared with Palo Alto Networks.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/",
  "protocol": "rest",
  "rootUrl": "https://ids.googleapis.com/",
  "mtlsRootUrl": "https://ids.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://ids.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListEndpointsResponse": {
      "id": "ListEndpointsResponse",
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "The list of endpoints response.",
          "type": "array",
          "items": {
            "$ref": "Endpoint"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Endpoint": {
      "id": "Endpoint",
      "description": "Endpoint describes a single IDS endpoint. It defines a forwarding rule to which packets can be sent for IDS inspection.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the endpoint.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The update time timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The labels of the endpoint.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "network": {
          "description": "Required. The fully qualified URL of the network to which the IDS Endpoint is attached.",
          "type": "string"
        },
        "endpointForwardingRule": {
          "description": "Output only. The fully qualified URL of the endpoint's ILB Forwarding Rule.",
          "readOnly": true,
          "type": "string"
        },
        "endpointIp": {
          "description": "Output only. The IP address of the IDS Endpoint's ILB.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "User-provided description of the endpoint",
          "type": "string"
        },
        "severity": {
          "description": "Required. Lowest threat severity that this endpoint will alert on.",
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "Informational alerts.",
            "Low severity alerts.",
            "Medium severity alerts.",
            "High severity alerts.",
            "Critical severity alerts."
          ],
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "INFORMATIONAL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ]
        },
        "threatExceptions": {
          "description": "List of threat IDs to be excepted from generating alerts.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. Current state of the endpoint.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "Being created.",
            "Active and ready for traffic.",
            "Being deleted.",
            "Being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ]
        },
        "trafficLogs": {
          "description": "Whether the endpoint should report traffic logs in addition to threat logs.",
          "type": "boolean"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY\/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW\/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}\/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https:\/\/cloud.google.com\/kubernetes-engine\/docs\/how-to\/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace\/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        },
        "bindingId": {
          "type": "string"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreChildExemptions": {
          "type": "boolean"
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "permissions": {
          "description": "A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "type": "string",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log the request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log the request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if the PRINCIPAL\/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches if the PRINCIPAL\/AUTHORITY_SELECTOR is in none of the entries. The format for in and not_in entries can be found at in the Local IAM documentation (see go\/local-iam#features).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Additional restrictions that must be met. All conditions must pass for the rule to match.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of CheckPolicy for any entries that match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "iam": {
          "description": "Trusted attributes supplied by the IAM system.",
          "type": "string",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which must only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go\/security-realms). When used with IN, the condition indicates \"any of the request's realms match one of the given values; with NOT_IN, \"none of the realms match any of the given values\". Note that a value can be: - 'self:campus' (i.e., clients that are in the same campus) - 'self:metro' (i.e., clients that are in the same metro) - 'self:cloud-region' (i.e., allow connections from clients that are in the same cloud region) - 'self:prod-region' (i.e., allow connections from clients that are in the same prod region) - 'guardians' (i.e., allow connections from its guardian realms. See go\/security-realms-glossary#guardian for more information.) - 'self' [DEPRECATED] (i.e., allow connections from clients that are in the same security realm, which is currently but not guaranteed to be campus-sized) - a realm (e.g., 'campus-abc') - a realm group (e.g., 'realms-for-borg-cell-xx', see: go\/realm-groups) A match is determined by a realm group membership check performed by a RealmAclRep object (go\/realm-acl-howto). It is not permitted to grant access based on the *absence* of a realm, so realm conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this request. When used with IN, the condition indicates that one of the approvers associated with the request matches the specified principal, or is a member of the specified group. Approvers can only grant additional access, and are thus only used in a strictly positive context (e.g. ALLOW\/IN or DENY\/NOT_IN).",
            "What types of justifications have been supplied with this request. String values should match enum names from security.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not permitted to grant access based on the *absence* of a justification, so justification conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN). Multiple justifications, e.g., a Buganizer ID and a manually-entered reason, are normal and supported.",
            "What type of credentials have been supplied with this request. String values should match enum names from security_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY is supported. It is not permitted to grant access based on the *absence* of a credentials type, so the conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN).",
            "EXPERIMENTAL -- DO NOT USE. The conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN)."
          ],
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE",
            "CREDS_ASSERTION"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.",
          "type": "string",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "description": "An operator to apply the subject with.",
          "type": "string",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is a set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is a set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "values": {
          "description": "The objects of the condition.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "Specifies what kind of log the caller must write",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        },
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "CloudAuditOptions"
        }
      }
    },
    "CounterOptions": {
      "id": "CounterOptions",
      "description": "Increment a streamz counter with the specified metric and field names. Metric names should start with a '\/', generally be lowercase-only, and end in \"_count\". Field names should not contain an initial slash. The actual exported metric names will have \"\/iam\/policy\" prepended. Field names correspond to IAM request parameters and field values are their respective values. Supported field names: - \"authority\", which is \"[token]\" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - \"iam_principal\", a representation of IAMContext.principal even if a token or authority selector is present; or - \"\" (empty string), resulting in a counter with no fields. Examples: counter { metric: \"\/debug_access_count\" field: \"iam_principal\" } ==> increment counter \/iam\/policy\/debug_access_count {iam_principal=[value of IAMContext.principal]}",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom fields.",
          "type": "array",
          "items": {
            "$ref": "CustomField"
          }
        }
      }
    },
    "CustomField": {
      "id": "CustomField",
      "description": "Custom fields. These can be used to create a counter with arbitrary field\/value pairs. See: go\/rpcsp-custom-fields.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the field name.",
          "type": "string"
        },
        "value": {
          "description": "Value is the field value. It is important that in contrast to the CounterOptions.field, the value here is a constant that is not derived from the IAMContext.",
          "type": "string"
        }
      }
    },
    "DataAccessOptions": {
      "id": "DataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
        "logMode": {
          "type": "string",
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after the authorization check. If client chooses to write one and it fails, client may either fail open (allow the operation to continue) or fail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization check is being made may only be performed if it is successfully logged to Gin. For instance, the authorization library may satisfy this obligation by emitting a partial log entry at authorization check time and only returning ALLOW to the application if it succeeds. If a matching Rule has this directive, but the client has not indicated that it will honor such requirements, then the IAM check will result in authorization failure by setting CheckPolicyResponse.success=false."
          ],
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ]
        }
      }
    },
    "CloudAuditOptions": {
      "id": "CloudAuditOptions",
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
        "logName": {
          "description": "The log_name to populate in the Cloud Audit Record.",
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com\/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com\/data_access\""
          ],
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ]
        },
        "authorizationLoggingOptions": {
          "description": "Information used by the Cloud Audit Logging pipeline.",
          "$ref": "AuthorizationLoggingOptions"
        }
      }
    },
    "AuthorizationLoggingOptions": {
      "id": "AuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object",
      "properties": {
        "permissionType": {
          "description": "The type of the permission that was checked.",
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ]
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "BillingView": {
      "id": "BillingView",
      "description": "Message for reporting billing requests through Eventstream.",
      "type": "object",
      "properties": {
        "reportRequests": {
          "description": "Billing requests to be reported for cloud.eventstream.v2.ResourceEvent Each request contains billing operations to be reported under a service name. See go\/billing-view-construction for documentation on constructing billing view report requests.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1ReportRequest"
          }
        }
      }
    },
    "GoogleApiServicecontrolV1ReportRequest": {
      "id": "GoogleApiServicecontrolV1ReportRequest",
      "description": "Request message for the Report method.",
      "type": "object",
      "properties": {
        "serviceName": {
          "description": "The service name as specified in its service configuration. For example, `\"pubsub.googleapis.com\"`. See [google.api.Service](https:\/\/cloud.google.com\/service-management\/reference\/rpc\/google.api#google.api.Service) for the definition of a service name.",
          "type": "string"
        },
        "operations": {
          "description": "Operations to be reported. Typically the service should report one operation per request. Putting multiple operations into a single request is allowed, but should be used only when multiple operations are natually available at the time of the report. There is no limit on the number of operations in the same ReportRequest, however the ReportRequest size should be no larger than 1MB. See ReportResponse.report_errors for partial failure behavior.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1Operation"
          }
        },
        "serviceConfigId": {
          "description": "Specifies which version of service config should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1Operation": {
      "id": "GoogleApiServicecontrolV1Operation",
      "description": "Represents information regarding an operation.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "Identity of the operation. This must be unique within the scope of the service that generated the operation. If the service calls Check() and Report() on the same operation, the two calls should carry the same id. UUID version 4 is recommended, though not required. In scenarios where an operation is computed from existing information and an idempotent id is desirable for deduplication purpose, UUID version 5 is recommended. See RFC 4122 for details.",
          "type": "string"
        },
        "operationName": {
          "description": "Fully qualified name of the operation. Reserved for future use.",
          "type": "string"
        },
        "consumerId": {
          "description": "Identity of the consumer who is using the service. This field should be filled in for the operations initiated by a consumer, but not for service-initiated operations that are not related to a specific consumer. - This can be in one of the following formats: - project:PROJECT_ID, - project`_`number:PROJECT_NUMBER, - projects\/PROJECT_ID or PROJECT_NUMBER, - folders\/FOLDER_NUMBER, - organizations\/ORGANIZATION_NUMBER, - api`_`key:API_KEY.",
          "type": "string"
        },
        "startTime": {
          "description": "Required. Start time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "End time of the operation. Required when the operation is used in ServiceController.Report, but optional when the operation is used in ServiceController.Check.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels describing the operation. Only the following labels are allowed: - Labels describing monitored resources as defined in the service configuration. - Default labels of metric values. When specified, labels defined in the metric value override these default. - The following labels defined by Google Cloud Platform: - `cloud.googleapis.com\/location` describing the location where the operation happened, - `servicecontrol.googleapis.com\/user_agent` describing the user agent of the API request, - `servicecontrol.googleapis.com\/service_agent` describing the service used to handle the API request (e.g. ESP), - `servicecontrol.googleapis.com\/platform` describing the platform where the API is served, such as App Engine, Compute Engine, or Kubernetes Engine.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metricValueSets": {
          "description": "Represents information about this operation. Each MetricValueSet corresponds to a metric defined in the service configuration. The data type used in the MetricValueSet must agree with the data type specified in the metric definition. Within a single operation, it is not allowed to have more than one MetricValue instances that have the same metric names and identical label value combinations. If a request has such duplicated MetricValue instances, the entire request is rejected with an invalid argument error.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1MetricValueSet"
          }
        },
        "logEntries": {
          "description": "Represents information to be logged.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1LogEntry"
          }
        },
        "quotaProperties": {
          "description": "Represents the properties needed for quota check. Applicable only if this operation is for a quota check request. If this is not specified, no quota check will be performed.",
          "$ref": "GoogleApiServicecontrolV1QuotaProperties"
        },
        "importance": {
          "description": "DO NOT USE. This is an experimental field.",
          "type": "string",
          "enumDescriptions": [
            "Allows data caching, batching, and aggregation. It provides higher performance with higher data loss risk.",
            "Disables data aggregation to minimize data loss. It is for operations that contains significant monetary value or audit trail. This feature only applies to the client libraries.",
            "Deprecated. Do not use. Disables data aggregation and enables additional validation logic. It should only be used during the onboarding process. It is only available to Google internal services, and the service must be approved by chemist-dev@google.com in order to use this level."
          ],
          "enum": [
            "LOW",
            "HIGH",
            "DEBUG"
          ]
        },
        "userLabels": {
          "description": "Private Preview. This feature is only available for approved services. User defined labels for the resource that this operation is associated with.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resources": {
          "description": "The resources that are involved in the operation. The maximum supported number of entries in this field is 100.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1ResourceInfo"
          }
        },
        "traceSpans": {
          "description": "Unimplemented. A list of Cloud Trace spans. The span names shall contain the id of the destination project which can be either the produce or the consumer project.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1TraceSpan"
          }
        }
      }
    },
    "GoogleApiServicecontrolV1MetricValueSet": {
      "id": "GoogleApiServicecontrolV1MetricValueSet",
      "description": "Represents a set of metric values in the same metric. Each metric value in the set should have a unique combination of start time, end time, and label values.",
      "type": "object",
      "properties": {
        "metricName": {
          "description": "The metric name defined in the service configuration.",
          "type": "string"
        },
        "metricValues": {
          "description": "The values in this metric.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1MetricValue"
          }
        }
      }
    },
    "GoogleApiServicecontrolV1MetricValue": {
      "id": "GoogleApiServicecontrolV1MetricValue",
      "description": "Represents a single metric value.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "The labels describing the metric value. See comments on google.api.servicecontrol.v1.Operation.labels for the overriding relationship. Note that this map must not contain monitored resource labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startTime": {
          "description": "The start of the time period over which this metric value's measurement applies. The time period has different semantics for different metric types (cumulative, delta, and gauge). See the metric definition documentation in the service configuration for details. If not specified, google.api.servicecontrol.v1.Operation.start_time will be used.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The end of the time period over which this metric value's measurement applies. If not specified, google.api.servicecontrol.v1.Operation.end_time will be used.",
          "type": "string",
          "format": "google-datetime"
        },
        "boolValue": {
          "description": "A boolean value.",
          "type": "boolean"
        },
        "int64Value": {
          "description": "A signed 64-bit integer value.",
          "type": "string",
          "format": "int64"
        },
        "doubleValue": {
          "description": "A double precision floating point value.",
          "type": "number",
          "format": "double"
        },
        "stringValue": {
          "description": "A text string value.",
          "type": "string"
        },
        "distributionValue": {
          "description": "A distribution value.",
          "$ref": "GoogleApiServicecontrolV1Distribution"
        },
        "moneyValue": {
          "description": "A money value.",
          "$ref": "Money"
        }
      }
    },
    "GoogleApiServicecontrolV1Distribution": {
      "id": "GoogleApiServicecontrolV1Distribution",
      "description": "Distribution represents a frequency distribution of double-valued sample points. It contains the size of the population of sample points plus additional optional information: * the arithmetic mean of the samples * the minimum and maximum of the samples * the sum-squared-deviation of the samples, used to compute variance * a histogram of the values of the sample points",
      "type": "object",
      "properties": {
        "count": {
          "description": "The total number of samples in the distribution. Must be >= 0.",
          "type": "string",
          "format": "int64"
        },
        "mean": {
          "description": "The arithmetic mean of the samples in the distribution. If `count` is zero then this field must be zero.",
          "type": "number",
          "format": "double"
        },
        "minimum": {
          "description": "The minimum of the population of values. Ignored if `count` is zero.",
          "type": "number",
          "format": "double"
        },
        "maximum": {
          "description": "The maximum of the population of values. Ignored if `count` is zero.",
          "type": "number",
          "format": "double"
        },
        "sumOfSquaredDeviation": {
          "description": "The sum of squared deviations from the mean: Sum[i=1..count]((x_i - mean)^2) where each x_i is a sample values. If `count` is zero then this field must be zero, otherwise validation of the request fails.",
          "type": "number",
          "format": "double"
        },
        "bucketCounts": {
          "description": "The number of samples in each histogram bucket. `bucket_counts` are optional. If present, they must sum to the `count` value. The buckets are defined below in `bucket_option`. There are N buckets. `bucket_counts[0]` is the number of samples in the underflow bucket. `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples in each of the finite buckets. And `bucket_counts[N] is the number of samples in the overflow bucket. See the comments of `bucket_option` below for more details. Any suffix of trailing zeros may be omitted.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "linearBuckets": {
          "description": "Buckets with constant width.",
          "$ref": "GoogleApiServicecontrolV1LinearBuckets"
        },
        "exponentialBuckets": {
          "description": "Buckets with exponentially growing width.",
          "$ref": "GoogleApiServicecontrolV1ExponentialBuckets"
        },
        "explicitBuckets": {
          "description": "Buckets with arbitrary user-provided width.",
          "$ref": "GoogleApiServicecontrolV1ExplicitBuckets"
        },
        "exemplars": {
          "description": "Example points. Must be in increasing order of `value` field.",
          "type": "array",
          "items": {
            "$ref": "Exemplar"
          }
        }
      }
    },
    "GoogleApiServicecontrolV1LinearBuckets": {
      "id": "GoogleApiServicecontrolV1LinearBuckets",
      "description": "Describing buckets with constant width.",
      "type": "object",
      "properties": {
        "numFiniteBuckets": {
          "description": "The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is `num_finite_buckets` + 2. See comments on `bucket_options` for details.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive. Must be strictly positive.",
          "type": "number",
          "format": "double"
        },
        "offset": {
          "description": "The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleApiServicecontrolV1ExponentialBuckets": {
      "id": "GoogleApiServicecontrolV1ExponentialBuckets",
      "description": "Describing buckets with exponentially growing width.",
      "type": "object",
      "properties": {
        "numFiniteBuckets": {
          "description": "The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is `num_finite_buckets` + 2. See comments on `bucket_options` for details.",
          "type": "integer",
          "format": "int32"
        },
        "growthFactor": {
          "description": "The i'th exponential bucket covers the interval [scale * growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to num_finite_buckets inclusive. Must be larger than 1.0.",
          "type": "number",
          "format": "double"
        },
        "scale": {
          "description": "The i'th exponential bucket covers the interval [scale * growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to num_finite_buckets inclusive. Must be > 0.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleApiServicecontrolV1ExplicitBuckets": {
      "id": "GoogleApiServicecontrolV1ExplicitBuckets",
      "description": "Describing buckets with arbitrary user-provided width.",
      "type": "object",
      "properties": {
        "bounds": {
          "description": "'bound' is a list of strictly increasing boundaries between buckets. Note that a list of length N-1 defines N buckets because of fenceposting. See comments on `bucket_options` for details. The i'th finite bucket covers the interval [bound[i-1], bound[i]) where i ranges from 1 to bound_size() - 1. Note that there are no finite buckets at all if 'bound' only contains a single element; in that special case the single bound defines the boundary between the underflow and overflow buckets. bucket number lower bound upper bound i == 0 (underflow) -inf bound[i] 0 < i < bound_size() bound[i-1] bound[i] i == bound_size() (overflow) bound[i-1] +inf",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "Exemplar": {
      "id": "Exemplar",
      "description": "Exemplars are example points that may be used to annotate aggregated distribution values. They are metadata that gives information about a particular value added to a Distribution bucket, such as a trace ID that was active when a value was added. They may contain further information, such as a example values and timestamps, origin, etc.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the exemplar point. This value determines to which bucket the exemplar belongs.",
          "type": "number",
          "format": "double"
        },
        "timestamp": {
          "description": "The observation (sampling) time of the above value.",
          "type": "string",
          "format": "google-datetime"
        },
        "attachments": {
          "description": "Contextual information about the example value. Examples are: Trace: type.googleapis.com\/google.monitoring.v3.SpanContext Literal string: type.googleapis.com\/google.protobuf.StringValue Labels dropped during aggregation: type.googleapis.com\/google.monitoring.v3.DroppedLabels There may be only a single attachment of any given message type in a single exemplar, and this is enforced by the system.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Money": {
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleApiServicecontrolV1LogEntry": {
      "id": "GoogleApiServicecontrolV1LogEntry",
      "description": "An individual log entry.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The log to which this log entry belongs. Examples: `\"syslog\"`, `\"book_log\"`.",
          "type": "string"
        },
        "timestamp": {
          "description": "The time the event described by the log entry occurred. If omitted, defaults to operation start time.",
          "type": "string",
          "format": "google-datetime"
        },
        "severity": {
          "description": "The severity of the log entry. The default value is `LogSeverity.DEFAULT`.",
          "type": "string",
          "enumDescriptions": [
            "(0) The log entry has no assigned severity level.",
            "(100) Debug or trace information.",
            "(200) Routine information, such as ongoing status or performance.",
            "(300) Normal but significant events, such as start up, shut down, or a configuration change.",
            "(400) Warning events might cause problems.",
            "(500) Error events are likely to cause problems.",
            "(600) Critical events cause more severe problems or outages.",
            "(700) A person must take an action immediately.",
            "(800) One or more systems are unusable."
          ],
          "enum": [
            "DEFAULT",
            "DEBUG",
            "INFO",
            "NOTICE",
            "WARNING",
            "ERROR",
            "CRITICAL",
            "ALERT",
            "EMERGENCY"
          ]
        },
        "httpRequest": {
          "description": "Optional. Information about the HTTP request associated with this log entry, if applicable.",
          "$ref": "GoogleApiServicecontrolV1HttpRequest"
        },
        "trace": {
          "description": "Optional. Resource name of the trace associated with the log entry, if any. If this field contains a relative resource name, you can assume the name is relative to `\/\/tracing.googleapis.com`. Example: `projects\/my-projectid\/traces\/06796866738c859f2f19b7cfb3214824`",
          "type": "string"
        },
        "insertId": {
          "description": "A unique ID for the log entry used for deduplication. If omitted, the implementation will generate one based on operation_id.",
          "type": "string"
        },
        "labels": {
          "description": "A set of user-defined (key, value) data that provides additional information about the log entry.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "protoPayload": {
          "description": "The log entry payload, represented as a protocol buffer that is expressed as a JSON object. The only accepted type currently is AuditLog.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "textPayload": {
          "description": "The log entry payload, represented as a Unicode string (UTF-8).",
          "type": "string"
        },
        "structPayload": {
          "description": "The log entry payload, represented as a structure that is expressed as a JSON object.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "operation": {
          "description": "Optional. Information about an operation associated with the log entry, if applicable.",
          "$ref": "GoogleApiServicecontrolV1LogEntryOperation"
        },
        "sourceLocation": {
          "description": "Optional. Source code location information associated with the log entry, if any.",
          "$ref": "GoogleApiServicecontrolV1LogEntrySourceLocation"
        }
      }
    },
    "GoogleApiServicecontrolV1HttpRequest": {
      "id": "GoogleApiServicecontrolV1HttpRequest",
      "description": "A common proto for logging HTTP requests. Only contains semantics defined by the HTTP specification. Product-specific logging information MUST be defined in a separate message.",
      "type": "object",
      "properties": {
        "requestMethod": {
          "description": "The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`.",
          "type": "string"
        },
        "requestUrl": {
          "description": "The scheme (http, https), the host name, the path, and the query portion of the URL that was requested. Example: `\"http:\/\/example.com\/some\/info?color=red\"`.",
          "type": "string"
        },
        "requestSize": {
          "description": "The size of the HTTP request message in bytes, including the request headers and the request body.",
          "type": "string",
          "format": "int64"
        },
        "status": {
          "description": "The response code indicating the status of the response. Examples: 200, 404.",
          "type": "integer",
          "format": "int32"
        },
        "responseSize": {
          "description": "The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body.",
          "type": "string",
          "format": "int64"
        },
        "userAgent": {
          "description": "The user agent sent by the client. Example: `\"Mozilla\/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)\"`.",
          "type": "string"
        },
        "remoteIp": {
          "description": "The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`.",
          "type": "string"
        },
        "serverIp": {
          "description": "The IP address (IPv4 or IPv6) of the origin server that the request was sent to.",
          "type": "string"
        },
        "referer": {
          "description": "The referer URL of the request, as defined in [HTTP\/1.1 Header Field Definitions](http:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616-sec14.html).",
          "type": "string"
        },
        "latency": {
          "description": "The request processing latency on the server, from the time the request was received until the response was sent.",
          "type": "string",
          "format": "google-duration"
        },
        "cacheLookup": {
          "description": "Whether or not a cache lookup was attempted.",
          "type": "boolean"
        },
        "cacheHit": {
          "description": "Whether or not an entity was served from cache (with or without validation).",
          "type": "boolean"
        },
        "cacheValidatedWithOriginServer": {
          "description": "Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if `cache_hit` is True.",
          "type": "boolean"
        },
        "cacheFillBytes": {
          "description": "The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted.",
          "type": "string",
          "format": "int64"
        },
        "protocol": {
          "description": "Protocol used for the request. Examples: \"HTTP\/1.1\", \"HTTP\/2\", \"websocket\"",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1LogEntryOperation": {
      "id": "GoogleApiServicecontrolV1LogEntryOperation",
      "description": "Additional information about a potentially long-running operation with which a log entry is associated.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation.",
          "type": "string"
        },
        "producer": {
          "description": "Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com\/MyProject\/MyApplication\"`.",
          "type": "string"
        },
        "first": {
          "description": "Optional. Set this to True if this is the first log entry in the operation.",
          "type": "boolean"
        },
        "last": {
          "description": "Optional. Set this to True if this is the last log entry in the operation.",
          "type": "boolean"
        }
      }
    },
    "GoogleApiServicecontrolV1LogEntrySourceLocation": {
      "id": "GoogleApiServicecontrolV1LogEntrySourceLocation",
      "description": "Additional information about the source code location that produced the log entry.",
      "type": "object",
      "properties": {
        "file": {
          "description": "Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.",
          "type": "string"
        },
        "line": {
          "description": "Optional. Line within the source file. 1-based; 0 indicates no line number available.",
          "type": "string",
          "format": "int64"
        },
        "function": {
          "description": "Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: `qual.if.ied.Class.method` (Java), `dir\/package.func` (Go), `function` (Python).",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1QuotaProperties": {
      "id": "GoogleApiServicecontrolV1QuotaProperties",
      "description": "Represents the properties needed for quota operations.",
      "type": "object",
      "properties": {
        "quotaMode": {
          "description": "Quota mode for this operation.",
          "type": "string",
          "enumDescriptions": [
            "Decreases available quota by the cost specified for the operation. If cost is higher than available quota, operation fails and returns error.",
            "Decreases available quota by the cost specified for the operation. If cost is higher than available quota, operation does not fail and available quota goes down to zero but it returns error.",
            "Does not change any available quota. Only checks if there is enough quota. No lock is placed on the checked tokens neither.",
            "DEPRECATED: Increases available quota by the operation cost specified for the operation."
          ],
          "enum": [
            "ACQUIRE",
            "ACQUIRE_BEST_EFFORT",
            "CHECK",
            "RELEASE"
          ]
        }
      }
    },
    "GoogleApiServicecontrolV1ResourceInfo": {
      "id": "GoogleApiServicecontrolV1ResourceInfo",
      "description": "Describes a resource associated with this operation.",
      "type": "object",
      "properties": {
        "resourceContainer": {
          "description": "The identifier of the parent of this resource instance. Must be in one of the following formats: - `projects\/` - `folders\/` - `organizations\/`",
          "type": "string"
        },
        "resourceName": {
          "description": "Name of the resource. This is used for auditing purposes.",
          "type": "string"
        },
        "resourceLocation": {
          "description": "The location of the resource. If not empty, the resource will be checked against location policy. The value must be a valid zone, region or multiregion. For example: \"europe-west4\" or \"northamerica-northeast1-a\"",
          "type": "string"
        },
        "permission": {
          "description": "The resource permission required for this request.",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1TraceSpan": {
      "id": "GoogleApiServicecontrolV1TraceSpan",
      "description": "A span represents a single operation within a trace. Spans can be nested to form a trace tree. Often, a trace contains a root span that describes the end-to-end latency, and one or more subspans for its sub-operations. A trace can also contain multiple root spans, or none at all. Spans do not need to be contiguous\u2014there may be gaps or overlaps between spans in a trace.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the span in the following format: projects\/[PROJECT_ID]\/traces\/[TRACE_ID]\/spans\/SPAN_ID is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. [SPAN_ID] is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.",
          "type": "string"
        },
        "spanId": {
          "description": "The [SPAN_ID] portion of the span's resource name.",
          "type": "string"
        },
        "parentSpanId": {
          "description": "The [SPAN_ID] of this span's parent span. If this is a root span, then this field must be empty.",
          "type": "string"
        },
        "displayName": {
          "description": "A description of the span's operation (up to 128 bytes). Stackdriver Trace displays the description in the Google Cloud Platform Console. For example, the display name can be a qualified method name or a file name and a line number where the operation is called. A best practice is to use the same display name within an application and at the same call point. This makes it easier to correlate spans in different traces.",
          "$ref": "GoogleApiServicecontrolV1TruncatableString"
        },
        "startTime": {
          "description": "The start time of the span. On the client side, this is the time kept by the local machine where the span execution starts. On the server side, this is the time when the server's application handler starts running.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The end time of the span. On the client side, this is the time kept by the local machine where the span execution ends. On the server side, this is the time when the server application handler stops running.",
          "type": "string",
          "format": "google-datetime"
        },
        "attributes": {
          "description": "A set of attributes on the span. You can have up to 32 attributes per span.",
          "$ref": "GoogleApiServicecontrolV1Attributes"
        },
        "status": {
          "description": "An optional final status for this span.",
          "$ref": "Status"
        },
        "sameProcessAsParentSpan": {
          "description": "(Optional) Set this parameter to indicate whether this span is in the same process as its parent. If you do not set this parameter, Stackdriver Trace is unable to take advantage of this helpful information.",
          "type": "boolean"
        },
        "childSpanCount": {
          "description": "An optional number of child spans that were generated while this span was active. If set, allows implementation to detect missing child spans.",
          "type": "integer",
          "format": "int32"
        },
        "spanKind": {
          "description": "Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using `CLIENT` (caller) and `SERVER` (callee) to identify an RPC call.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified. Do NOT use as default. Implementations MAY assume SpanKind.INTERNAL to be default.",
            "Indicates that the span is used internally. Default value.",
            "Indicates that the span covers server-side handling of an RPC or other remote network request.",
            "Indicates that the span covers the client-side wrapper around an RPC or other remote request.",
            "Indicates that the span describes producer sending a message to a broker. Unlike client and server, there is no direct critical path latency relationship between producer and consumer spans (e.g. publishing a message to a pubsub service).",
            "Indicates that the span describes consumer receiving a message from a broker. Unlike client and server, there is no direct critical path latency relationship between producer and consumer spans (e.g. receiving a message from a pubsub service subscription)."
          ],
          "enum": [
            "SPAN_KIND_UNSPECIFIED",
            "INTERNAL",
            "SERVER",
            "CLIENT",
            "PRODUCER",
            "CONSUMER"
          ]
        }
      }
    },
    "GoogleApiServicecontrolV1TruncatableString": {
      "id": "GoogleApiServicecontrolV1TruncatableString",
      "description": "Represents a string that might be shortened to a specified length.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The shortened string. For example, if the original string is 500 bytes long and the limit of the string is 128 bytes, then `value` contains the first 128 bytes of the 500-byte string. Truncation always happens on a UTF8 character boundary. If there are multi-byte characters in the string, then the length of the shortened string might be less than the size limit.",
          "type": "string"
        },
        "truncatedByteCount": {
          "description": "The number of bytes removed from the original string. If this value is 0, then the string was not shortened.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleApiServicecontrolV1Attributes": {
      "id": "GoogleApiServicecontrolV1Attributes",
      "description": "A set of attributes, each in the format `[KEY]:[VALUE]`.",
      "type": "object",
      "properties": {
        "attributeMap": {
          "description": "The set of attributes. Each attribute's key can be up to 128 bytes long. The value can be a string up to 256 bytes, a signed 64-bit integer, or the Boolean values `true` and `false`. For example: \"\/instance_id\": \"my-instance\" \"\/http\/user_agent\": \"\" \"\/http\/request_bytes\": 300 \"abc.com\/myattribute\": true",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleApiServicecontrolV1AttributeValue"
          }
        },
        "droppedAttributesCount": {
          "description": "The number of attributes that were discarded. Attributes can be discarded because their keys are too long or because there are too many attributes. If this value is 0 then all attributes are valid.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleApiServicecontrolV1AttributeValue": {
      "id": "GoogleApiServicecontrolV1AttributeValue",
      "description": "The allowed types for [VALUE] in a `[KEY]:[VALUE]` attribute.",
      "type": "object",
      "properties": {
        "stringValue": {
          "description": "A string up to 256 bytes long.",
          "$ref": "GoogleApiServicecontrolV1TruncatableString"
        },
        "intValue": {
          "description": "A 64-bit signed integer.",
          "type": "string",
          "format": "int64"
        },
        "boolValue": {
          "description": "A Boolean value represented by `true` or `false`.",
          "type": "boolean"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "ids.projects.locations.list",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "includeUnrevealedLocations": {
                  "description": "If true, the returned list will include locations which are not yet revealed.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "ids.projects.locations.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "ids.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "ids.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "ids.projects.locations.operations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "ids.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "endpoints": {
              "methods": {
                "list": {
                  "id": "ids.projects.locations.endpoints.list",
                  "path": "v1/{+parent}/endpoints",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent, which owns this collection of endpoints.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of endpoints to return. The service may return fewer than this value.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A page token, received from a previous `ListEndpoints` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListEndpoints` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter expression, following the syntax outlined in https:\/\/google.aip.dev\/160.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. One or more fields to compare and use to sort the output. See https:\/\/google.aip.dev\/132#ordering.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEndpointsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Endpoints in a given project and location."
                },
                "get": {
                  "id": "ids.projects.locations.endpoints.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the endpoint to retrieve. Format: projects\/{project}\/locations\/{location}\/endpoints\/{endpoint}",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Endpoint"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Endpoint."
                },
                "create": {
                  "id": "ids.projects.locations.endpoints.create",
                  "path": "v1/{+parent}/endpoints",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The endpoint's parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "endpointId": {
                      "description": "Required. The endpoint identifier. This will be part of the endpoint's resource name. This value must start with a lowercase letter followed by up to 62 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. Values that do not match this pattern will trigger an INVALID_ARGUMENT error.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Endpoint"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Endpoint in a given project and location."
                },
                "patch": {
                  "id": "ids.projects.locations.endpoints.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the endpoint.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Field mask is used to specify the fields to be overwritten in the Endpoint resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Endpoint"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Endpoint."
                },
                "delete": {
                  "id": "ids.projects.locations.endpoints.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the endpoint to delete.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Endpoint."
                },
                "setIamPolicy": {
                  "id": "ids.projects.locations.endpoints.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "ids.projects.locations.endpoints.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "ids.projects.locations.endpoints.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpoints/{endpointsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpoints\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}