{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "run_apps:v1alpha1",
  "name": "run_apps",
  "canonicalName": "Apps on Cloud Run",
  "version": "v1alpha1",
  "revision": "0",
  "title": "run-apps API (prod)",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "",
  "protocol": "rest",
  "rootUrl": "https://run-apps.googleapis.com/",
  "mtlsRootUrl": "https://run-apps.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://run-apps.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListApplicationsResponse": {
      "id": "ListApplicationsResponse",
      "description": "Message for response to listing Applications",
      "type": "object",
      "properties": {
        "applications": {
          "description": "The list of Application",
          "type": "array",
          "items": {
            "$ref": "Application"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Application": {
      "id": "Application",
      "description": "Message describing Application object Next tag: 8",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: http:\/\/kubernetes.io\/docs\/user-guide\/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deleteTime": {
          "description": "Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "config": {
          "description": "The application configuration. On output, both intent repo and application config are populated. On input, only one can be modified at a time.",
          "$ref": "Config"
        },
        "reconciling": {
          "description": "Output only. Indicates whether the resource's reconciliation is still in progress.",
          "readOnly": true,
          "type": "boolean"
        },
        "etag": {
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Config": {
      "id": "Config",
      "description": "Message for the Application Config Next tag: 6",
      "type": "object",
      "properties": {
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "ResourceConfig"
          }
        },
        "config": {
          "description": "A byte array encapsulating the contents of the application config. This can be of any type of supported config (Simple SAF Yaml, multi-file in-app config, etc.)",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ResourceConfig": {
      "id": "ResourceConfig",
      "description": "Message for the Resource configuration.",
      "type": "object",
      "properties": {
        "router": {
          "description": "Router configuration.",
          "$ref": "RouterConfig"
        },
        "cloudsql": {
          "description": "CloudSql configuration.",
          "$ref": "CloudSqlConfig"
        },
        "service": {
          "description": "Cloud Run service configuration.",
          "$ref": "CloudRunServiceConfig"
        },
        "redis": {
          "description": "Redis configuration.",
          "$ref": "RedisConfig"
        },
        "vpc": {
          "description": "VPC configuration.",
          "$ref": "VPCConfig"
        }
      }
    },
    "RouterConfig": {
      "id": "RouterConfig",
      "description": "Message for a Router resource.",
      "type": "object",
      "properties": {
        "domain": {
          "description": "Domain name to associate with the router.",
          "type": "string"
        },
        "default-route": {
          "description": "The default route config. The URL paths field is not required for this route config.",
          "$ref": "Route"
        },
        "routes": {
          "description": "A list of route configurations to associate with the router. Each Route configuration must include a paths configuration.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        },
        "dns-zone": {
          "description": "DNSZone represents an existing DNS zone for the router. It's used for bring-your-own-DNSZone case. If empty, a new managed DNS zone shall be created.",
          "type": "string"
        }
      }
    },
    "Route": {
      "id": "Route",
      "description": "Message for a single routeable resource within a Router.",
      "type": "object",
      "properties": {
        "paths": {
          "description": "List of paths to be routed to this route. e.g. [\"\/*, \/api\/*\"]. The path must fit the constraints at https:\/\/cloud.google.com\/load-balancing\/docs\/url-map-concepts#pm-constraints.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ref": {
          "description": "Required. A reference to the resource in the config to which this is routing. e.g. \"cloudsql\/sql_db\".",
          "type": "string"
        },
        "cdn": {
          "description": "Whether to enable CDN on the route.",
          "type": "boolean"
        }
      }
    },
    "CloudSqlConfig": {
      "id": "CloudSqlConfig",
      "description": "Message for a Cloud SQL resource.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The database version. e.g. \"MYSQL_8_0\". The version must match one of the values at https:\/\/cloud.google.com\/sql\/docs\/mysql\/admin-api\/rest\/v1beta4\/SqlDatabaseVersion.",
          "type": "string"
        },
        "settings": {
          "description": "Settings for the Cloud SQL instance.",
          "$ref": "CloudSqlSettings"
        }
      }
    },
    "CloudSqlSettings": {
      "id": "CloudSqlSettings",
      "description": "Message for settings for a CloudSql instance.",
      "type": "object",
      "properties": {
        "tier": {
          "description": "Tier of the Cloud SQL instance. e.g. \"db-f1-micro\".",
          "type": "string"
        },
        "activation-policy": {
          "description": "The activation policy of the Cloud SQL instance. e.g. \"ALWAYS\".",
          "type": "string"
        },
        "disk-size": {
          "description": "The disk size of the Cloud SQL instance, in GB. This value cannot be decreased on Update.",
          "type": "integer",
          "format": "int32"
        },
        "disk-type": {
          "description": "The type of disk for the Cloud SQL instance. e.g. \"PD_SSD\".",
          "type": "string"
        },
        "availability-type": {
          "description": "The availability type of the Cloud SQL instance. e.g. \"REGIONAL\".",
          "type": "string"
        }
      }
    },
    "CloudRunServiceConfig": {
      "id": "CloudRunServiceConfig",
      "description": "Message for Cloud Run service configs.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "Bindings to other resources.",
          "type": "array",
          "items": {
            "$ref": "ServiceResourceBindingConfig"
          }
        },
        "image": {
          "description": "The container image to deploy the service with.",
          "type": "string"
        }
      }
    },
    "ServiceResourceBindingConfig": {
      "id": "ServiceResourceBindingConfig",
      "description": "Message for a binding between a Cloud Run service and a resource.",
      "type": "object",
      "properties": {
        "ref": {
          "description": "Ref to another resource. Format: \"\/\", e.g. \"cloudsql\/sql_db\".",
          "type": "string"
        },
        "binding-config": {
          "description": "Any configs associated with the binding. e.g. \"db-name-env-name\": \"SQL_NAME\".",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RedisConfig": {
      "id": "RedisConfig",
      "description": "Message for Redis configs.",
      "type": "object",
      "properties": {
        "instance": {
          "description": "Configs for the Redis instance.",
          "$ref": "RedisInstanceConfig"
        }
      }
    },
    "RedisInstanceConfig": {
      "id": "RedisInstanceConfig",
      "description": "Message for Redis instance configs.",
      "type": "object",
      "properties": {
        "memory-size-gb": {
          "description": "The redis instance memory size, in GB.",
          "type": "integer",
          "format": "int32"
        },
        "tier": {
          "description": "The Redis instance tier, e.g. \"STANDARD_HA\".",
          "type": "string"
        },
        "version": {
          "description": "The Redis instance version, e.g. \"REDIS_4_0\".",
          "type": "string"
        },
        "redis-parameters": {
          "description": "The \"raw\" Redis configs: https:\/\/redis.io\/topics\/config",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VPCConfig": {
      "id": "VPCConfig",
      "description": "Message for VPC configs.",
      "type": "object",
      "properties": {
        "network": {
          "description": "Network is an existing network name. If omitted, a new network will be created for the application.",
          "type": "string"
        }
      }
    },
    "ApplicationStatus": {
      "id": "ApplicationStatus",
      "description": "Status of the application.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the application status, in the following form: `projects\/{project}\/locations\/{location}\/applications\/{name}\/status`",
          "type": "string"
        },
        "modifyTime": {
          "description": "Time at which the status was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "resource": {
          "description": "Repeated field with status per resource.",
          "type": "array",
          "items": {
            "$ref": "ResourceStatus"
          }
        }
      }
    },
    "ResourceStatus": {
      "id": "ResourceStatus",
      "description": "Status for a resource.",
      "type": "object",
      "properties": {
        "resourceName": {
          "description": "Name of the resource, pulled from the Application Config.",
          "type": "string"
        },
        "type": {
          "description": "Type of resource.",
          "type": "string"
        },
        "state": {
          "description": "The enum status of the resource.",
          "type": "string",
          "enumDescriptions": [
            "",
            "The resource has been deployed."
          ],
          "enum": [
            "RESOURCE_STATE_UNKNOWN",
            "RESOURCE_STATE_DEPLOYED"
          ]
        },
        "errorMessage": {
          "description": "The error message associated with the resource, if applicable.",
          "type": "string"
        },
        "gcpResource": {
          "description": "Repeated field with status per GCP resource created for this resource.",
          "type": "array",
          "items": {
            "$ref": "GcpResourceStatus"
          }
        }
      }
    },
    "GcpResourceStatus": {
      "id": "GcpResourceStatus",
      "description": "Status for a GCP resource.",
      "type": "object",
      "properties": {
        "gcpResourceName": {
          "description": "The full path of the GCP resource, which can be used to query other GCP services.",
          "type": "string"
        },
        "type": {
          "description": "The type of the GCP resource (e.g. \"redis\").",
          "type": "string"
        },
        "state": {
          "description": "The state of the GCP resource.",
          "type": "string",
          "enumDescriptions": [
            "",
            "The resource has been deployed."
          ],
          "enum": [
            "GCP_RESOURCE_STATE_UNKNOWN",
            "GCP_RESOURCE_STATE_DEPLOYED"
          ]
        },
        "errorMessage": {
          "description": "The error message associated with the GCP resource, if applicable.",
          "type": "string"
        }
      }
    },
    "ListDeploymentsResponse": {
      "id": "ListDeploymentsResponse",
      "description": "Message for response to listing Deployments",
      "type": "object",
      "properties": {
        "deployments": {
          "description": "The list of Deployment",
          "type": "array",
          "items": {
            "$ref": "Deployment"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Deployment": {
      "id": "Deployment",
      "description": "Message describing Deployment object Next tag: 13",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: http:\/\/kubernetes.io\/docs\/user-guide\/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deleteTime": {
          "description": "Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "application": {
          "description": "Output only. The name of the parent application.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "Output only. The status of the deployment",
          "readOnly": true,
          "$ref": "DeploymentStatus"
        },
        "createSelector": {
          "description": "Optional selectors that should be applied to limit the scope of the deployment creation.",
          "$ref": "Selector"
        },
        "deleteSelector": {
          "description": "Optional selectors that should be applied to limit the scope of the deployment deletion.",
          "$ref": "Selector"
        },
        "render": {
          "description": "If specified, the configurations for the deployment will be output as described but the underlying resources will not be actuated.",
          "$ref": "Render"
        },
        "serviceAccount": {
          "description": "Email address of the service account to use for the resource actuation.",
          "type": "string"
        },
        "reconciling": {
          "description": "Output only. Indicates whether the resource's reconciliation is still in progress.",
          "readOnly": true,
          "type": "boolean"
        },
        "etag": {
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DeploymentStatus": {
      "id": "DeploymentStatus",
      "description": "Message to encapsulate the current status of the deployment.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status message associated with the current state of the deployment.",
          "type": "string"
        },
        "errorMessage": {
          "description": "The error message associated with a failed deployment state, if applicable.",
          "type": "string"
        }
      }
    },
    "Selector": {
      "id": "Selector",
      "description": "Message for selecting the resources within an application. Next tag: 3",
      "type": "object",
      "properties": {
        "matchTypeNames": {
          "description": "match_type_names is a list resource name + type to match. Use '*' or empty string for wildcard either the name or the type. E.g. type='service' name='' will match all services. type='*' name='default' will match all resources named as 'default'.",
          "type": "array",
          "items": {
            "$ref": "TypedName"
          }
        },
        "notTypeNames": {
          "description": "not_type_names excludes the names + types. If a type+name is in this list as well as match_type_names, it will not be selected.",
          "type": "array",
          "items": {
            "$ref": "TypedName"
          }
        }
      }
    },
    "TypedName": {
      "id": "TypedName",
      "description": "TypedName is a resource name + its type. Next tag: 3",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        }
      }
    },
    "Render": {
      "id": "Render",
      "description": "Message to encapsulate the parameters for a Render.",
      "type": "object",
      "properties": {
        "format": {
          "description": "The format in which to render the Application.",
          "type": "string",
          "enumDescriptions": [
            "No render format specified.",
            "Render into Terraform configs.",
            "Render into KRM configs."
          ],
          "enum": [
            "RENDER_FORMAT_UNKNOWN",
            "RENDER_FORMAT_TERRAFORM",
            "RENDER_FORMAT_KRM"
          ]
        },
        "outputLocation": {
          "description": "The output location to push the rendered configs to.",
          "$ref": "Target"
        }
      }
    },
    "Target": {
      "id": "Target",
      "description": "A type of persisted data store to which Render outputs.",
      "type": "object",
      "properties": {
        "cloudStorage": {
          "description": "A Cloud Storage target location.",
          "$ref": "CloudStorage"
        }
      }
    },
    "CloudStorage": {
      "id": "CloudStorage",
      "description": "Configures a Cloud Storage location.",
      "type": "object",
      "properties": {
        "bucket": {
          "description": "Google Cloud Storage bucket containing the source (see Bucket Name Requirements).",
          "type": "string"
        },
        "object": {
          "description": "Google Cloud Storage object containing the source.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "verb": {
          "description": "Name of the verb executed by the operation.",
          "type": "string"
        },
        "statusMessage": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "API version used to start the operation.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "run_apps.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "run_apps.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "run_apps.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "run_apps.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "run_apps.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "run_apps.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "applications": {
              "methods": {
                "list": {
                  "id": "run_apps.projects.locations.applications.list",
                  "path": "v1alpha1/{+parent}/applications",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListApplicationsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListApplicationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Applications in a given project and location."
                },
                "get": {
                  "id": "run_apps.projects.locations.applications.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Application"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Application."
                },
                "create": {
                  "id": "run_apps.projects.locations.applications.create",
                  "path": "v1alpha1/{+parent}/applications",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "applicationId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and application_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Application"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Application in a given project and location."
                },
                "patch": {
                  "id": "run_apps.projects.locations.applications.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the Application resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Application"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Application."
                },
                "delete": {
                  "id": "run_apps.projects.locations.applications.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Application."
                },
                "getStatus": {
                  "id": "run_apps.projects.locations.applications.getStatus",
                  "path": "v1alpha1/{+name}/status",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}/status",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ApplicationStatus"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets status of a single Application."
                },
                "setIamPolicy": {
                  "id": "run_apps.projects.locations.applications.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "run_apps.projects.locations.applications.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "run_apps.projects.locations.applications.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
              ,
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "id": "run_apps.projects.locations.applications.deployments.list",
                      "path": "v1alpha1/{+parent}/deployments",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}/deployments",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent value for ListDeploymentsRequest",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filtering results",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Hint for how to order the results",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListDeploymentsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Deployments in a given project and location."
                    },
                    "get": {
                      "id": "run_apps.projects.locations.applications.deployments.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}/deployments/{deploymentsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+\/deployments\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Deployment"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Deployment."
                    },
                    "create": {
                      "id": "run_apps.projects.locations.applications.deployments.create",
                      "path": "v1alpha1/{+parent}/deployments",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}/deployments",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. Value for parent.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "deploymentId": {
                          "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and deployment_id from the method_signature of Create RPC",
                          "location": "query",
                          "type": "string"
                        },
                        "validateOnly": {
                          "description": "If true, the Create request will just do a dry run of the deploy instead of actuating anything.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "requestId": {
                          "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Deployment"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new Deployment in a given project and location."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}