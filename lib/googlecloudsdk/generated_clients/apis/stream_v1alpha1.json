{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "stream:v1alpha1",
  "name": "stream",
  "canonicalName": "Stream",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Immersive Stream for XR API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com",
  "protocol": "rest",
  "rootUrl": "https://stream.googleapis.com/",
  "mtlsRootUrl": "https://stream.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://stream.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListStreamContentsResponse": {
      "id": "ListStreamContentsResponse",
      "description": "Message for response to listing StreamContents",
      "type": "object",
      "properties": {
        "streamContents": {
          "description": "The list of StreamContent",
          "type": "array",
          "items": {
            "$ref": "StreamContent"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StreamContent": {
      "id": "StreamContent",
      "description": "Message describing StreamContent object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "bucketName": {
          "description": "Name of the Cloud Storage bucket in the consumer project that stores the content source.",
          "type": "string"
        },
        "contentVersionTags": {
          "description": "Output only. User-specified version tags of content builds",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "buildVersions": {
          "description": "Output only. User-specified version tags and unique build IDs of content builds",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "BuildVersion"
          }
        },
        "lifecycleState": {
          "description": "Output only. Current state of the content.",
          "readOnly": true,
          "$ref": "LifecycleState"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BuildVersion": {
      "id": "BuildVersion",
      "description": "Describe user-specific version tag and server-generated unique build ID for a specific build.",
      "type": "object",
      "properties": {
        "contentVersionTag": {
          "description": "User-specified version tag of content build.",
          "type": "string"
        },
        "buildId": {
          "description": "Unique build ID generated by server.",
          "type": "string"
        },
        "buildTime": {
          "description": "Build time stamp",
          "type": "string",
          "format": "google-datetime"
        },
        "isFailed": {
          "description": "Boolean value whether build failed.",
          "type": "boolean"
        },
        "buildLogUri": {
          "description": "Build log uri.",
          "type": "string"
        }
      }
    },
    "LifecycleState": {
      "id": "LifecycleState",
      "description": "Describes the lifecycle state of an Immersive Stream for XR resource.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Current lifecycle state of the resource (e.g. if it's Live or Deprecated).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Resource is ready and available for use.",
            "Resource is being used (referenced by other resources). In order to delete the resource, it must go through deprecation process to ensure it's no longer in use by other resources.",
            "Resource is being created.",
            "Resource is being updated.",
            "Resource is being deleted.",
            "Resource encountered an error and is in indeterministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "READY",
            "IN_USE",
            "CREATING",
            "UPDATING",
            "DELETING",
            "ERROR"
          ]
        },
        "description": {
          "description": "Human readable message describing details about the current state.",
          "type": "string"
        }
      }
    },
    "BuildStreamContentRequest": {
      "id": "BuildStreamContentRequest",
      "description": "Message for building a StreamContent",
      "type": "object",
      "properties": {
        "contentVersionTag": {
          "description": "Required. The user-specified version tag of the build if it succeeds. Must match \\w{0,127}. See also https:\/\/github.com\/distribution\/distribution\/blob\/main\/reference\/regexp.go",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.\"",
          "type": "string"
        }
      }
    },
    "ListStreamInstancesResponse": {
      "id": "ListStreamInstancesResponse",
      "description": "Message for response to listing StreamInstances",
      "type": "object",
      "properties": {
        "streamInstances": {
          "description": "The list of StreamInstance",
          "type": "array",
          "items": {
            "$ref": "StreamInstance"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StreamInstance": {
      "id": "StreamInstance",
      "description": "Message describing StreamInstance object Next ID: 13",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "content": {
          "description": "The content that this instance serves.",
          "type": "string"
        },
        "contentBuildVersion": {
          "description": "The user-specified version tag and build ID of the content served.",
          "$ref": "BuildVersion"
        },
        "apiEndpoint": {
          "description": "Output only. The API endpoint to which an Stream client can connect to request a streaming session.",
          "readOnly": true,
          "type": "string"
        },
        "apiKey": {
          "description": "Output only. The API key that an Stream client must use when requesting a streaming session.",
          "readOnly": true,
          "type": "string"
        },
        "realmConfigs": {
          "description": "Deployment configuration of the instance in realms. Note that this is not defined as a map for enum types (Realm) cannot be used as key.",
          "type": "array",
          "items": {
            "$ref": "RealmConfig"
          }
        },
        "locationConfigs": {
          "description": "Deployment configuration of the instance by locations (only regions are supported now). Map keys are regions in the string form.",
          "type": "object",
          "additionalProperties": {
            "$ref": "LocationConfig"
          }
        },
        "lifecycleState": {
          "description": "Output only. Current status of the instance.",
          "readOnly": true,
          "$ref": "LifecycleState"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "streamConfig": {
          "description": "Optional. An optional config data to configure the client UI.",
          "$ref": "StreamConfig"
        }
      }
    },
    "RealmConfig": {
      "id": "RealmConfig",
      "description": "Deployment configuration of an instance in a given realm.",
      "type": "object",
      "properties": {
        "realm": {
          "description": "A realm in which the instance is deployed.",
          "type": "string",
          "enumDescriptions": [
            "realm not specified",
            "us-central1",
            "us-east[1|4]",
            "us-west[1|2|4]",
            "asia-northeast[1|3]",
            "asia-southeast[1|2]",
            "europe-west[1-4]"
          ],
          "enum": [
            "REALM_UNSPECIFIED",
            "REALM_NA_CENTRAL",
            "REALM_NA_EAST",
            "REALM_NA_WEST",
            "REALM_ASIA_NORTHEAST",
            "REALM_ASIA_SOUTHEAST",
            "REALM_EU_WEST"
          ]
        },
        "capacity": {
          "description": "The maximum number of concurrent streaming sessions that the instance can support in this realm.",
          "type": "integer",
          "format": "int32"
        },
        "contentBuildVersion": {
          "description": "The user-specified version tag and build ID of the content served by this instance.",
          "$ref": "BuildVersion"
        }
      }
    },
    "LocationConfig": {
      "id": "LocationConfig",
      "description": "Deployment configuration of an instance in a given location.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The location in which the instance is deployed. We only use region for now.",
          "type": "string"
        },
        "capacity": {
          "description": "The maximum number of concurrent streaming sessions that the instance can support in this location.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StreamConfig": {
      "id": "StreamConfig",
      "description": "Describes the optional configuration payload that the customer wants to set up with for the instance.",
      "type": "object",
      "properties": {
        "fallbackUri": {
          "description": "User-specified fallback uri that should be launched from the client when there is a streaming server stock-out.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "BillingView": {
      "id": "BillingView",
      "description": "Message for reporting billing requests through Eventstream.",
      "type": "object",
      "properties": {
        "reportRequests": {
          "description": "Billing requests to be reported for cloud.eventstream.v2.ResourceEvent Each request contains billing operations to be reported under a service name. See go\/billing-view-construction for documentation on constructing billing view report requests.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1ReportRequest"
          }
        }
      }
    },
    "GoogleApiServicecontrolV1ReportRequest": {
      "id": "GoogleApiServicecontrolV1ReportRequest",
      "description": "Request message for the Report method.",
      "type": "object",
      "properties": {
        "serviceName": {
          "description": "The service name as specified in its service configuration. For example, `\"pubsub.googleapis.com\"`. See [google.api.Service](https:\/\/cloud.google.com\/service-management\/reference\/rpc\/google.api#google.api.Service) for the definition of a service name.",
          "type": "string"
        },
        "operations": {
          "description": "Operations to be reported. Typically the service should report one operation per request. Putting multiple operations into a single request is allowed, but should be used only when multiple operations are natually available at the time of the report. There is no limit on the number of operations in the same ReportRequest, however the ReportRequest size should be no larger than 1MB. See ReportResponse.report_errors for partial failure behavior.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1Operation"
          }
        },
        "serviceConfigId": {
          "description": "Specifies which version of service config should be used to process the request. If unspecified or no matching version can be found, the latest one will be used.",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1Operation": {
      "id": "GoogleApiServicecontrolV1Operation",
      "description": "Represents information regarding an operation.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "Identity of the operation. This must be unique within the scope of the service that generated the operation. If the service calls Check() and Report() on the same operation, the two calls should carry the same id. UUID version 4 is recommended, though not required. In scenarios where an operation is computed from existing information and an idempotent id is desirable for deduplication purpose, UUID version 5 is recommended. See RFC 4122 for details.",
          "type": "string"
        },
        "operationName": {
          "description": "Fully qualified name of the operation. Reserved for future use.",
          "type": "string"
        },
        "consumerId": {
          "description": "Identity of the consumer who is using the service. This field should be filled in for the operations initiated by a consumer, but not for service-initiated operations that are not related to a specific consumer. - This can be in one of the following formats: - project:PROJECT_ID, - project`_`number:PROJECT_NUMBER, - projects\/PROJECT_ID or PROJECT_NUMBER, - folders\/FOLDER_NUMBER, - organizations\/ORGANIZATION_NUMBER, - api`_`key:API_KEY. spatula_header: and \"loas:\" are also accepted.",
          "type": "string"
        },
        "startTime": {
          "description": "Required. Start time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "End time of the operation. Required when the operation is used in ServiceController.Report, but optional when the operation is used in ServiceController.Check.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels describing the operation. Only the following labels are allowed: - Labels describing monitored resources as defined in the service configuration. - Default labels of metric values. When specified, labels defined in the metric value override these default. - The following labels defined by Google Cloud Platform: - `cloud.googleapis.com\/location` describing the location where the operation happened, - `servicecontrol.googleapis.com\/user_agent` describing the user agent of the API request, - `servicecontrol.googleapis.com\/service_agent` describing the service used to handle the API request (e.g. ESP), - `servicecontrol.googleapis.com\/platform` describing the platform where the API is served, such as App Engine, Compute Engine, or Kubernetes Engine. Functional spec: go\/unified-cloud-labels-proposal",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metricValueSets": {
          "description": "Represents information about this operation. Each MetricValueSet corresponds to a metric defined in the service configuration. The data type used in the MetricValueSet must agree with the data type specified in the metric definition. Within a single operation, it is not allowed to have more than one MetricValue instances that have the same metric names and identical label value combinations. If a request has such duplicated MetricValue instances, the entire request is rejected with an invalid argument error.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1MetricValueSet"
          }
        },
        "logEntries": {
          "description": "Represents information to be logged.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1LogEntry"
          }
        },
        "quotaProperties": {
          "description": "Represents the properties needed for quota check. Applicable only if this operation is for a quota check request. If this is not specified, no quota check will be performed.",
          "$ref": "GoogleApiServicecontrolV1QuotaProperties"
        },
        "importance": {
          "description": "DO NOT USE. This is an experimental field.",
          "type": "string",
          "enumDescriptions": [
            "Allows data caching, batching, and aggregation. It provides higher performance with higher data loss risk.",
            "Disables data aggregation to minimize data loss. It is for operations that contains significant monetary value or audit trail. This feature only applies to the client libraries.",
            "Deprecated. Do not use. Disables data aggregation and enables additional validation logic. It should only be used during the onboarding process. It is only available to Google internal services, and the service must be approved by chemist-dev@google.com in order to use this level.",
            "Used internally by Chemist. Promote low importance operation, send immediately."
          ],
          "enum": [
            "LOW",
            "HIGH",
            "DEBUG",
            "PROMOTED"
          ]
        },
        "userLabels": {
          "description": "Private Preview. This feature is only available for approved services. User defined labels for the resource that this operation is associated with. Functional spec: go\/unified-cloud-labels-proposal",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resources": {
          "description": "The resources that are involved in the operation. The maximum supported number of entries in this field is 100.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1ResourceInfo"
          }
        },
        "traceSpans": {
          "description": "Unimplemented. A list of Cloud Trace spans. The span names shall contain the id of the destination project which can be either the produce or the consumer project. Design: go\/chemist-cloud-trace-reporting",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1TraceSpan"
          }
        }
      }
    },
    "GoogleApiServicecontrolV1MetricValueSet": {
      "id": "GoogleApiServicecontrolV1MetricValueSet",
      "description": "Represents a set of metric values in the same metric. Each metric value in the set should have a unique combination of start time, end time, and label values.",
      "type": "object",
      "properties": {
        "metricName": {
          "description": "The metric name defined in the service configuration.",
          "type": "string"
        },
        "metricValues": {
          "description": "The values in this metric.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1MetricValue"
          }
        }
      }
    },
    "GoogleApiServicecontrolV1MetricValue": {
      "id": "GoogleApiServicecontrolV1MetricValue",
      "description": "Represents a single metric value.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "The labels describing the metric value. See comments on google.api.servicecontrol.v1.Operation.labels for the overriding relationship. Note that this map must not contain monitored resource labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startTime": {
          "description": "The start of the time period over which this metric value's measurement applies. The time period has different semantics for different metric types (cumulative, delta, and gauge). See the metric definition documentation in the service configuration for details. If not specified, google.api.servicecontrol.v1.Operation.start_time will be used.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The end of the time period over which this metric value's measurement applies. If not specified, google.api.servicecontrol.v1.Operation.end_time will be used.",
          "type": "string",
          "format": "google-datetime"
        },
        "boolValue": {
          "description": "A boolean value.",
          "type": "boolean"
        },
        "int64Value": {
          "description": "A signed 64-bit integer value.",
          "type": "string",
          "format": "int64"
        },
        "doubleValue": {
          "description": "A double precision floating point value.",
          "type": "number",
          "format": "double"
        },
        "stringValue": {
          "description": "A text string value.",
          "type": "string"
        },
        "distributionValue": {
          "description": "A distribution value.",
          "$ref": "GoogleApiServicecontrolV1Distribution"
        },
        "moneyValue": {
          "description": "A money value.",
          "$ref": "Money"
        }
      }
    },
    "GoogleApiServicecontrolV1Distribution": {
      "id": "GoogleApiServicecontrolV1Distribution",
      "description": "Distribution represents a frequency distribution of double-valued sample points. It contains the size of the population of sample points plus additional optional information: * the arithmetic mean of the samples * the minimum and maximum of the samples * the sum-squared-deviation of the samples, used to compute variance * a histogram of the values of the sample points",
      "type": "object",
      "properties": {
        "count": {
          "description": "The total number of samples in the distribution. Must be >= 0.",
          "type": "string",
          "format": "int64"
        },
        "mean": {
          "description": "The arithmetic mean of the samples in the distribution. If `count` is zero then this field must be zero.",
          "type": "number",
          "format": "double"
        },
        "minimum": {
          "description": "The minimum of the population of values. Ignored if `count` is zero.",
          "type": "number",
          "format": "double"
        },
        "maximum": {
          "description": "The maximum of the population of values. Ignored if `count` is zero.",
          "type": "number",
          "format": "double"
        },
        "sumOfSquaredDeviation": {
          "description": "The sum of squared deviations from the mean: Sum[i=1..count]((x_i - mean)^2) where each x_i is a sample values. If `count` is zero then this field must be zero, otherwise validation of the request fails.",
          "type": "number",
          "format": "double"
        },
        "bucketCounts": {
          "description": "The number of samples in each histogram bucket. `bucket_counts` are optional. If present, they must sum to the `count` value. The buckets are defined below in `bucket_option`. There are N buckets. `bucket_counts[0]` is the number of samples in the underflow bucket. `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples in each of the finite buckets. And `bucket_counts[N] is the number of samples in the overflow bucket. See the comments of `bucket_option` below for more details. Any suffix of trailing zeros may be omitted.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "linearBuckets": {
          "description": "Buckets with constant width.",
          "$ref": "GoogleApiServicecontrolV1LinearBuckets"
        },
        "exponentialBuckets": {
          "description": "Buckets with exponentially growing width.",
          "$ref": "GoogleApiServicecontrolV1ExponentialBuckets"
        },
        "explicitBuckets": {
          "description": "Buckets with arbitrary user-provided width.",
          "$ref": "GoogleApiServicecontrolV1ExplicitBuckets"
        },
        "exemplars": {
          "description": "Example points. Must be in increasing order of `value` field.",
          "type": "array",
          "items": {
            "$ref": "Exemplar"
          }
        }
      }
    },
    "GoogleApiServicecontrolV1LinearBuckets": {
      "id": "GoogleApiServicecontrolV1LinearBuckets",
      "description": "Describing buckets with constant width.",
      "type": "object",
      "properties": {
        "numFiniteBuckets": {
          "description": "The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is `num_finite_buckets` + 2. See comments on `bucket_options` for details.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive. Must be strictly positive.",
          "type": "number",
          "format": "double"
        },
        "offset": {
          "description": "The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleApiServicecontrolV1ExponentialBuckets": {
      "id": "GoogleApiServicecontrolV1ExponentialBuckets",
      "description": "Describing buckets with exponentially growing width.",
      "type": "object",
      "properties": {
        "numFiniteBuckets": {
          "description": "The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is `num_finite_buckets` + 2. See comments on `bucket_options` for details.",
          "type": "integer",
          "format": "int32"
        },
        "growthFactor": {
          "description": "The i'th exponential bucket covers the interval [scale * growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to num_finite_buckets inclusive. Must be larger than 1.0.",
          "type": "number",
          "format": "double"
        },
        "scale": {
          "description": "The i'th exponential bucket covers the interval [scale * growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to num_finite_buckets inclusive. Must be > 0.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "GoogleApiServicecontrolV1ExplicitBuckets": {
      "id": "GoogleApiServicecontrolV1ExplicitBuckets",
      "description": "Describing buckets with arbitrary user-provided width.",
      "type": "object",
      "properties": {
        "bounds": {
          "description": "'bound' is a list of strictly increasing boundaries between buckets. Note that a list of length N-1 defines N buckets because of fenceposting. See comments on `bucket_options` for details. The i'th finite bucket covers the interval [bound[i-1], bound[i]) where i ranges from 1 to bound_size() - 1. Note that there are no finite buckets at all if 'bound' only contains a single element; in that special case the single bound defines the boundary between the underflow and overflow buckets. bucket number lower bound upper bound i == 0 (underflow) -inf bound[i] 0 < i < bound_size() bound[i-1] bound[i] i == bound_size() (overflow) bound[i-1] +inf",
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "Exemplar": {
      "id": "Exemplar",
      "description": "Exemplars are example points that may be used to annotate aggregated distribution values. They are metadata that gives information about a particular value added to a Distribution bucket, such as a trace ID that was active when a value was added. They may contain further information, such as a example values and timestamps, origin, etc.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the exemplar point. This value determines to which bucket the exemplar belongs.",
          "type": "number",
          "format": "double"
        },
        "timestamp": {
          "description": "The observation (sampling) time of the above value.",
          "type": "string",
          "format": "google-datetime"
        },
        "attachments": {
          "description": "Contextual information about the example value. Examples are: Trace: type.googleapis.com\/google.monitoring.v3.SpanContext Literal string: type.googleapis.com\/google.protobuf.StringValue Labels dropped during aggregation: type.googleapis.com\/google.monitoring.v3.DroppedLabels There may be only a single attachment of any given message type in a single exemplar, and this is enforced by the system.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Money": {
      "id": "Money",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleApiServicecontrolV1LogEntry": {
      "id": "GoogleApiServicecontrolV1LogEntry",
      "description": "An individual log entry.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The log to which this log entry belongs. Examples: `\"syslog\"`, `\"book_log\"`.",
          "type": "string"
        },
        "timestamp": {
          "description": "The time the event described by the log entry occurred. If omitted, defaults to operation start time.",
          "type": "string",
          "format": "google-datetime"
        },
        "severity": {
          "description": "The severity of the log entry. The default value is `LogSeverity.DEFAULT`.",
          "type": "string",
          "enumDescriptions": [
            "(0) The log entry has no assigned severity level.",
            "(100) Debug or trace information.",
            "(200) Routine information, such as ongoing status or performance.",
            "(300) Normal but significant events, such as start up, shut down, or a configuration change.",
            "(400) Warning events might cause problems.",
            "(500) Error events are likely to cause problems.",
            "(600) Critical events cause more severe problems or outages.",
            "(700) A person must take an action immediately.",
            "(800) One or more systems are unusable."
          ],
          "enum": [
            "DEFAULT",
            "DEBUG",
            "INFO",
            "NOTICE",
            "WARNING",
            "ERROR",
            "CRITICAL",
            "ALERT",
            "EMERGENCY"
          ]
        },
        "httpRequest": {
          "description": "Optional. Information about the HTTP request associated with this log entry, if applicable.",
          "$ref": "GoogleApiServicecontrolV1HttpRequest"
        },
        "trace": {
          "description": "Optional. Resource name of the trace associated with the log entry, if any. If this field contains a relative resource name, you can assume the name is relative to `\/\/tracing.googleapis.com`. Example: `projects\/my-projectid\/traces\/06796866738c859f2f19b7cfb3214824`",
          "type": "string"
        },
        "insertId": {
          "description": "A unique ID for the log entry used for deduplication. If omitted, the implementation will generate one based on operation_id.",
          "type": "string"
        },
        "labels": {
          "description": "A set of user-defined (key, value) data that provides additional information about the log entry.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "protoPayload": {
          "description": "The log entry payload, represented as a protocol buffer that is expressed as a JSON object. The only accepted type currently is AuditLog.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "textPayload": {
          "description": "The log entry payload, represented as a Unicode string (UTF-8).",
          "type": "string"
        },
        "structPayload": {
          "description": "The log entry payload, represented as a structure that is expressed as a JSON object.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "operation": {
          "description": "Optional. Information about an operation associated with the log entry, if applicable.",
          "$ref": "GoogleApiServicecontrolV1LogEntryOperation"
        },
        "sourceLocation": {
          "description": "Optional. Source code location information associated with the log entry, if any.",
          "$ref": "GoogleApiServicecontrolV1LogEntrySourceLocation"
        }
      }
    },
    "GoogleApiServicecontrolV1HttpRequest": {
      "id": "GoogleApiServicecontrolV1HttpRequest",
      "description": "A common proto for logging HTTP requests. Only contains semantics defined by the HTTP specification. Product-specific logging information MUST be defined in a separate message.",
      "type": "object",
      "properties": {
        "requestMethod": {
          "description": "The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`.",
          "type": "string"
        },
        "requestUrl": {
          "description": "The scheme (http, https), the host name, the path, and the query portion of the URL that was requested. Example: `\"http:\/\/example.com\/some\/info?color=red\"`.",
          "type": "string"
        },
        "requestSize": {
          "description": "The size of the HTTP request message in bytes, including the request headers and the request body.",
          "type": "string",
          "format": "int64"
        },
        "status": {
          "description": "The response code indicating the status of the response. Examples: 200, 404.",
          "type": "integer",
          "format": "int32"
        },
        "responseSize": {
          "description": "The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body.",
          "type": "string",
          "format": "int64"
        },
        "userAgent": {
          "description": "The user agent sent by the client. Example: `\"Mozilla\/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)\"`.",
          "type": "string"
        },
        "remoteIp": {
          "description": "The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`.",
          "type": "string"
        },
        "serverIp": {
          "description": "The IP address (IPv4 or IPv6) of the origin server that the request was sent to.",
          "type": "string"
        },
        "referer": {
          "description": "The referer URL of the request, as defined in [HTTP\/1.1 Header Field Definitions](http:\/\/www.w3.org\/Protocols\/rfc2616\/rfc2616-sec14.html).",
          "type": "string"
        },
        "latency": {
          "description": "The request processing latency on the server, from the time the request was received until the response was sent.",
          "type": "string",
          "format": "google-duration"
        },
        "cacheLookup": {
          "description": "Whether or not a cache lookup was attempted.",
          "type": "boolean"
        },
        "cacheHit": {
          "description": "Whether or not an entity was served from cache (with or without validation).",
          "type": "boolean"
        },
        "cacheValidatedWithOriginServer": {
          "description": "Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if `cache_hit` is True.",
          "type": "boolean"
        },
        "cacheFillBytes": {
          "description": "The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted.",
          "type": "string",
          "format": "int64"
        },
        "protocol": {
          "description": "Protocol used for the request. Examples: \"HTTP\/1.1\", \"HTTP\/2\", \"websocket\"",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1LogEntryOperation": {
      "id": "GoogleApiServicecontrolV1LogEntryOperation",
      "description": "Additional information about a potentially long-running operation with which a log entry is associated.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation.",
          "type": "string"
        },
        "producer": {
          "description": "Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com\/MyProject\/MyApplication\"`.",
          "type": "string"
        },
        "first": {
          "description": "Optional. Set this to True if this is the first log entry in the operation.",
          "type": "boolean"
        },
        "last": {
          "description": "Optional. Set this to True if this is the last log entry in the operation.",
          "type": "boolean"
        }
      }
    },
    "GoogleApiServicecontrolV1LogEntrySourceLocation": {
      "id": "GoogleApiServicecontrolV1LogEntrySourceLocation",
      "description": "Additional information about the source code location that produced the log entry.",
      "type": "object",
      "properties": {
        "file": {
          "description": "Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.",
          "type": "string"
        },
        "line": {
          "description": "Optional. Line within the source file. 1-based; 0 indicates no line number available.",
          "type": "string",
          "format": "int64"
        },
        "function": {
          "description": "Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: `qual.if.ied.Class.method` (Java), `dir\/package.func` (Go), `function` (Python).",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1QuotaProperties": {
      "id": "GoogleApiServicecontrolV1QuotaProperties",
      "description": "Represents the properties needed for quota operations.",
      "type": "object",
      "properties": {
        "quotaMode": {
          "description": "Quota mode for this operation.",
          "type": "string",
          "enumDescriptions": [
            "Decreases available quota by the cost specified for the operation. If cost is higher than available quota, operation fails and returns error.",
            "Decreases available quota by the cost specified for the operation. If cost is higher than available quota, operation does not fail and available quota goes down to zero but it returns error.",
            "Does not change any available quota. Only checks if there is enough quota. No lock is placed on the checked tokens neither."
          ],
          "enum": [
            "ACQUIRE",
            "ACQUIRE_BEST_EFFORT",
            "CHECK"
          ]
        }
      }
    },
    "GoogleApiServicecontrolV1ResourceInfo": {
      "id": "GoogleApiServicecontrolV1ResourceInfo",
      "description": "Describes a resource associated with this operation.",
      "type": "object",
      "properties": {
        "resourceContainer": {
          "description": "The identifier of the parent of this resource instance. Must be in one of the following formats: - `projects\/` - `folders\/` - `organizations\/`",
          "type": "string"
        },
        "resourceName": {
          "description": "Name of the resource. This is used for auditing purposes. The value of this field will be used for proto.resource_name field of CloudAuditRecord and generating authorization error message text.",
          "type": "string"
        },
        "resourceLocation": {
          "description": "The location of the resource. If not empty, the resource will be checked against location policy. The value must be a valid zone, region or multiregion. For example: \"europe-west4\" or \"northamerica-northeast1-a\"",
          "type": "string"
        },
        "permission": {
          "description": "The resource permission required for this request. Should be an IAM Permission with the format \"{service}\/{plural}.{verb}\".",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1TraceSpan": {
      "id": "GoogleApiServicecontrolV1TraceSpan",
      "description": "A span represents a single operation within a trace. Spans can be nested to form a trace tree. Often, a trace contains a root span that describes the end-to-end latency, and one or more subspans for its sub-operations. A trace can also contain multiple root spans, or none at all. Spans do not need to be contiguous\u2014there may be gaps or overlaps between spans in a trace. This message is equivalent with google.devtools.cloudtrace.v2.Span.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the span in the following format: projects\/[PROJECT_ID]\/traces\/[TRACE_ID]\/spans\/SPAN_ID is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. [SPAN_ID] is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.",
          "type": "string"
        },
        "spanId": {
          "description": "The [SPAN_ID] portion of the span's resource name.",
          "type": "string"
        },
        "parentSpanId": {
          "description": "The [SPAN_ID] of this span's parent span. If this is a root span, then this field must be empty.",
          "type": "string"
        },
        "displayName": {
          "description": "A description of the span's operation (up to 128 bytes). Stackdriver Trace displays the description in the Google Cloud Platform Console. For example, the display name can be a qualified method name or a file name and a line number where the operation is called. A best practice is to use the same display name within an application and at the same call point. This makes it easier to correlate spans in different traces.",
          "$ref": "GoogleApiServicecontrolV1TruncatableString"
        },
        "startTime": {
          "description": "The start time of the span. On the client side, this is the time kept by the local machine where the span execution starts. On the server side, this is the time when the server's application handler starts running.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The end time of the span. On the client side, this is the time kept by the local machine where the span execution ends. On the server side, this is the time when the server application handler stops running.",
          "type": "string",
          "format": "google-datetime"
        },
        "attributes": {
          "description": "A set of attributes on the span. You can have up to 32 attributes per span.",
          "$ref": "GoogleApiServicecontrolV1Attributes"
        },
        "status": {
          "description": "An optional final status for this span.",
          "$ref": "Status"
        },
        "sameProcessAsParentSpan": {
          "description": "(Optional) Set this parameter to indicate whether this span is in the same process as its parent. If you do not set this parameter, Stackdriver Trace is unable to take advantage of this helpful information.",
          "type": "boolean"
        },
        "childSpanCount": {
          "description": "An optional number of child spans that were generated while this span was active. If set, allows implementation to detect missing child spans.",
          "type": "integer",
          "format": "int32"
        },
        "spanKind": {
          "description": "Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using `CLIENT` (caller) and `SERVER` (callee) to identify an RPC call.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified. Do NOT use as default. Implementations MAY assume SpanKind.INTERNAL to be default.",
            "Indicates that the span is used internally. Default value.",
            "Indicates that the span covers server-side handling of an RPC or other remote network request.",
            "Indicates that the span covers the client-side wrapper around an RPC or other remote request.",
            "Indicates that the span describes producer sending a message to a broker. Unlike client and server, there is no direct critical path latency relationship between producer and consumer spans (e.g. publishing a message to a pubsub service).",
            "Indicates that the span describes consumer receiving a message from a broker. Unlike client and server, there is no direct critical path latency relationship between producer and consumer spans (e.g. receiving a message from a pubsub service subscription)."
          ],
          "enum": [
            "SPAN_KIND_UNSPECIFIED",
            "INTERNAL",
            "SERVER",
            "CLIENT",
            "PRODUCER",
            "CONSUMER"
          ]
        }
      }
    },
    "GoogleApiServicecontrolV1TruncatableString": {
      "id": "GoogleApiServicecontrolV1TruncatableString",
      "description": "Represents a string that might be shortened to a specified length. This message is equivalent with google.devtools.cloudtrace.v2.TruncatableString.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The shortened string. For example, if the original string is 500 bytes long and the limit of the string is 128 bytes, then `value` contains the first 128 bytes of the 500-byte string. Truncation always happens on a UTF8 character boundary. If there are multi-byte characters in the string, then the length of the shortened string might be less than the size limit.",
          "type": "string"
        },
        "truncatedByteCount": {
          "description": "The number of bytes removed from the original string. If this value is 0, then the string was not shortened.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleApiServicecontrolV1Attributes": {
      "id": "GoogleApiServicecontrolV1Attributes",
      "description": "A set of attributes, each in the format `[KEY]:[VALUE]`.",
      "type": "object",
      "properties": {
        "attributeMap": {
          "description": "The set of attributes. Each attribute's key can be up to 128 bytes long. The value can be a string up to 256 bytes, a signed 64-bit integer, or the Boolean values `true` and `false`. For example: \"\/instance_id\": \"my-instance\" \"\/http\/user_agent\": \"\" \"\/http\/request_bytes\": 300 \"abc.com\/myattribute\": true",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleApiServicecontrolV1AttributeValue"
          }
        },
        "droppedAttributesCount": {
          "description": "The number of attributes that were discarded. Attributes can be discarded because their keys are too long or because there are too many attributes. If this value is 0 then all attributes are valid.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleApiServicecontrolV1AttributeValue": {
      "id": "GoogleApiServicecontrolV1AttributeValue",
      "description": "The allowed types for [VALUE] in a `[KEY]:[VALUE]` attribute.",
      "type": "object",
      "properties": {
        "stringValue": {
          "description": "A string up to 256 bytes long.",
          "$ref": "GoogleApiServicecontrolV1TruncatableString"
        },
        "intValue": {
          "description": "A 64-bit signed integer.",
          "type": "string",
          "format": "int64"
        },
        "boolValue": {
          "description": "A Boolean value represented by `true` or `false`.",
          "type": "boolean"
        }
      }
    },
    "Reference": {
      "id": "Reference",
      "description": "Represents a reference to a resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Relative resource name of the reference. Includes target resource as a parent and reference uid `{target_resource}\/references\/{reference_id}`. For example, `projects\/{my-project}\/locations\/{location}\/instances\/{my-instance}\/references\/{xyz}`.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Required. Type of the reference. A service might impose limits on number of references of a specific type. Note: It's recommended to use CAPITALS_WITH_UNDERSCORES style for a type name.",
          "type": "string"
        },
        "sourceResource": {
          "description": "Required. Full resource name of the resource which refers the target resource. For example: \/\/tpu.googleapis.com\/projects\/myproject\/nodes\/mynode",
          "type": "string"
        },
        "details": {
          "description": "Details of the reference type with no implied semantics. Cumulative size of the field must not be more than 1KiB. Note: For the Arcus Reference API, you must add the proto you store in this field to http:\/\/cs\/symbol:cloud.cluster.reference.ReferencePayload",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "targetUniqueId": {
          "description": "Output only. The unique_id of the target resource. Example 1: (For arcus resource) A-1-0-2-387420123-13-913517247483640811 unique_id format defined in go\/m11n-unique-id-as-resource-id Example 2: (For CCFE resource) 123e4567-e89b-12d3-a456-426614174000",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "CreateReferenceRequest": {
      "id": "CreateReferenceRequest",
      "description": "The CreateReferenceRequest request.",
      "type": "object",
      "properties": {
        "parent": {
          "description": "Required. The parent resource name (target_resource of this reference). For example: `\/\/targetservice.googleapis.com\/projects\/{my-project}\/locations\/{location}\/instances\/{my-instance}`.",
          "type": "string"
        },
        "referenceId": {
          "description": "The unique id of this resource. Must be unique within a scope of a target resource, but does not have to be globally unique. Reference ID is part of resource name of the reference. Resource name is generated in the following way: {parent}\/references\/{reference_id}. Reference ID field is currently required but id auto generation might be added in the future. It can be any arbitrary string, either GUID or any other string, however CLHs can use preprocess callbacks to perform a custom validation.",
          "type": "string"
        },
        "reference": {
          "description": "Required. The reference to be created.",
          "$ref": "Reference"
        },
        "requestId": {
          "description": "Optional. Request ID is an idempotency ID of the request. It must be a valid UUID. Zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
          "type": "string"
        }
      }
    },
    "DeleteReferenceRequest": {
      "id": "DeleteReferenceRequest",
      "description": "The DeleteReferenceRequest request.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Full resource name of the reference, in the following format: `\/\/{targer_service}\/{target_resource}\/references\/{reference_id}`. For example: `\/\/targetservice.googleapis.com\/projects\/{my-project}\/locations\/{location}\/instances\/{my-instance}\/references\/{xyz}`.",
          "type": "string"
        },
        "requestId": {
          "description": "Optional. Request ID is an idempotency ID of the request. It must be a valid UUID. Zero UUID (00000000-0000-0000-0000-000000000000) is not supported.",
          "type": "string"
        }
      }
    },
    "GetReferenceRequest": {
      "id": "GetReferenceRequest",
      "description": "The GetReferenceRequest request.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Full resource name of the reference, in the following format: `\/\/{target_service}\/{target_resource}\/references\/{reference_id}`. For example: `\/\/targetservice.googleapis.com\/projects\/{my-project}\/locations\/{location}\/instances\/{my-instance}\/references\/{xyz}`.",
          "type": "string"
        }
      }
    },
    "ListReferencesRequest": {
      "id": "ListReferencesRequest",
      "description": "The ListResourceMetadataRequest request.",
      "type": "object",
      "properties": {
        "parent": {
          "description": "Required. The parent resource name (target_resource of this reference). For example: `\/\/targetservice.googleapis.com\/projects\/{my-project}\/locations\/{location}\/instances\/{my-instance}`.",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of items to return. If unspecified, server will pick an appropriate default. Server may return fewer items than requested. A caller should only rely on response's next_page_token to determine if there are more References left to be queried.",
          "type": "integer",
          "format": "int32"
        },
        "pageToken": {
          "description": "The next_page_token value returned from a previous List request, if any.",
          "type": "string"
        }
      }
    },
    "ListReferencesResponse": {
      "id": "ListReferencesResponse",
      "description": "The ListReferencesResponse response.",
      "type": "object",
      "properties": {
        "references": {
          "description": "The list of references.",
          "type": "array",
          "items": {
            "$ref": "Reference"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "stream.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "includeUnrevealedLocations": {
                  "description": "If true, the returned list will include locations which are not yet revealed.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "stream.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "stream.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "stream.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "stream.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "stream.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "streamContents": {
              "methods": {
                "list": {
                  "id": "stream.projects.locations.streamContents.list",
                  "path": "v1alpha1/{+parent}/streamContents",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamContents",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListStreamContentsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListStreamContentsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists StreamContents in a given project and location."
                },
                "get": {
                  "id": "stream.projects.locations.streamContents.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamContents/{streamContentsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Canonical resource name of the content.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamContents\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "StreamContent"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single StreamContent."
                },
                "create": {
                  "id": "stream.projects.locations.streamContents.create",
                  "path": "v1alpha1/{+parent}/streamContents",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamContents",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "streamContentId": {
                      "description": "Required. Id of the requesting object If the id is generated from the server-side, remove this field and stream_content_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "StreamContent"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new StreamContent that manages the metadata and builds of user-provided Stream compatible content sources in a consumer cloud storage bucket. The returned Operation can be used to track the creation status by polling operations.get. The Operation will complete when the creation is done. Returns [StreamContent] in the Operation.response field on successful completion."
                },
                "patch": {
                  "id": "stream.projects.locations.streamContents.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamContents/{streamContentsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamContents\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the StreamContent resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StreamContent"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single StreamContent."
                },
                "delete": {
                  "id": "stream.projects.locations.streamContents.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamContents/{streamContentsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Canonical resource name of the content.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamContents\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single StreamContent. This method removes the version history of content builds but does not delete any content source in the consumer cloud storage bucket. The returned Operation can be used to track the deletion status by polling operations.get. The Operation will complete when the deletion is done. Returns Empty in the Operation.response field on successful completion."
                },
                "build": {
                  "id": "stream.projects.locations.streamContents.build",
                  "path": "v1alpha1/{+name}:build",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamContents/{streamContentsId}:build",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Canonical resource name of the content.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamContents\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "BuildStreamContentRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Builds the content to a Stream compatible format using the associated sources in a consumer cloud storage bucket. A new content version is created with the user-specified tag if the build succeeds. The returned Operation can be used to track the build status by polling operations.get. The Operation will complete when the build is done. Returns [StreamContent] in the Operation.response field on successful completion."
                }
              }
            },
            "streamInstances": {
              "methods": {
                "list": {
                  "id": "stream.projects.locations.streamInstances.list",
                  "path": "v1alpha1/{+parent}/streamInstances",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamInstances",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListStreamInstancesRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListStreamInstancesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists StreamInstances in a given project and location."
                },
                "get": {
                  "id": "stream.projects.locations.streamInstances.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamInstances/{streamInstancesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Canonical resource name of the instance.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamInstances\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "StreamInstance"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single StreamInstance."
                },
                "create": {
                  "id": "stream.projects.locations.streamInstances.create",
                  "path": "v1alpha1/{+parent}/streamInstances",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamInstances",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "streamInstanceId": {
                      "description": "Required. Id of the requesting object If the id is generated from the server-side, remove this field and stream_instance_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "StreamInstance"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new StreamInstance that manages the turnup and rollout of the streaming service for a given StreamContent. The returned Operation can be used to track the creation status by polling operations.get. The Operation will complete when the creation is done. Returns [StreamInstance] in the Operation.response field on successful completion."
                },
                "patch": {
                  "id": "stream.projects.locations.streamInstances.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamInstances/{streamInstancesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamInstances\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the StreamInstance resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StreamInstance"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single StreamInstance."
                },
                "delete": {
                  "id": "stream.projects.locations.streamInstances.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/streamInstances/{streamInstancesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Canonical resource name of the instance.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamInstances\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single StreamInstance. This method tears down the streaming service of the associated StreamContent. The returned Operation can be used to track the deletion status by polling operations.get. The Operation will complete when the deletion is done. Returns Empty in the Operation.response field on successful completion."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}