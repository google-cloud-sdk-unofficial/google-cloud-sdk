{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "config:v1alpha1",
  "name": "config",
  "canonicalName": "Config",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Cloud Config Manager API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/",
  "protocol": "rest",
  "rootUrl": "https://config.googleapis.com/",
  "mtlsRootUrl": "https://config.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://config.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListDeploymentsResponse": {
      "id": "ListDeploymentsResponse",
      "type": "object",
      "properties": {
        "deployments": {
          "description": "List of Deployments.",
          "type": "array",
          "items": {
            "$ref": "Deployment"
          }
        },
        "nextPageToken": {
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Deployment": {
      "id": "Deployment",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name of the deployment. Format: `projects\/{project}\/locations\/{location}\/deployments\/{deployment}`",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time the deployment was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time the deployment was last modified.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "User-defined metadata for the deployment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. Current state of the deployment.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The deployment is being created.",
            "The deployment is healthy.",
            "The deployment is being updated.",
            "The deployment is being deleted.",
            "The deployment has encountered an unexpected error.",
            "The deployment is no longer being actively reconciled. This may be the result of recovering the project after deletion.",
            "The deployment is deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "UPDATING",
            "DELETING",
            "FAILED",
            "SUSPENDED",
            "DELETED"
          ]
        },
        "blueprint": {
          "description": "Required. Blueprint to deploy.",
          "$ref": "Blueprint"
        },
        "latestRevision": {
          "description": "Output only. Revision that was most recently applied. Format: `projects\/{project}\/locations\/{location}\/deployments\/{deployment}\/ revisions\/{revision}`",
          "readOnly": true,
          "type": "string"
        },
        "deleteResults": {
          "description": "Output only. Locations of outputs from delete operation.",
          "readOnly": true,
          "$ref": "ApplyResults"
        },
        "stateDetail": {
          "description": "Output only. Additional information regarding the current state.",
          "readOnly": true,
          "type": "string"
        },
        "errorCode": {
          "description": "Output only. Code describing any errors that may have occurred.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No error code was specified.",
            "The revision failed (check its error code).",
            "Cluster creation failed due to a permissions issue.",
            "Cloud Build failed due to a permissions issue.",
            "Cluster creation failed for a non-permissions-related issue.",
            "The deletion Cloud Build failed before logs could be generated.",
            "The deletion Cloud Build failed after logs could be generated.",
            "A Cloud Storage bucket failed due to a permissions issue.",
            "A Cloud Storage bucket failed for a non-permissions-related issue."
          ],
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "REVISION_FAILED",
            "CLUSTER_CREATION_PERMISSION_DENIED",
            "CLOUD_BUILD_PERMISSION_DENIED",
            "CLUSTER_CREATION_FAILED",
            "DELETE_BUILD_API_FAILED",
            "DELETE_BUILD_RUN_FAILED",
            "BUCKET_CREATION_PERMISSION_DENIED",
            "BUCKET_CREATION_FAILED"
          ]
        },
        "reconcileTimeout": {
          "description": "Optional. How long apply attempt should wait for resource reconciliation on the Config Controller cluster to complete. If unset, a default value of 5m will be used. A value of 0s indicates that the Deployment will be ACTIVE as soon as resources are applied successfully to the cluster and final resource actuation status will need to be polled on asynchronously.",
          "type": "string",
          "format": "google-duration"
        },
        "configController": {
          "description": "Required. Config Controller instance to deploy to. Format: `projects\/{project}\/locations\/{location}\/krmApiHosts\/{instance}`.",
          "type": "string"
        },
        "createConfigController": {
          "description": "Optional. DEPRECATED: Please use config_controller target.",
          "type": "boolean"
        },
        "gitTarget": {
          "description": "Required. If set, then the hydrated blueprint will be uploaded to the specified Git repository.",
          "$ref": "GitTarget"
        },
        "clusterless": {
          "description": "Required. If set, the deployment will create GCP resources without deploying to a Config Controller instance.",
          "type": "boolean"
        },
        "deleteBuild": {
          "description": "Output only. Cloud Build instance UUID associated with deleting this deployment.",
          "readOnly": true,
          "type": "string"
        },
        "deleteLogs": {
          "description": "Output only. Location of Cloud Build logs in Google Cloud Storage, populated when deleting this deployment. Format: `gs:\/\/{bucket}\/{object}`.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Blueprint": {
      "id": "Blueprint",
      "description": "Contains details surrounding source configurations to be deployed.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Required. URI of an object in Google Cloud Storage. Format: `gs:\/\/{bucket}\/{object}` URI may also specify an object version. Format: `gs:\/\/{bucket}\/{object}#{version}`",
          "type": "string"
        },
        "gitSource": {
          "description": "Required. A set of files in a Git repository.",
          "$ref": "GitSource"
        },
        "preprocessors": {
          "description": "Optional. Functions to run before the pipeline defined in the blueprint's kptfile. At most 5 preprocessors can be provided.",
          "type": "array",
          "items": {
            "$ref": "Function"
          }
        },
        "postprocessors": {
          "description": "Optional. Functions to run after the pipeline defined in the blueprint's kptfile. At most 5 postprocessors can be provided.",
          "type": "array",
          "items": {
            "$ref": "Function"
          }
        }
      }
    },
    "GitSource": {
      "id": "GitSource",
      "description": "A set of files in a Git repository.",
      "type": "object",
      "properties": {
        "repo": {
          "description": "Repository URL. Example: 'https:\/\/github.com\/kubernetes\/examples.git'",
          "type": "string"
        },
        "directory": {
          "description": "Subdirectory inside the repository. Example: 'staging\/my-package'",
          "type": "string"
        },
        "ref": {
          "description": "Git branch or tag.",
          "type": "string"
        }
      }
    },
    "Function": {
      "id": "Function",
      "description": "A function that can be run to modify blueprint contents.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Required. Container image to run. Example: `gcr.io\/kpt-fn\/set-label`",
          "type": "string"
        },
        "config": {
          "description": "Optional. KRM resource passed to the function as input. The entire resource must be no larger than 1024 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "inlineConfig": {
          "description": "Optional. KRM resource passed to the function as inlined input. The entire resource must be no larger than 1024 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "gcsConfig": {
          "description": "Optional. A Cloud Storage link referencing a KRM yaml file to use as input to the function. There are no size limitations on this field. Format: gs:\/\/my-bucket\/my-directory\/my-function-config.yaml",
          "type": "string"
        }
      }
    },
    "ApplyResults": {
      "id": "ApplyResults",
      "description": "Locations of outputs from config application.",
      "type": "object",
      "properties": {
        "content": {
          "description": "Location of generated manifests in Google Cloud Storage. Format: `gs:\/\/{bucket}\/{object}`",
          "type": "string"
        },
        "artifacts": {
          "description": "Location of kpt artifacts in Google Cloud Storage. Format: `gs:\/\/{bucket}\/{object}`",
          "type": "string"
        }
      }
    },
    "GitTarget": {
      "id": "GitTarget",
      "description": "A Git repository to be used as a deployment target.",
      "type": "object",
      "properties": {
        "repo": {
          "description": "Repository URL. Example: 'https:\/\/github.com\/kubernetes\/examples.git'",
          "type": "string"
        },
        "directory": {
          "description": "Subdirectory inside the repository. Example: 'staging\/my-package'",
          "type": "string"
        },
        "branch": {
          "description": "Git branch.",
          "type": "string"
        }
      }
    },
    "ListRevisionsResponse": {
      "id": "ListRevisionsResponse",
      "description": "A response to a 'ListRevisions' call. Contains a list of Revisions.",
      "type": "object",
      "properties": {
        "revisions": {
          "description": "List of Revisions.",
          "type": "array",
          "items": {
            "$ref": "Revision"
          }
        },
        "nextPageToken": {
          "description": "A token to request the next page of resources from the 'ListRevisions' method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Revision": {
      "id": "Revision",
      "description": "A child resource of a Deployment generated by a 'CreateDeployment' or 'UpdateDeployment' call. Each Revision contains artifacts pertaining to a snapshot of a particular Deployment including transformed configurations and logs.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name of the revision. Format: `projects\/{project}\/locations\/{location}\/deployments\/{deployment}\/ revisions\/{revision}`",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time the revision was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time the revision was last modified.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "action": {
          "description": "Output only. The type of action that this revision represents.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the action is omitted.",
            "The revision was generated by creating a deployment.",
            "The revision was generated by updating a deployment.",
            "The revision was generated by deleting a deployment."
          ],
          "enum": [
            "ACTION_UNSPECIFIED",
            "CREATE",
            "UPDATE",
            "DELETE"
          ]
        },
        "state": {
          "description": "Output only. Current state of the revision.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The revision is being applied.",
            "The revision was applied successfully.",
            "The revision could not be applied successfully."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "APPLYING",
            "APPLIED",
            "FAILED"
          ]
        },
        "blueprint": {
          "description": "Output only. Blueprint that was deployed.",
          "readOnly": true,
          "$ref": "Blueprint"
        },
        "pipelineResults": {
          "description": "Output only. Locations of outputs from kpt pipeline execution.",
          "readOnly": true,
          "$ref": "PipelineResults"
        },
        "applyResults": {
          "description": "Output only. Locations of outputs from config application.",
          "readOnly": true,
          "$ref": "ApplyResults"
        },
        "stateDetail": {
          "description": "Output only. Additional information regarding the current state.",
          "readOnly": true,
          "type": "string"
        },
        "errorCode": {
          "description": "Output only. Code describing any errors that may have occurred.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No error code was specified.",
            "A Cloud Storage bucket failed due to a permissions issue. Deprecated in favor of equivalent ErrorCode on Deployment.",
            "A Cloud Storage bucket failed for a non-permissions-related issue. Deprecated in favor of equivalent ErrorCode on Deployment.",
            "Cloud Build failed due to a permissions issue.",
            "The pipeline Cloud Build failed before logs could be generated.",
            "The pipeline Cloud Build failed after logs could be generated.",
            "The apply Cloud Build failed before logs could be generated.",
            "The apply Cloud Build failed after logs could be generated.",
            "The preview Cloud Build failed before logs could be generated.",
            "The preview Cloud Build failed after logs could be generated."
          ],
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "BUCKET_CREATION_PERMISSION_DENIED",
            "BUCKET_CREATION_FAILED",
            "CLOUD_BUILD_PERMISSION_DENIED",
            "PIPELINE_BUILD_API_FAILED",
            "PIPELINE_BUILD_RUN_FAILED",
            "APPLY_BUILD_API_FAILED",
            "APPLY_BUILD_RUN_FAILED",
            "PREVIEW_BUILD_API_FAILED",
            "PREVIEW_BUILD_RUN_FAILED"
          ]
        },
        "reconcileTimeout": {
          "description": "Optional. How long apply attempt should wait for resource reconciliation on the Config Controller cluster to complete. If unset, a default value of 5m will be used. A value of 0s indicates that the Revision will be APPLIED as soon as resources are applied successfully to the cluster and final resource actuation status will need to be polled on asynchronously.",
          "type": "string",
          "format": "google-duration"
        },
        "build": {
          "description": "Output only. Cloud Build instance UUID associated with this revision.",
          "readOnly": true,
          "type": "string"
        },
        "logs": {
          "description": "Output only. Location of Revision operation logs in `gs:\/\/{bucket}\/{object}` format.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "PipelineResults": {
      "id": "PipelineResults",
      "description": "Locations of outputs from kpt pipeline execution.",
      "type": "object",
      "properties": {
        "content": {
          "description": "Location of generated manifests in Google Cloud Storage. Format: `gs:\/\/{bucket}\/{object}`",
          "type": "string"
        },
        "artifacts": {
          "description": "Location of kpt artifacts in Google Cloud Storage. Format: `gs:\/\/{bucket}\/{object}`",
          "type": "string"
        }
      }
    },
    "Preview": {
      "id": "Preview",
      "description": "Preview message contains preview results.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Resource name of the preview. Format: `projects\/{project}\/locations\/{location}\/previews\/{preview}`",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time the preview was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "applyInput": {
          "description": "Input parameters for preview of apply operation.",
          "$ref": "ApplyInput"
        },
        "deleteInput": {
          "description": "Input parameters for preview of delete operation.",
          "$ref": "DeleteInput"
        },
        "previewResults": {
          "description": "Output only. Locations of outputs from preview operation.",
          "readOnly": true,
          "$ref": "PreviewResults"
        },
        "pipelineResults": {
          "description": "Output only. Locations of outputs from kpt pipeline execution.",
          "readOnly": true,
          "$ref": "PipelineResults"
        },
        "state": {
          "description": "Output only. Current state of the preview.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "The preview is being created.",
            "The preview is completed.",
            "The preview has encountered an error."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "COMPLETED",
            "FAILED"
          ]
        },
        "stateDetail": {
          "description": "Output only. Additional information regarding the current state.",
          "readOnly": true,
          "type": "string"
        },
        "errorCode": {
          "description": "Output only. Code describing any errors that may have occurred.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "No error code was specified.",
            "Cluster creation failed due to a permissions issue.",
            "Cloud Build failed due to a permissions issue.",
            "Cluster creation failed for a non-permissions-related issue.",
            "A Cloud Storage bucket failed due to a permissions issue.",
            "A Cloud Storage bucket failed for a non-permissions-related issue.",
            "The pipeline Cloud Build failed before logs could be generated.",
            "The pipeline Cloud Build failed after logs could be generated.",
            "The preview Cloud Build failed before logs could be generated.",
            "The preview Cloud Build failed after logs could be generated."
          ],
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "CLUSTER_CREATION_PERMISSION_DENIED",
            "CLOUD_BUILD_PERMISSION_DENIED",
            "CLUSTER_CREATION_FAILED",
            "BUCKET_CREATION_PERMISSION_DENIED",
            "BUCKET_CREATION_FAILED",
            "PIPELINE_BUILD_API_FAILED",
            "PIPELINE_BUILD_RUN_FAILED",
            "PREVIEW_BUILD_API_FAILED",
            "PREVIEW_BUILD_RUN_FAILED"
          ]
        },
        "build": {
          "description": "Output only. Cloud Build instance UUID associated with this preview.",
          "readOnly": true,
          "type": "string"
        },
        "logs": {
          "description": "Output only. Location of Preview operation logs in `gs:\/\/{bucket}\/{object}` format.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ApplyInput": {
      "id": "ApplyInput",
      "description": "Input parameters for preview of apply operation.",
      "type": "object",
      "properties": {
        "blueprint": {
          "description": "Required. Blueprint to preview.",
          "$ref": "Blueprint"
        },
        "deployment": {
          "description": "Deployment to dry-run modification to during preview. For preview of new deployment this could be left empty. For preview modifications to existing deployment this must match an existing deployment, otherwise this will be considered as a new deployment. Format: `projects\/{project}\/locations\/{location}\/deployments\/{deployment}`",
          "type": "string"
        },
        "configController": {
          "description": "The Config Controller instance to preview configurations against. Format: `projects\/{project}\/locations\/{location}\/krmApiHosts\/{instance}`.",
          "type": "string"
        },
        "createConfigController": {
          "description": "Optional. If set, then a Config Controller instance with a default, well-known name will be created as part of the deployment, if it does not already exist. Note that Blueprints Controller does not manage this Config Controller instance and only creates it.",
          "type": "boolean"
        },
        "pipelineOnly": {
          "description": "Optional. If set, then only the Pipeline will run. The rendered content will still be uploaded to Cloud Storage. No dry-run will occur, and no preview diff artifacts will be generated.",
          "type": "boolean"
        },
        "managedPipelineOnly": {
          "description": "Optional. If set, then only the Pipeline will run. This is functionally identical to `pipeline_only`, but only supports Pipelines consisting of Google-authored Kpt functions. Using the managed pipeline is typically significantly lower latency than `pipeline_only`.",
          "type": "boolean"
        }
      }
    },
    "DeleteInput": {
      "id": "DeleteInput",
      "description": "Input parameters for preview of delete operation.",
      "type": "object",
      "properties": {
        "deployment": {
          "description": "Required. Name of existing deployment to preview its deletion. Format: `projects\/{project}\/locations\/{location}\/deployments\/{deployment}`",
          "type": "string"
        }
      }
    },
    "PreviewResults": {
      "id": "PreviewResults",
      "description": "Locations of outputs from config preview.",
      "type": "object",
      "properties": {
        "content": {
          "description": "Location of generated preview data in Google Cloud Storage. Format: `gs:\/\/{bucket}\/{object}`",
          "type": "string"
        },
        "artifacts": {
          "description": "Location of kpt artifacts in Google Cloud Storage. Format: `gs:\/\/{bucket}\/{object}`",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}\/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https:\/\/cloud.google.com\/kubernetes-engine\/docs\/how-to\/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace\/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. Time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. Time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "deploymentMetadata": {
          "description": "Output only. Metadata about the deployment operation state.",
          "readOnly": true,
          "$ref": "DeploymentOperationMetadata"
        }
      }
    },
    "DeploymentOperationMetadata": {
      "id": "DeploymentOperationMetadata",
      "description": "Ephemeral metadata content describing the state of a deployment operation.",
      "type": "object",
      "properties": {
        "step": {
          "description": "The current step the deployment operation is running.",
          "type": "string",
          "enumDescriptions": [
            "No deployment step was specified.",
            "Checking for existence of a storage bucket and creating one in it's absence. This can take up to 7 minutes on the first deployment.",
            "Checking for existence of a Config Controller instance and creating one in it's absence. This can take up to 20 minutes on the first deployment.",
            "Creating a revision resource.",
            "Blueprint is being processed.",
            "Blueprint is being applied to Config Controller.",
            "Blueprint is being previewed with Config Controller."
          ],
          "enum": [
            "DEPLOYMENT_STEP_UNSPECIFIED",
            "PREPARING_STORAGE_BUCKET",
            "PREPARING_CONFIG_CONTROLLER",
            "CREATING_REVISION",
            "RUNNING_PIPELINE",
            "RUNNING_APPLY",
            "RUNNING_PREVIEW"
          ]
        },
        "pipelineResults": {
          "description": "Locations of outputs from kpt pipeline execution.",
          "$ref": "PipelineResults"
        },
        "applyResults": {
          "description": "Locations of outputs from config application.",
          "$ref": "ApplyResults"
        },
        "build": {
          "description": "Output only. Cloud Build instance UUID associated with this operation.",
          "readOnly": true,
          "type": "string"
        },
        "logs": {
          "description": "Output only. Location of Deployment operations logs in `gs:\/\/{bucket}\/{object}` format.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "config.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "config.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "config.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "config.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "config.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "config.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "id": "config.projects.locations.deployments.list",
                  "path": "v1alpha1/{+parent}/deployments",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent in whose context the Deployments are listed. The parent value is in the format: 'projects\/{project_id}\/locations\/{location}'.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDeploymentsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Deployments in a given project and location."
                },
                "get": {
                  "id": "config.projects.locations.deployments.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments/{deploymentsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of this service resource in the format: 'projects\/{project_id}\/locations\/{location}\/deployments\/{deployment}'.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/deployments\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Deployment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Deployment."
                },
                "create": {
                  "id": "config.projects.locations.deployments.create",
                  "path": "v1alpha1/{+parent}/deployments",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent in whose context the Deployment is created. The parent value is in the format: 'projects\/{project_id}\/locations\/{location}'.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "deploymentId": {
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Deployment"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Deployment in a given project and location."
                },
                "patch": {
                  "id": "config.projects.locations.deployments.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments/{deploymentsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Resource name of the deployment. Format: `projects\/{project}\/locations\/{location}\/deployments\/{deployment}`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/deployments\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Field mask is used to specify the fields to be overwritten in the Deployment resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Deployment"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Deployment."
                },
                "delete": {
                  "id": "config.projects.locations.deployments.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments/{deploymentsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of this service resource in the format: 'projects\/{project_id}\/locations\/{location}\/deployments\/{deployment}'.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/deployments\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "If set to true, any revisions for this deployment will also be deleted. (Otherwise, the request will only work if the deployment has no revisions.)",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Deployment."
                },
                "setIamPolicy": {
                  "id": "config.projects.locations.deployments.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments/{deploymentsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/deployments\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "config.projects.locations.deployments.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments/{deploymentsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/deployments\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "config.projects.locations.deployments.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments/{deploymentsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/deployments\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
              ,
              "resources": {
                "revisions": {
                  "methods": {
                    "list": {
                      "id": "config.projects.locations.deployments.revisions.list",
                      "path": "v1alpha1/{+parent}/revisions",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments/{deploymentsId}/revisions",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent in whose context the Revisions are listed. The parent value is in the format: 'projects\/{project_id}\/locations\/{location}\/deployments\/{deployment}'.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/deployments\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "When requesting a 'page' of resources, 'page_size' specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Token returned by previous call to 'ListRevisions' which specifies the position in the list from where to continue listing the resources.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Lists the Revisions that match the filter expression. A filter expression filters the resources listed in the response. The expression must be of the form '{field} {operator} {value}' where operators: '<', '>', '<=', '>=', '!=', '=', ':' are supported (colon ':' represents a HAS operator which is roughly synonymous with equality). {field} can refer to a proto or JSON field, or a synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name = \"projects\/foo\/locations\/us-central1\/deployments\/dep\/revisions\/bar - Filter by labels: - Resources that have a key called 'foo' labels.foo:* - Resources that have a key called 'foo' whose value is 'bar' labels.foo = bar - Filter by state: - Revisions in CREATING state. state=CREATING",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Field to use to sort the list.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListRevisionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Deployments in a given project and location."
                    },
                    "get": {
                      "id": "config.projects.locations.deployments.revisions.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/deployments/{deploymentsId}/revisions/{revisionsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of this service resource in the format: 'projects\/{project_id}\/locations\/{location}\/deployments\/{deployment}\/revisions\/{revision}'.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/deployments\/[^\/]+\/revisions\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Revision"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Deployment."
                    }
                  }
                }
              }
            },
            "previews": {
              "methods": {
                "create": {
                  "id": "config.projects.locations.previews.create",
                  "path": "v1alpha1/{+parent}/previews",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/previews",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent in whose context the Preview is created. The parent value is in the format: 'projects\/{project_id}\/locations\/{location}'.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Preview"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Preview in a given project and location."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}