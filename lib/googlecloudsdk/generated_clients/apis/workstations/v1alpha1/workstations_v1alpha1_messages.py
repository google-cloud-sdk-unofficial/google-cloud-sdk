"""Generated message classes for workstations version v1alpha1.

"""
# NOTE: This file is autogenerated and should not be edited by hand.

from __future__ import absolute_import

from apitools.base.protorpclite import messages as _messages
from apitools.base.py import encoding
from apitools.base.py import extra_types


package = 'workstations'


class AuditConfig(_messages.Message):
  r"""Specifies the audit configuration for a service. The configuration
  determines which permission types are logged, and what identities, if any,
  are exempted from logging. An AuditConfig must have one or more
  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
  specific service, the union of the two AuditConfigs is used for that
  service: the log_types specified in each AuditConfig are enabled, and the
  exempted_members in each AuditLogConfig are exempted. Example Policy with
  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
  "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
  "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For
  sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
  logging. It also exempts `jose@example.com` from DATA_READ logging, and
  `aliya@example.com` from DATA_WRITE logging.

  Fields:
    auditLogConfigs: The configuration for logging of each type of permission.
    service: Specifies a service that will be enabled for audit logging. For
      example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
      `allServices` is a special value that covers all services.
  """

  auditLogConfigs = _messages.MessageField('AuditLogConfig', 1, repeated=True)
  service = _messages.StringField(2)


class AuditLogConfig(_messages.Message):
  r"""Provides the configuration for logging a type of permissions. Example: {
  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
  "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from
  DATA_READ logging.

  Enums:
    LogTypeValueValuesEnum: The log type that this config enables.

  Fields:
    exemptedMembers: Specifies the identities that do not cause logging for
      this type of permission. Follows the same format of Binding.members.
    ignoreChildExemptions: A boolean attribute.
    logType: The log type that this config enables.
  """

  class LogTypeValueValuesEnum(_messages.Enum):
    r"""The log type that this config enables.

    Values:
      LOG_TYPE_UNSPECIFIED: Default case. Should never be this.
      ADMIN_READ: Admin reads. Example: CloudIAM getIamPolicy
      DATA_WRITE: Data writes. Example: CloudSQL Users create
      DATA_READ: Data reads. Example: CloudSQL Users list
    """
    LOG_TYPE_UNSPECIFIED = 0
    ADMIN_READ = 1
    DATA_WRITE = 2
    DATA_READ = 3

  exemptedMembers = _messages.StringField(1, repeated=True)
  ignoreChildExemptions = _messages.BooleanField(2)
  logType = _messages.EnumField('LogTypeValueValuesEnum', 3)


class AuthorizationLoggingOptions(_messages.Message):
  r"""Authorization-related information used by Cloud Audit Logging.

  Enums:
    PermissionTypeValueValuesEnum: The type of the permission that was
      checked.

  Fields:
    permissionType: The type of the permission that was checked.
  """

  class PermissionTypeValueValuesEnum(_messages.Enum):
    r"""The type of the permission that was checked.

    Values:
      PERMISSION_TYPE_UNSPECIFIED: Default. Should not be used.
      ADMIN_READ: A read of admin (meta) data.
      ADMIN_WRITE: A write of admin (meta) data.
      DATA_READ: A read of standard data.
      DATA_WRITE: A write of standard data.
    """
    PERMISSION_TYPE_UNSPECIFIED = 0
    ADMIN_READ = 1
    ADMIN_WRITE = 2
    DATA_READ = 3
    DATA_WRITE = 4

  permissionType = _messages.EnumField('PermissionTypeValueValuesEnum', 1)


class Binding(_messages.Message):
  r"""Associates `members`, or principals, with a `role`.

  Fields:
    bindingId: A string attribute.
    condition: The condition that is associated with this binding. If the
      condition evaluates to `true`, then this binding applies to the current
      request. If the condition evaluates to `false`, then this binding does
      not apply to the current request. However, a different role binding
      might grant the same role to one or more of the principals in this
      binding. To learn which resources support conditions in their IAM
      policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    members: Specifies the principals requesting access for a Google Cloud
      resource. `members` can have the following values: * `allUsers`: A
      special identifier that represents anyone who is on the internet; with
      or without a Google account. * `allAuthenticatedUsers`: A special
      identifier that represents anyone who is authenticated with a Google
      account or a service account. Does not include identities that come from
      external identity providers (IdPs) through identity federation. *
      `user:{emailid}`: An email address that represents a specific Google
      account. For example, `alice@example.com` . *
      `serviceAccount:{emailid}`: An email address that represents a Google
      service account. For example, `my-other-
      app@appspot.gserviceaccount.com`. *
      `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
      An identifier for a [Kubernetes service
      account](https://cloud.google.com/kubernetes-engine/docs/how-
      to/kubernetes-service-accounts). For example, `my-
      project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
      `group:{emailid}`: An email address that represents a Google group. For
      example, `admins@example.com`. *
      `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
      identifier) representing a user that has been recently deleted. For
      example, `alice@example.com?uid=123456789012345678901`. If the user is
      recovered, this value reverts to `user:{emailid}` and the recovered user
      retains the role in the binding. *
      `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
      (plus unique identifier) representing a service account that has been
      recently deleted. For example, `my-other-
      app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the
      service account is undeleted, this value reverts to
      `serviceAccount:{emailid}` and the undeleted service account retains the
      role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An
      email address (plus unique identifier) representing a Google group that
      has been recently deleted. For example,
      `admins@example.com?uid=123456789012345678901`. If the group is
      recovered, this value reverts to `group:{emailid}` and the recovered
      group retains the role in the binding. * `domain:{domain}`: The G Suite
      domain (primary) that represents all the users of that domain. For
      example, `google.com` or `example.com`.
    role: Role that is assigned to the list of `members`, or principals. For
      example, `roles/viewer`, `roles/editor`, or `roles/owner`.
  """

  bindingId = _messages.StringField(1)
  condition = _messages.MessageField('Expr', 2)
  members = _messages.StringField(3, repeated=True)
  role = _messages.StringField(4)


class CancelOperationRequest(_messages.Message):
  r"""The request message for Operations.CancelOperation."""


class CloudAuditOptions(_messages.Message):
  r"""Write a Cloud Audit log

  Enums:
    LogNameValueValuesEnum: The log_name to populate in the Cloud Audit
      Record.

  Fields:
    authorizationLoggingOptions: Information used by the Cloud Audit Logging
      pipeline.
    logName: The log_name to populate in the Cloud Audit Record.
  """

  class LogNameValueValuesEnum(_messages.Enum):
    r"""The log_name to populate in the Cloud Audit Record.

    Values:
      UNSPECIFIED_LOG_NAME: Default. Should not be used.
      ADMIN_ACTIVITY: Corresponds to "cloudaudit.googleapis.com/activity"
      DATA_ACCESS: Corresponds to "cloudaudit.googleapis.com/data_access"
    """
    UNSPECIFIED_LOG_NAME = 0
    ADMIN_ACTIVITY = 1
    DATA_ACCESS = 2

  authorizationLoggingOptions = _messages.MessageField('AuthorizationLoggingOptions', 1)
  logName = _messages.EnumField('LogNameValueValuesEnum', 2)


class Condition(_messages.Message):
  r"""A condition to be met.

  Enums:
    IamValueValuesEnum: Trusted attributes supplied by the IAM system.
    OpValueValuesEnum: An operator to apply the subject with.
    SysValueValuesEnum: Trusted attributes supplied by any service that owns
      resources and uses the IAM system for access control.

  Fields:
    iam: Trusted attributes supplied by the IAM system.
    op: An operator to apply the subject with.
    svc: Trusted attributes discharged by the service.
    sys: Trusted attributes supplied by any service that owns resources and
      uses the IAM system for access control.
    values: The objects of the condition.
  """

  class IamValueValuesEnum(_messages.Enum):
    r"""Trusted attributes supplied by the IAM system.

    Values:
      NO_ATTR: Default non-attribute.
      AUTHORITY: Either principal or (if present) authority selector.
      ATTRIBUTION: The principal (even if an authority selector is present),
        which must only be used for attribution, not authorization.
      SECURITY_REALM: Any of the security realms in the IAMContext
        (go/security-realms). When used with IN, the condition indicates "any
        of the request's realms match one of the given values; with NOT_IN,
        "none of the realms match any of the given values". Note that a value
        can be: - 'self:campus' (i.e., clients that are in the same campus) -
        'self:metro' (i.e., clients that are in the same metro) - 'self:cloud-
        region' (i.e., allow connections from clients that are in the same
        cloud region) - 'self:prod-region' (i.e., allow connections from
        clients that are in the same prod region) - 'guardians' (i.e., allow
        connections from its guardian realms. See go/security-realms-
        glossary#guardian for more information.) - 'self' [DEPRECATED] (i.e.,
        allow connections from clients that are in the same security realm,
        which is currently but not guaranteed to be campus-sized) - a realm
        (e.g., 'campus-abc') - a realm group (e.g., 'realms-for-borg-cell-xx',
        see: go/realm-groups) A match is determined by a realm group
        membership check performed by a RealmAclRep object (go/realm-acl-
        howto). It is not permitted to grant access based on the *absence* of
        a realm, so realm conditions can only be used in a "positive" context
        (e.g., ALLOW/IN or DENY/NOT_IN).
      APPROVER: An approver (distinct from the requester) that has authorized
        this request. When used with IN, the condition indicates that one of
        the approvers associated with the request matches the specified
        principal, or is a member of the specified group. Approvers can only
        grant additional access, and are thus only used in a strictly positive
        context (e.g. ALLOW/IN or DENY/NOT_IN).
      JUSTIFICATION_TYPE: What types of justifications have been supplied with
        this request. String values should match enum names from
        security.credentials.JustificationType, e.g. "MANUAL_STRING". It is
        not permitted to grant access based on the *absence* of a
        justification, so justification conditions can only be used in a
        "positive" context (e.g., ALLOW/IN or DENY/NOT_IN). Multiple
        justifications, e.g., a Buganizer ID and a manually-entered reason,
        are normal and supported.
      CREDENTIALS_TYPE: What type of credentials have been supplied with this
        request. String values should match enum names from
        security_loas_l2.CredentialsType - currently, only
        CREDS_TYPE_EMERGENCY is supported. It is not permitted to grant access
        based on the *absence* of a credentials type, so the conditions can
        only be used in a "positive" context (e.g., ALLOW/IN or DENY/NOT_IN).
      CREDS_ASSERTION: EXPERIMENTAL -- DO NOT USE. The conditions can only be
        used in a "positive" context (e.g., ALLOW/IN or DENY/NOT_IN).
    """
    NO_ATTR = 0
    AUTHORITY = 1
    ATTRIBUTION = 2
    SECURITY_REALM = 3
    APPROVER = 4
    JUSTIFICATION_TYPE = 5
    CREDENTIALS_TYPE = 6
    CREDS_ASSERTION = 7

  class OpValueValuesEnum(_messages.Enum):
    r"""An operator to apply the subject with.

    Values:
      NO_OP: Default no-op.
      EQUALS: DEPRECATED. Use IN instead.
      NOT_EQUALS: DEPRECATED. Use NOT_IN instead.
      IN: The condition is true if the subject (or any element of it if it is
        a set) matches any of the supplied values.
      NOT_IN: The condition is true if the subject (or every element of it if
        it is a set) matches none of the supplied values.
      DISCHARGED: Subject is discharged
    """
    NO_OP = 0
    EQUALS = 1
    NOT_EQUALS = 2
    IN = 3
    NOT_IN = 4
    DISCHARGED = 5

  class SysValueValuesEnum(_messages.Enum):
    r"""Trusted attributes supplied by any service that owns resources and
    uses the IAM system for access control.

    Values:
      NO_ATTR: Default non-attribute type
      REGION: Region of the resource
      SERVICE: Service name
      NAME: Resource name
      IP: IP address of the caller
    """
    NO_ATTR = 0
    REGION = 1
    SERVICE = 2
    NAME = 3
    IP = 4

  iam = _messages.EnumField('IamValueValuesEnum', 1)
  op = _messages.EnumField('OpValueValuesEnum', 2)
  svc = _messages.StringField(3)
  sys = _messages.EnumField('SysValueValuesEnum', 4)
  values = _messages.StringField(5, repeated=True)


class Container(_messages.Message):
  r"""A Docker container.

  Messages:
    EnvValue: Environment variables passed to the container.

  Fields:
    args: Arguments passed to the entrypoint.
    command: If set, overrides the default ENTRYPOINT specified by the image.
    env: Environment variables passed to the container.
    image: Docker image defining the container. This image must be accessible
      by the config's service account.
    runAsUser: If set, overrides the USER specified in the image with the
      given uid.
    workingDir: If set, overrides the default DIR specified by the image.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class EnvValue(_messages.Message):
    r"""Environment variables passed to the container.

    Messages:
      AdditionalProperty: An additional property for a EnvValue object.

    Fields:
      additionalProperties: Additional properties of type EnvValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a EnvValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  args = _messages.StringField(1, repeated=True)
  command = _messages.StringField(2, repeated=True)
  env = _messages.MessageField('EnvValue', 3)
  image = _messages.StringField(4)
  runAsUser = _messages.IntegerField(5, variant=_messages.Variant.INT32)
  workingDir = _messages.StringField(6)


class CounterOptions(_messages.Message):
  r"""Increment a streamz counter with the specified metric and field names.
  Metric names should start with a '/', generally be lowercase-only, and end
  in "_count". Field names should not contain an initial slash. The actual
  exported metric names will have "/iam/policy" prepended. Field names
  correspond to IAM request parameters and field values are their respective
  values. Supported field names: - "authority", which is "[token]" if
  IAMContext.token is present, otherwise the value of
  IAMContext.authority_selector if present, and otherwise a representation of
  IAMContext.principal; or - "iam_principal", a representation of
  IAMContext.principal even if a token or authority selector is present; or -
  "" (empty string), resulting in a counter with no fields. Examples: counter
  { metric: "/debug_access_count" field: "iam_principal" } ==> increment
  counter /iam/policy/debug_access_count {iam_principal=[value of
  IAMContext.principal]}

  Fields:
    customFields: Custom fields.
    field: The field value to attribute.
    metric: The metric to update.
  """

  customFields = _messages.MessageField('CustomField', 1, repeated=True)
  field = _messages.StringField(2)
  metric = _messages.StringField(3)


class CustomField(_messages.Message):
  r"""Custom fields. These can be used to create a counter with arbitrary
  field/value pairs. See: go/rpcsp-custom-fields.

  Fields:
    name: Name is the field name.
    value: Value is the field value. It is important that in contrast to the
      CounterOptions.field, the value here is a constant that is not derived
      from the IAMContext.
  """

  name = _messages.StringField(1)
  value = _messages.StringField(2)


class CustomerEncryptionKey(_messages.Message):
  r"""A customer-specified encryption key for the Google Compute Engine
  resources of this workstation configuration.

  Fields:
    kmsKey: The name of the encryption key that is stored in Google Cloud KMS
      e.g., projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/
      KEY_NAME.
    kmsKeyServiceAccount: The service account being used for the encryption
      request for the given KMS key. If absent, the Compute Engine default
      service account is used. However, it is recommended to use a separate
      service account and to follow KMS best practices mentioned at
      https://cloud.google.com/kms/docs/separation-of-duties
  """

  kmsKey = _messages.StringField(1)
  kmsKeyServiceAccount = _messages.StringField(2)


class DataAccessOptions(_messages.Message):
  r"""Write a Data Access (Gin) log

  Enums:
    LogModeValueValuesEnum:

  Fields:
    logMode: A LogModeValueValuesEnum attribute.
  """

  class LogModeValueValuesEnum(_messages.Enum):
    r"""LogModeValueValuesEnum enum type.

    Values:
      LOG_MODE_UNSPECIFIED: Client is not required to write a partial Gin log
        immediately after the authorization check. If client chooses to write
        one and it fails, client may either fail open (allow the operation to
        continue) or fail closed (handle as a DENY outcome).
      LOG_FAIL_CLOSED: The application's operation in the context of which
        this authorization check is being made may only be performed if it is
        successfully logged to Gin. For instance, the authorization library
        may satisfy this obligation by emitting a partial log entry at
        authorization check time and only returning ALLOW to the application
        if it succeeds. If a matching Rule has this directive, but the client
        has not indicated that it will honor such requirements, then the IAM
        check will result in authorization failure by setting
        CheckPolicyResponse.success=false.
    """
    LOG_MODE_UNSPECIFIED = 0
    LOG_FAIL_CLOSED = 1

  logMode = _messages.EnumField('LogModeValueValuesEnum', 1)


class Empty(_messages.Message):
  r"""A generic empty message that you can re-use to avoid defining duplicated
  empty messages in your APIs. A typical example is to use it as the request
  or the response type of an API method. For instance: service Foo { rpc
  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
  """



class Expr(_messages.Message):
  r"""Represents a textual expression in the Common Expression Language (CEL)
  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
  are documented at https://github.com/google/cel-spec. Example (Comparison):
  title: "Summary size limit" description: "Determines if a summary is less
  than 100 chars" expression: "document.summary.size() < 100" Example
  (Equality): title: "Requestor is owner" description: "Determines if
  requestor is the document owner" expression: "document.owner ==
  request.auth.claims.email" Example (Logic): title: "Public documents"
  description: "Determine whether the document should be publicly visible"
  expression: "document.type != 'private' && document.type != 'internal'"
  Example (Data Manipulation): title: "Notification string" description:
  "Create a notification string with a timestamp." expression: "'New message
  received at ' + string(document.create_time)" The exact variables and
  functions that may be referenced within an expression are determined by the
  service that evaluates it. See the service documentation for additional
  information.

  Fields:
    description: Optional. Description of the expression. This is a longer
      text which describes the expression, e.g. when hovered over it in a UI.
    expression: Textual representation of an expression in Common Expression
      Language syntax.
    location: Optional. String indicating the location of the expression for
      error reporting, e.g. a file name and a position in the file.
    title: Optional. Title for the expression, i.e. a short string describing
      its purpose. This can be used e.g. in UIs which allow to enter the
      expression.
  """

  description = _messages.StringField(1)
  expression = _messages.StringField(2)
  location = _messages.StringField(3)
  title = _messages.StringField(4)


class GceInstanceConfig(_messages.Message):
  r"""Describe a runtime using a Google Compute Engine Instance.

  Fields:
    bootDiskSizeGb: Size of the boot disk in GB.
    disablePublicIpAddresses: Whether instances have no public IP address.
    enableNestedVirtualization: Whether to enable nested virtualization on
      instances.
    machineType: The name of a Google Compute Engine machine type.
    poolSize: Number of instances to pool for faster Workstation starup.
    serviceAccount: Email address of the service account that will be used on
      VM instances used to support this config. This service account must have
      permission to pull the specified container image. If not set, VMs will
      run without a service account, in which case the image must be publicly
      accessible.
    serviceAccountScopes: Scopes to grant to the service account. Various
      scopes are automatically added based on feature usage.
    shieldedInstanceConfig: A set of Shielded Google Compute Engine Instance
      options.
    tags: Network tags to add to the Google Compute Engine machines backing
      the Workstations.
  """

  bootDiskSizeGb = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  disablePublicIpAddresses = _messages.BooleanField(2)
  enableNestedVirtualization = _messages.BooleanField(3)
  machineType = _messages.StringField(4)
  poolSize = _messages.IntegerField(5, variant=_messages.Variant.INT32)
  serviceAccount = _messages.StringField(6)
  serviceAccountScopes = _messages.StringField(7, repeated=True)
  shieldedInstanceConfig = _messages.MessageField('GceShieldedInstanceConfig', 8)
  tags = _messages.StringField(9, repeated=True)


class GceRegionalPersistentDisk(_messages.Message):
  r"""A PersistentDirectory backed by a Compute Engine regional persistent
  disk.

  Enums:
    ReclaimPolicyValueValuesEnum: What should happen to the disk after the
      Workstation is deleted. Defaults to DELETE.

  Fields:
    diskType: Type of the disk to use.
    fsType: Type of file system that the disk should be formatted with. The
      Workstation image must support this file system type.
    reclaimPolicy: What should happen to the disk after the Workstation is
      deleted. Defaults to DELETE.
    sizeGb: Size of the disk in GB.
  """

  class ReclaimPolicyValueValuesEnum(_messages.Enum):
    r"""What should happen to the disk after the Workstation is deleted.
    Defaults to DELETE.

    Values:
      RECLAIM_POLICY_UNSPECIFIED: <no description>
      DELETE: The persistent disk will be deleted with the Workstation.
      RETAIN: The persistent disk will be remain after the workstation is
        deleted, and the administrator must manually delete the disk.
    """
    RECLAIM_POLICY_UNSPECIFIED = 0
    DELETE = 1
    RETAIN = 2

  diskType = _messages.StringField(1)
  fsType = _messages.StringField(2)
  reclaimPolicy = _messages.EnumField('ReclaimPolicyValueValuesEnum', 3)
  sizeGb = _messages.IntegerField(4, variant=_messages.Variant.INT32)


class GceShieldedInstanceConfig(_messages.Message):
  r"""A set of Shielded Google Compute Engine Instance options.

  Fields:
    enableIntegrityMonitoring: Whether the instance has integrity monitoring
      enabled.
    enableSecureBoot: Whether the instance has Secure Boot enabled.
    enableVtpm: Whether the instance has the vTPM enabled.
  """

  enableIntegrityMonitoring = _messages.BooleanField(1)
  enableSecureBoot = _messages.BooleanField(2)
  enableVtpm = _messages.BooleanField(3)


class GenerateAccessTokenRequest(_messages.Message):
  r"""Request message for GenerateAccessToken.

  Fields:
    expireTime: Desired expiration time of the access token. This value must
      be at most 24 hours in the future. If a value is not specified, the
      token's expiration time will be set to a default value of 1 hour in the
      future.
    ttl: Desired lifetime duration of the access token. This value must be at
      most 24 hours. If a value is not specified, the token's lifetime will be
      set to a default value of 1 hour.
  """

  expireTime = _messages.StringField(1)
  ttl = _messages.StringField(2)


class GenerateAccessTokenResponse(_messages.Message):
  r"""Response message for GenerateAccessToken.

  Fields:
    accessToken: The generated bearer access token. To use this token, include
      it in an Authorization header of an HTTP request sent to the associated
      workstation's hostname, e.g. "Authorization: Bearer ".
    expireTime: Time at which the generated token will expire.
  """

  accessToken = _messages.StringField(1)
  expireTime = _messages.StringField(2)


class HostConfig(_messages.Message):
  r"""Describes the runtime host for the Workstation.

  Fields:
    gceInstanceConfig: Specifies a Google Compute Engine Instance as the host.
  """

  gceInstanceConfig = _messages.MessageField('GceInstanceConfig', 1)


class ListOperationsResponse(_messages.Message):
  r"""The response message for Operations.ListOperations.

  Fields:
    nextPageToken: The standard List next-page token.
    operations: A list of operations that matches the specified filter in the
      request.
  """

  nextPageToken = _messages.StringField(1)
  operations = _messages.MessageField('Operation', 2, repeated=True)


class ListUsableWorkstationConfigsResponse(_messages.Message):
  r"""Response message for ListUsableWorkstationConfigs.

  Fields:
    nextPageToken: Token to retrieve the next page of results, or empty if
      there are no more results in the list.
    unreachable: Unreachable resources.
    workstationConfigs: The requested configs.
  """

  nextPageToken = _messages.StringField(1)
  unreachable = _messages.StringField(2, repeated=True)
  workstationConfigs = _messages.MessageField('WorkstationConfig', 3, repeated=True)


class ListUsableWorkstationsResponse(_messages.Message):
  r"""Response message for ListUsableWorkstations.

  Fields:
    nextPageToken: Token to retrieve the next page of results, or empty if
      there are no more results in the list.
    unreachable: Unreachable resources.
    workstations: The requested workstations.
  """

  nextPageToken = _messages.StringField(1)
  unreachable = _messages.StringField(2, repeated=True)
  workstations = _messages.MessageField('Workstation', 3, repeated=True)


class ListWorkstationClustersResponse(_messages.Message):
  r"""Response message for ListWorkstationClusters.

  Fields:
    nextPageToken: Token to retrieve the next page of results, or empty if
      there are no more results in the list.
    unreachable: Unreachable resources.
    workstationClusters: The requested clusters.
  """

  nextPageToken = _messages.StringField(1)
  unreachable = _messages.StringField(2, repeated=True)
  workstationClusters = _messages.MessageField('WorkstationCluster', 3, repeated=True)


class ListWorkstationConfigsResponse(_messages.Message):
  r"""Response message for ListWorkstationConfigs.

  Fields:
    nextPageToken: Token to retrieve the next page of results, or empty if
      there are no more results in the list.
    unreachable: Unreachable resources.
    workstationConfigs: The requested configs.
  """

  nextPageToken = _messages.StringField(1)
  unreachable = _messages.StringField(2, repeated=True)
  workstationConfigs = _messages.MessageField('WorkstationConfig', 3, repeated=True)


class ListWorkstationsResponse(_messages.Message):
  r"""Response message for ListWorkstations.

  Fields:
    nextPageToken: Token to retrieve the next page of results, or empty if
      there are no more results in the list.
    unreachable: Unreachable resources.
    workstations: The requested workstations.
  """

  nextPageToken = _messages.StringField(1)
  unreachable = _messages.StringField(2, repeated=True)
  workstations = _messages.MessageField('Workstation', 3, repeated=True)


class LogConfig(_messages.Message):
  r"""Specifies what kind of log the caller must write

  Fields:
    cloudAudit: Cloud audit options.
    counter: Counter options.
    dataAccess: Data access options.
  """

  cloudAudit = _messages.MessageField('CloudAuditOptions', 1)
  counter = _messages.MessageField('CounterOptions', 2)
  dataAccess = _messages.MessageField('DataAccessOptions', 3)


class Operation(_messages.Message):
  r"""This resource represents a long-running operation that is the result of
  a network API call.

  Messages:
    MetadataValue: Service-specific metadata associated with the operation. It
      typically contains progress information and common metadata such as
      create time. Some services might not provide such metadata. Any method
      that returns a long-running operation should document the metadata type,
      if any.
    ResponseValue: The normal response of the operation in case of success. If
      the original method returns no data on success, such as `Delete`, the
      response is `google.protobuf.Empty`. If the original method is standard
      `Get`/`Create`/`Update`, the response should be the resource. For other
      methods, the response should have the type `XxxResponse`, where `Xxx` is
      the original method name. For example, if the original method name is
      `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.

  Fields:
    done: If the value is `false`, it means the operation is still in
      progress. If `true`, the operation is completed, and either `error` or
      `response` is available.
    error: The error result of the operation in case of failure or
      cancellation.
    metadata: Service-specific metadata associated with the operation. It
      typically contains progress information and common metadata such as
      create time. Some services might not provide such metadata. Any method
      that returns a long-running operation should document the metadata type,
      if any.
    name: The server-assigned name, which is only unique within the same
      service that originally returns it. If you use the default HTTP mapping,
      the `name` should be a resource name ending with
      `operations/{unique_id}`.
    response: The normal response of the operation in case of success. If the
      original method returns no data on success, such as `Delete`, the
      response is `google.protobuf.Empty`. If the original method is standard
      `Get`/`Create`/`Update`, the response should be the resource. For other
      methods, the response should have the type `XxxResponse`, where `Xxx` is
      the original method name. For example, if the original method name is
      `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MetadataValue(_messages.Message):
    r"""Service-specific metadata associated with the operation. It typically
    contains progress information and common metadata such as create time.
    Some services might not provide such metadata. Any method that returns a
    long-running operation should document the metadata type, if any.

    Messages:
      AdditionalProperty: An additional property for a MetadataValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a MetadataValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  @encoding.MapUnrecognizedFields('additionalProperties')
  class ResponseValue(_messages.Message):
    r"""The normal response of the operation in case of success. If the
    original method returns no data on success, such as `Delete`, the response
    is `google.protobuf.Empty`. If the original method is standard
    `Get`/`Create`/`Update`, the response should be the resource. For other
    methods, the response should have the type `XxxResponse`, where `Xxx` is
    the original method name. For example, if the original method name is
    `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.

    Messages:
      AdditionalProperty: An additional property for a ResponseValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a ResponseValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  done = _messages.BooleanField(1)
  error = _messages.MessageField('Status', 2)
  metadata = _messages.MessageField('MetadataValue', 3)
  name = _messages.StringField(4)
  response = _messages.MessageField('ResponseValue', 5)


class OperationMetadata(_messages.Message):
  r"""Represents the metadata of the long-running operation.

  Fields:
    apiVersion: Output only. API version used to start the operation.
    cancelRequested: Output only. Identifies whether the user has requested
      cancellation of the operation. Operations that have been cancelled
      successfully have Operation.error value with a google.rpc.Status.code of
      1, corresponding to `Code.CANCELLED`.
    createTime: Output only. The time the operation was created.
    endTime: Output only. The time the operation finished running.
    statusDetail: Output only. Human-readable status of the operation, if any.
    target: Output only. Server-defined resource path for the target of the
      operation.
    verb: Output only. Name of the verb executed by the operation.
  """

  apiVersion = _messages.StringField(1)
  cancelRequested = _messages.BooleanField(2)
  createTime = _messages.StringField(3)
  endTime = _messages.StringField(4)
  statusDetail = _messages.StringField(5)
  target = _messages.StringField(6)
  verb = _messages.StringField(7)


class PersistentDirectory(_messages.Message):
  r"""A directory persisted across Workstation sessions.

  Fields:
    gcePd: A PersistentDirectory backed by a Compute Engine persistent disk.
    mountPath: Location of this directory in the running Workstation.
  """

  gcePd = _messages.MessageField('GceRegionalPersistentDisk', 1)
  mountPath = _messages.StringField(2)


class Policy(_messages.Message):
  r"""An Identity and Access Management (IAM) policy, which specifies access
  controls for Google Cloud resources. A `Policy` is a collection of
  `bindings`. A `binding` binds one or more `members`, or principals, to a
  single `role`. Principals can be user accounts, service accounts, Google
  groups, and domains (such as G Suite). A `role` is a named list of
  permissions; each `role` can be an IAM predefined role or a user-created
  custom role. For some types of Google Cloud resources, a `binding` can also
  specify a `condition`, which is a logical expression that allows access to a
  resource only if the expression evaluates to `true`. A condition can add
  constraints based on attributes of the request, the resource, or both. To
  learn which resources support conditions in their IAM policies, see the [IAM
  documentation](https://cloud.google.com/iam/help/conditions/resource-
  policies). **JSON example:** { "bindings": [ { "role":
  "roles/resourcemanager.organizationAdmin", "members": [
  "user:mike@example.com", "group:admins@example.com", "domain:google.com",
  "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role":
  "roles/resourcemanager.organizationViewer", "members": [
  "user:eve@example.com" ], "condition": { "title": "expirable access",
  "description": "Does not grant access after Sep 2020", "expression":
  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
  user:mike@example.com - group:admins@example.com - domain:google.com -
  serviceAccount:my-project-id@appspot.gserviceaccount.com role:
  roles/resourcemanager.organizationAdmin - members: - user:eve@example.com
  role: roles/resourcemanager.organizationViewer condition: title: expirable
  access description: Does not grant access after Sep 2020 expression:
  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
  version: 3 For a description of IAM and its features, see the [IAM
  documentation](https://cloud.google.com/iam/docs/).

  Fields:
    auditConfigs: Specifies cloud audit logging configuration for this policy.
    bindings: Associates a list of `members`, or principals, with a `role`.
      Optionally, may specify a `condition` that determines how and when the
      `bindings` are applied. Each of the `bindings` must contain at least one
      principal. The `bindings` in a `Policy` can refer to up to 1,500
      principals; up to 250 of these principals can be Google groups. Each
      occurrence of a principal counts towards these limits. For example, if
      the `bindings` grant 50 different roles to `user:alice@example.com`, and
      not to any other principal, then you can add another 1,450 principals to
      the `bindings` in the `Policy`.
    etag: `etag` is used for optimistic concurrency control as a way to help
      prevent simultaneous updates of a policy from overwriting each other. It
      is strongly suggested that systems make use of the `etag` in the read-
      modify-write cycle to perform policy updates in order to avoid race
      conditions: An `etag` is returned in the response to `getIamPolicy`, and
      systems are expected to put that etag in the request to `setIamPolicy`
      to ensure that their change will be applied to the same version of the
      policy. **Important:** If you use IAM Conditions, you must include the
      `etag` field whenever you call `setIamPolicy`. If you omit this field,
      then IAM allows you to overwrite a version `3` policy with a version `1`
      policy, and all of the conditions in the version `3` policy are lost.
    rules: If more than one rule is specified, the rules are applied in the
      following manner: - All matching LOG rules are always applied. - If any
      DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be
      applied if one or more matching rule requires logging. - Otherwise, if
      any ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging
      will be applied if one or more matching rule requires logging. -
      Otherwise, if no rule applies, permission is denied.
    version: Specifies the format of the policy. Valid values are `0`, `1`,
      and `3`. Requests that specify an invalid value are rejected. Any
      operation that affects conditional role bindings must specify version
      `3`. This requirement applies to the following operations: * Getting a
      policy that includes a conditional role binding * Adding a conditional
      role binding to a policy * Changing a conditional role binding in a
      policy * Removing any role binding, with or without a condition, from a
      policy that includes conditions **Important:** If you use IAM
      Conditions, you must include the `etag` field whenever you call
      `setIamPolicy`. If you omit this field, then IAM allows you to overwrite
      a version `3` policy with a version `1` policy, and all of the
      conditions in the version `3` policy are lost. If a policy does not
      include any conditions, operations on that policy may specify any valid
      version or leave the field unset. To learn which resources support
      conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
  """

  auditConfigs = _messages.MessageField('AuditConfig', 1, repeated=True)
  bindings = _messages.MessageField('Binding', 2, repeated=True)
  etag = _messages.BytesField(3)
  rules = _messages.MessageField('Rule', 4, repeated=True)
  version = _messages.IntegerField(5, variant=_messages.Variant.INT32)


class PrivateClusterConfig(_messages.Message):
  r"""Configuration options for private clusters.

  Fields:
    clusterHostname: Output only. Hostname for the Workstation Cluster. This
      field will be populated only when private endpoint is enabled. To access
      workstations in the cluster, create a new DNS zone mapping this domain
      name to an internal IP address and a forwarding rule mapping that
      address to the service attachment.
    enablePrivateEndpoint: Whether Workstations endpoint is private.
    serviceAttachmentUri: Output only. Service attachment URI for the
      Workstation Cluster. The service attachemnt is created when private
      endpoint is enabled. To access workstations in the cluster, configure
      access to the managed service using (Private Service
      Connect)[https://cloud.google.com/vpc/docs/configure-private-service-
      connect-services].
  """

  clusterHostname = _messages.StringField(1)
  enablePrivateEndpoint = _messages.BooleanField(2)
  serviceAttachmentUri = _messages.StringField(3)


class Rule(_messages.Message):
  r"""A rule to be applied in a Policy.

  Enums:
    ActionValueValuesEnum: Required

  Fields:
    action: Required
    conditions: Additional restrictions that must be met. All conditions must
      pass for the rule to match.
    description: Human-readable description of the rule.
    in_: If one or more 'in' clauses are specified, the rule matches if the
      PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
    logConfig: The config returned to callers of CheckPolicy for any entries
      that match the LOG action.
    notIn: If one or more 'not_in' clauses are specified, the rule matches if
      the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries. The format
      for in and not_in entries can be found at in the Local IAM documentation
      (see go/local-iam#features).
    permissions: A permission is a string of form '..' (e.g.,
      'storage.buckets.list'). A value of '*' matches all permissions, and a
      verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.
  """

  class ActionValueValuesEnum(_messages.Enum):
    r"""Required

    Values:
      NO_ACTION: Default no action.
      ALLOW: Matching 'Entries' grant access.
      ALLOW_WITH_LOG: Matching 'Entries' grant access and the caller promises
        to log the request per the returned log_configs.
      DENY: Matching 'Entries' deny access.
      DENY_WITH_LOG: Matching 'Entries' deny access and the caller promises to
        log the request per the returned log_configs.
      LOG: Matching 'Entries' tell IAM.Check callers to generate logs.
    """
    NO_ACTION = 0
    ALLOW = 1
    ALLOW_WITH_LOG = 2
    DENY = 3
    DENY_WITH_LOG = 4
    LOG = 5

  action = _messages.EnumField('ActionValueValuesEnum', 1)
  conditions = _messages.MessageField('Condition', 2, repeated=True)
  description = _messages.StringField(3)
  in_ = _messages.StringField(4, repeated=True)
  logConfig = _messages.MessageField('LogConfig', 5, repeated=True)
  notIn = _messages.StringField(6, repeated=True)
  permissions = _messages.StringField(7, repeated=True)


class SetIamPolicyRequest(_messages.Message):
  r"""Request message for `SetIamPolicy` method.

  Fields:
    policy: REQUIRED: The complete policy to be applied to the `resource`. The
      size of the policy is limited to a few 10s of KB. An empty policy is a
      valid policy but certain Google Cloud services (such as Projects) might
      reject them.
    updateMask: OPTIONAL: A FieldMask specifying which fields of the policy to
      modify. Only the fields in the mask will be modified. If no mask is
      provided, the following default mask is used: `paths: "bindings, etag"`
  """

  policy = _messages.MessageField('Policy', 1)
  updateMask = _messages.StringField(2)


class StandardQueryParameters(_messages.Message):
  r"""Query parameters accepted by all methods.

  Enums:
    FXgafvValueValuesEnum: V1 error format.
    AltValueValuesEnum: Data format for response.

  Fields:
    f__xgafv: V1 error format.
    access_token: OAuth access token.
    alt: Data format for response.
    callback: JSONP
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters.
    trace: A tracing token of the form "token:<tokenid>" to include in api
      requests.
    uploadType: Legacy upload protocol for media (e.g. "media", "multipart").
    upload_protocol: Upload protocol for media (e.g. "raw", "multipart").
  """

  class AltValueValuesEnum(_messages.Enum):
    r"""Data format for response.

    Values:
      json: Responses with Content-Type of application/json
      media: Media download with context-dependent Content-Type
      proto: Responses with Content-Type of application/x-protobuf
    """
    json = 0
    media = 1
    proto = 2

  class FXgafvValueValuesEnum(_messages.Enum):
    r"""V1 error format.

    Values:
      _1: v1 error format
      _2: v2 error format
    """
    _1 = 0
    _2 = 1

  f__xgafv = _messages.EnumField('FXgafvValueValuesEnum', 1)
  access_token = _messages.StringField(2)
  alt = _messages.EnumField('AltValueValuesEnum', 3, default='json')
  callback = _messages.StringField(4)
  fields = _messages.StringField(5)
  key = _messages.StringField(6)
  oauth_token = _messages.StringField(7)
  prettyPrint = _messages.BooleanField(8, default=True)
  quotaUser = _messages.StringField(9)
  trace = _messages.StringField(10)
  uploadType = _messages.StringField(11)
  upload_protocol = _messages.StringField(12)


class StartWorkstationRequest(_messages.Message):
  r"""Request message for StartWorkstation.

  Fields:
    etag: If set, the request will be rejected if the latest version of the
      workstation on the server does not have this etag.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
  """

  etag = _messages.StringField(1)
  validateOnly = _messages.BooleanField(2)


class Status(_messages.Message):
  r"""The `Status` type defines a logical error model that is suitable for
  different programming environments, including REST APIs and RPC APIs. It is
  used by [gRPC](https://github.com/grpc). Each `Status` message contains
  three pieces of data: error code, error message, and error details. You can
  find out more about this error model and how to work with it in the [API
  Design Guide](https://cloud.google.com/apis/design/errors).

  Messages:
    DetailsValueListEntry: A DetailsValueListEntry object.

  Fields:
    code: The status code, which should be an enum value of google.rpc.Code.
    details: A list of messages that carry the error details. There is a
      common set of message types for APIs to use.
    message: A developer-facing error message, which should be in English. Any
      user-facing error message should be localized and sent in the
      google.rpc.Status.details field, or localized by the client.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class DetailsValueListEntry(_messages.Message):
    r"""A DetailsValueListEntry object.

    Messages:
      AdditionalProperty: An additional property for a DetailsValueListEntry
        object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a DetailsValueListEntry object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  code = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  details = _messages.MessageField('DetailsValueListEntry', 2, repeated=True)
  message = _messages.StringField(3)


class StopWorkstationRequest(_messages.Message):
  r"""Request message for StopWorkstation.

  Fields:
    etag: If set, the request will be rejected if the latest version of the
      workstation on the server does not have this etag.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
  """

  etag = _messages.StringField(1)
  validateOnly = _messages.BooleanField(2)


class TestIamPermissionsRequest(_messages.Message):
  r"""Request message for `TestIamPermissions` method.

  Fields:
    permissions: The set of permissions to check for the `resource`.
      Permissions with wildcards (such as `*` or `storage.*`) are not allowed.
      For more information see [IAM
      Overview](https://cloud.google.com/iam/docs/overview#permissions).
  """

  permissions = _messages.StringField(1, repeated=True)


class TestIamPermissionsResponse(_messages.Message):
  r"""Response message for `TestIamPermissions` method.

  Fields:
    permissions: A subset of `TestPermissionsRequest.permissions` that the
      caller is allowed.
  """

  permissions = _messages.StringField(1, repeated=True)


class Workstation(_messages.Message):
  r"""A single instance of a developer workstation with its own persistent
  storage.

  Enums:
    StateValueValuesEnum: Output only. Current state of the workstation.

  Messages:
    AnnotationsValue: Client-specified annotations.

  Fields:
    annotations: Client-specified annotations.
    config: The resource name of the WorkstationConfig used in this
      workstation.
    createTime: Output only. Time when this resource was created.
    deleteTime: Output only. Time when this resource was soft-deleted.
    displayName: Human-readable name for this resource.
    etag: Checksum computed by the server. May be sent on update and delete
      requests to ensure that the client has an up-to-date value before
      proceeding.
    host: Output only. Host to which clients can send HTTPS traffic that will
      be received by the workstation. Authorized traffic will be received to
      the workstation as HTTP on port 80. To send traffic to a different port,
      clients may prefix the host with the destination port in the format
      "{port}-{host}".
    name: Full name of this resource.
    reconciling: Output only. Indicates whether this resource is currently
      being updated to match its intended state.
    state: Output only. Current state of the workstation.
    uid: Output only. A system-assigned unique identified for this resource.
    updateTime: Output only. Time when this resource was most recently
      updated.
  """

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. Current state of the workstation.

    Values:
      STATE_UNSPECIFIED: Do not use.
      STATE_STARTING: The workstation is not yet ready to accept requests from
        users but will be soon.
      STATE_RUNNING: The workstation is ready to accept requests from users.
      STATE_STOPPING: The workstation is being stopped.
      STATE_STOPPED: The workstation is stopped and will not be able to
        receive requests until it is started.
    """
    STATE_UNSPECIFIED = 0
    STATE_STARTING = 1
    STATE_RUNNING = 2
    STATE_STOPPING = 3
    STATE_STOPPED = 4

  @encoding.MapUnrecognizedFields('additionalProperties')
  class AnnotationsValue(_messages.Message):
    r"""Client-specified annotations.

    Messages:
      AdditionalProperty: An additional property for a AnnotationsValue
        object.

    Fields:
      additionalProperties: Additional properties of type AnnotationsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a AnnotationsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  annotations = _messages.MessageField('AnnotationsValue', 1)
  config = _messages.StringField(2)
  createTime = _messages.StringField(3)
  deleteTime = _messages.StringField(4)
  displayName = _messages.StringField(5)
  etag = _messages.StringField(6)
  host = _messages.StringField(7)
  name = _messages.StringField(8)
  reconciling = _messages.BooleanField(9)
  state = _messages.EnumField('StateValueValuesEnum', 10)
  uid = _messages.StringField(11)
  updateTime = _messages.StringField(12)


class WorkstationCluster(_messages.Message):
  r"""A grouping of Workstations and WorkstationConfigs in a region.

  Messages:
    AnnotationsValue: Client-specified annotations.

  Fields:
    annotations: Client-specified annotations.
    conditions: Output only. Status conditions describing the current resource
      state.
    createTime: Output only. Time when this resource was created.
    degraded: Output only. Whether this resource is in degraded mode, in which
      case it may require user action to restore full functionality. Details
      can be found in the `conditions` field.
    deleteTime: Output only. Time when this resource was soft-deleted.
    displayName: Human-readable name for this resource.
    etag: Checksum computed by the server. May be sent on update and delete
      requests to ensure that the client has an up-to-date value before
      proceeding.
    name: Full name of this resource.
    network: Name of the Compute Engine network in which instances associated
      with this cluster will be created. Must be in the same project as this
      cluster.
    privateClusterConfig: Configuration for private cluster.
    reconciling: Output only. Indicates whether this resource is currently
      being updated to match its intended state.
    subnetwork: Name of the Compute Engine subnetwork in which instances
      associated with this cluster will be created. Must be part of the
      subnetwork specified for this cluster.
    uid: Output only. A system-assigned unique identified for this resource.
    updateTime: Output only. Time when this resource was most recently
      updated.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class AnnotationsValue(_messages.Message):
    r"""Client-specified annotations.

    Messages:
      AdditionalProperty: An additional property for a AnnotationsValue
        object.

    Fields:
      additionalProperties: Additional properties of type AnnotationsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a AnnotationsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  annotations = _messages.MessageField('AnnotationsValue', 1)
  conditions = _messages.MessageField('Status', 2, repeated=True)
  createTime = _messages.StringField(3)
  degraded = _messages.BooleanField(4)
  deleteTime = _messages.StringField(5)
  displayName = _messages.StringField(6)
  etag = _messages.StringField(7)
  name = _messages.StringField(8)
  network = _messages.StringField(9)
  privateClusterConfig = _messages.MessageField('PrivateClusterConfig', 10)
  reconciling = _messages.BooleanField(11)
  subnetwork = _messages.StringField(12)
  uid = _messages.StringField(13)
  updateTime = _messages.StringField(14)


class WorkstationConfig(_messages.Message):
  r"""A set of configuration options describing how a workstation will be run.
  WorkstationConfigs are intended to be shared across multiple workstations.

  Messages:
    AnnotationsValue: Client-specified annotations.

  Fields:
    annotations: Client-specified annotations.
    conditions: Output only. Status conditions describing the current resource
      state.
    container: Container that will be run for each Workstation using this
      config when that Workstation is started.
    createTime: Output only. Time when this resource was created.
    degraded: Output only. Whether this resource is in degraded mode, in which
      case it may require user action to restore full functionality. Details
      can be found in the `conditions` field.
    deleteTime: Output only. Time when this resource was soft-deleted.
    displayName: Human-readable name for this resource.
    encryptionKey: Encrypts resources of this workstation config using a
      customer specified encryption key. Boot disk of the Compute Engine
      instance and the GceRegionalPersistentDisk, if specified will be
      encrypted using this encryption key. If encryption_key is not set, the
      disks will be encrypted using automatically generated key. Customer
      specified encryption keys do not protect access to metadata of the
      disks. If the customer specified encryption key is rotated, Workstation
      will attempt to recreate the GceRegionalPersistentDisk with new version
      of the key, when the Workstation instance is stopped. Older versions of
      the key are expected to be kept around until the
      GceRegionalPersistentDisk is recreated, otherwise data on the
      GceRegionalPersistentDisk will be lost.
    etag: Checksum computed by the server. May be sent on update and delete
      requests to ensure that the client has an up-to-date value before
      proceeding.
    hostConfig: Runtime host for the Workstation.
    idleTimeout: How long to wait before automatically stopping an instance
      that hasn't received any user traffic. A value of 0 indicates that this
      instance should never time out due to idleness.
    name: Full name of this resource.
    persistentDirectories: Directories to persist across Workstation sessions.
    reconciling: Output only. Indicates whether this resource is currently
      being updated to match its intended state.
    runningTimeout: How long to wait before automatically stopping a
      workstation after it started. A value of 0 indicates that workstations
      using this config should never time out. Must be greater than 0 and less
      than 24 hours if encryption_key is set.
    uid: Output only. A system-assigned unique identified for this resource.
    updateTime: Output only. Time when this resource was most recently
      updated.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class AnnotationsValue(_messages.Message):
    r"""Client-specified annotations.

    Messages:
      AdditionalProperty: An additional property for a AnnotationsValue
        object.

    Fields:
      additionalProperties: Additional properties of type AnnotationsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a AnnotationsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  annotations = _messages.MessageField('AnnotationsValue', 1)
  conditions = _messages.MessageField('Status', 2, repeated=True)
  container = _messages.MessageField('Container', 3)
  createTime = _messages.StringField(4)
  degraded = _messages.BooleanField(5)
  deleteTime = _messages.StringField(6)
  displayName = _messages.StringField(7)
  encryptionKey = _messages.MessageField('CustomerEncryptionKey', 8)
  etag = _messages.StringField(9)
  hostConfig = _messages.MessageField('HostConfig', 10)
  idleTimeout = _messages.StringField(11)
  name = _messages.StringField(12)
  persistentDirectories = _messages.MessageField('PersistentDirectory', 13, repeated=True)
  reconciling = _messages.BooleanField(14)
  runningTimeout = _messages.StringField(15)
  uid = _messages.StringField(16)
  updateTime = _messages.StringField(17)


class WorkstationsProjectsLocationsOperationsCancelRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsOperationsCancelRequest object.

  Fields:
    cancelOperationRequest: A CancelOperationRequest resource to be passed as
      the request body.
    name: The name of the operation resource to be cancelled.
  """

  cancelOperationRequest = _messages.MessageField('CancelOperationRequest', 1)
  name = _messages.StringField(2, required=True)


class WorkstationsProjectsLocationsOperationsDeleteRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsOperationsDeleteRequest object.

  Fields:
    name: The name of the operation resource to be deleted.
  """

  name = _messages.StringField(1, required=True)


class WorkstationsProjectsLocationsOperationsGetRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsOperationsGetRequest object.

  Fields:
    name: The name of the operation resource.
  """

  name = _messages.StringField(1, required=True)


class WorkstationsProjectsLocationsOperationsListRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsOperationsListRequest object.

  Fields:
    filter: The standard list filter.
    name: The name of the operation's parent resource.
    pageSize: The standard list page size.
    pageToken: The standard list page token.
  """

  filter = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)


class WorkstationsProjectsLocationsWorkstationClustersCreateRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersCreateRequest object.

  Fields:
    parent: Required. Parent resource name.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
    workstationCluster: A WorkstationCluster resource to be passed as the
      request body.
    workstationClusterId: Required. ID to use for the cluster.
  """

  parent = _messages.StringField(1, required=True)
  validateOnly = _messages.BooleanField(2)
  workstationCluster = _messages.MessageField('WorkstationCluster', 3)
  workstationClusterId = _messages.StringField(4)


class WorkstationsProjectsLocationsWorkstationClustersDeleteRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersDeleteRequest object.

  Fields:
    etag: If set, the request will be rejected if the latest version of the
      cluster on the server does not have this etag.
    force: If set, any WorkstationConfigs and Workstations in the cluster will
      also be deleted. Otherwise, the request will work only if the cluster
      has no configs or workstations.
    name: Required. Name of the cluster to delete.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
  """

  etag = _messages.StringField(1)
  force = _messages.BooleanField(2)
  name = _messages.StringField(3, required=True)
  validateOnly = _messages.BooleanField(4)


class WorkstationsProjectsLocationsWorkstationClustersGetRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersGetRequest object.

  Fields:
    name: Required. Name of the requested resource.
  """

  name = _messages.StringField(1, required=True)


class WorkstationsProjectsLocationsWorkstationClustersListRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersListRequest object.

  Fields:
    pageSize: Maximum number of items to return.
    pageToken: next_page_token value returned from a previous List request, if
      any.
    parent: Required. Parent resource name.
  """

  pageSize = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)


class WorkstationsProjectsLocationsWorkstationClustersPatchRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersPatchRequest object.

  Fields:
    allowMissing: If set, and the cluster is not found, a new cluster will be
      created. In this situation, update_mask is ignored.
    name: Full name of this resource.
    updateMask: Required. Mask specifying which fields in the cluster should
      be updated.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
    workstationCluster: A WorkstationCluster resource to be passed as the
      request body.
  """

  allowMissing = _messages.BooleanField(1)
  name = _messages.StringField(2, required=True)
  updateMask = _messages.StringField(3)
  validateOnly = _messages.BooleanField(4)
  workstationCluster = _messages.MessageField('WorkstationCluster', 5)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsCreateRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsCrea
  teRequest object.

  Fields:
    parent: Required. Parent resource name.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
    workstationConfig: A WorkstationConfig resource to be passed as the
      request body.
    workstationConfigId: Required. ID to use for the config.
  """

  parent = _messages.StringField(1, required=True)
  validateOnly = _messages.BooleanField(2)
  workstationConfig = _messages.MessageField('WorkstationConfig', 3)
  workstationConfigId = _messages.StringField(4)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsDeleteRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsDele
  teRequest object.

  Fields:
    etag: If set, the request will be rejected if the latest version of the
      config on the server does not have this etag.
    name: Required. Name of the config to delete.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
  """

  etag = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  validateOnly = _messages.BooleanField(3)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsGetIamPolicyRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsGetI
  amPolicyRequest object.

  Fields:
    options_requestedPolicyVersion: Optional. The maximum policy version that
      will be used to format the policy. Valid values are 0, 1, and 3.
      Requests specifying an invalid value will be rejected. Requests for
      policies with any conditional role bindings must specify version 3.
      Policies with no conditional role bindings may specify any valid value
      or leave the field unset. The policy in the response might use the
      policy version that you specified, or it might use a lower policy
      version. For example, if you specify version 3, but the policy has no
      conditional role bindings, the response uses version 1. To learn which
      resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsGetRequest(_messages.Message):
  r"""A
  WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsGetRequest
  object.

  Fields:
    name: Required. Name of the requested resource.
  """

  name = _messages.StringField(1, required=True)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsListRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsList
  Request object.

  Fields:
    pageSize: Maximum number of items to return.
    pageToken: next_page_token value returned from a previous List request, if
      any.
    parent: Required. Parent resource name.
  """

  pageSize = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsListUsableRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsList
  UsableRequest object.

  Fields:
    pageSize: Maximum number of items to return.
    pageToken: next_page_token value returned from a previous List request, if
      any.
    parent: Required. Parent resource name.
  """

  pageSize = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsPatchRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsPatc
  hRequest object.

  Fields:
    allowMissing: If set, and the config is not found, a new config will be
      created. In this situation, update_mask is ignored.
    name: Full name of this resource.
    updateMask: Required. Mask specifying which fields in the config should be
      updated.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
    workstationConfig: A WorkstationConfig resource to be passed as the
      request body.
  """

  allowMissing = _messages.BooleanField(1)
  name = _messages.StringField(2, required=True)
  updateMask = _messages.StringField(3)
  validateOnly = _messages.BooleanField(4)
  workstationConfig = _messages.MessageField('WorkstationConfig', 5)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsSetIamPolicyRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsSetI
  amPolicyRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsTestIamPermissionsRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationConfigsTest
  IamPermissionsRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsCreateRequest(_messages.Message):
  r"""A
  WorkstationsProjectsLocationsWorkstationClustersWorkstationsCreateRequest
  object.

  Fields:
    parent: Required. Parent resource name.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
    workstation: A Workstation resource to be passed as the request body.
    workstationId: Required. ID to use for the workstation.
  """

  parent = _messages.StringField(1, required=True)
  validateOnly = _messages.BooleanField(2)
  workstation = _messages.MessageField('Workstation', 3)
  workstationId = _messages.StringField(4)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsDeleteRequest(_messages.Message):
  r"""A
  WorkstationsProjectsLocationsWorkstationClustersWorkstationsDeleteRequest
  object.

  Fields:
    etag: If set, the request will be rejected if the latest version of the
      workstation on the server does not have this etag.
    name: Required. Name of the workstation to delete.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
  """

  etag = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  validateOnly = _messages.BooleanField(3)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsGenerateAccessTokenRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationsGenerateAc
  cessTokenRequest object.

  Fields:
    generateAccessTokenRequest: A GenerateAccessTokenRequest resource to be
      passed as the request body.
    workstation: Required. Name of the workstation for which the access token
      should be generated.
  """

  generateAccessTokenRequest = _messages.MessageField('GenerateAccessTokenRequest', 1)
  workstation = _messages.StringField(2, required=True)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsGetIamPolicyRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationsGetIamPoli
  cyRequest object.

  Fields:
    options_requestedPolicyVersion: Optional. The maximum policy version that
      will be used to format the policy. Valid values are 0, 1, and 3.
      Requests specifying an invalid value will be rejected. Requests for
      policies with any conditional role bindings must specify version 3.
      Policies with no conditional role bindings may specify any valid value
      or leave the field unset. The policy in the response might use the
      policy version that you specified, or it might use a lower policy
      version. For example, if you specify version 3, but the policy has no
      conditional role bindings, the response uses version 1. To learn which
      resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsGetRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationsGetRequest
  object.

  Fields:
    name: Required. Name of the requested resource.
  """

  name = _messages.StringField(1, required=True)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsListRequest(_messages.Message):
  r"""A
  WorkstationsProjectsLocationsWorkstationClustersWorkstationsListRequest
  object.

  Fields:
    pageSize: Maximum number of items to return.
    pageToken: next_page_token value returned from a previous List request, if
      any.
    parent: Required. Parent resource name.
  """

  pageSize = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsListUsableRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationsListUsable
  Request object.

  Fields:
    pageSize: Maximum number of items to return.
    pageToken: next_page_token value returned from a previous List request, if
      any.
    parent: Required. Parent resource name.
  """

  pageSize = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsPatchRequest(_messages.Message):
  r"""A
  WorkstationsProjectsLocationsWorkstationClustersWorkstationsPatchRequest
  object.

  Fields:
    allowMissing: If set, and the config is not found, a new config will be
      created. In this situation, update_mask is ignored.
    name: Full name of this resource.
    updateMask: Required. Mask specifying which fields in the config should be
      updated.
    validateOnly: If set, validate the request and preview the review, but do
      not actually apply it.
    workstation: A Workstation resource to be passed as the request body.
  """

  allowMissing = _messages.BooleanField(1)
  name = _messages.StringField(2, required=True)
  updateMask = _messages.StringField(3)
  validateOnly = _messages.BooleanField(4)
  workstation = _messages.MessageField('Workstation', 5)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsSetIamPolicyRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationsSetIamPoli
  cyRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsStartRequest(_messages.Message):
  r"""A
  WorkstationsProjectsLocationsWorkstationClustersWorkstationsStartRequest
  object.

  Fields:
    name: Required. Name of the workstation to start.
    startWorkstationRequest: A StartWorkstationRequest resource to be passed
      as the request body.
  """

  name = _messages.StringField(1, required=True)
  startWorkstationRequest = _messages.MessageField('StartWorkstationRequest', 2)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsStopRequest(_messages.Message):
  r"""A
  WorkstationsProjectsLocationsWorkstationClustersWorkstationsStopRequest
  object.

  Fields:
    name: Required. Name of the workstation to stop.
    stopWorkstationRequest: A StopWorkstationRequest resource to be passed as
      the request body.
  """

  name = _messages.StringField(1, required=True)
  stopWorkstationRequest = _messages.MessageField('StopWorkstationRequest', 2)


class WorkstationsProjectsLocationsWorkstationClustersWorkstationsTestIamPermissionsRequest(_messages.Message):
  r"""A WorkstationsProjectsLocationsWorkstationClustersWorkstationsTestIamPer
  missionsRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


encoding.AddCustomJsonFieldMapping(
    Rule, 'in_', 'in')
encoding.AddCustomJsonFieldMapping(
    StandardQueryParameters, 'f__xgafv', '$.xgafv')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_1', '1')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_2', '2')
