{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "telecomdatafabric:v1alpha",
  "name": "telecomdatafabric",
  "canonicalName": "Telecom Data Fabric",
  "version": "v1alpha",
  "revision": "0",
  "title": "Telecom Data Fabric API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/telecom-data-fabric",
  "protocol": "rest",
  "rootUrl": "https://telecomdatafabric.googleapis.com/",
  "mtlsRootUrl": "https://telecomdatafabric.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://telecomdatafabric.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListDataAssetManagersResponse": {
      "id": "ListDataAssetManagersResponse",
      "description": "Message for response to listing DataAssetManagers",
      "type": "object",
      "properties": {
        "dataAssetManagers": {
          "description": "The list of DataAssetManager",
          "type": "array",
          "items": {
            "$ref": "DataAssetManager"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataAssetManager": {
      "id": "DataAssetManager",
      "description": "Message describing DataAssetManager object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. name of resource",
          "readOnly": true,
          "type": "string"
        },
        "lake": {
          "description": "Required. The lake details required to create the lake in Dataplex.",
          "$ref": "Lake"
        },
        "state": {
          "description": "Output only. Current state of the DataAssetManager.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Lake": {
      "id": "Lake",
      "description": "Lake represents a Lake in Dataplex.",
      "type": "object",
      "properties": {
        "project": {
          "description": "Required. The project where the lake would be created.",
          "type": "string"
        },
        "location": {
          "description": "Required. The physical region where the lake would be located e.g. us-cental1",
          "type": "string"
        },
        "lakeId": {
          "description": "Required. The unique lake_id. The lake will be created using lake_id.",
          "type": "string"
        },
        "lake": {
          "description": "Output only. The relative resource name of the Lake created in Dataplex in `projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}` format.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. Use friendly display name.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the Lake.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. Globally unique ID returned by Dataplex.",
          "readOnly": true,
          "type": "string"
        },
        "zones": {
          "description": "Required. The Zones to create inside the lake in Dataplex.",
          "type": "array",
          "items": {
            "$ref": "Zone"
          }
        },
        "state": {
          "description": "Output only. Current state of the lake.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        },
        "metastore": {
          "description": "Optional. Settings to manage Dataplex lake and Dataproc Metastore service instance association.",
          "$ref": "Metastore"
        }
      }
    },
    "Zone": {
      "id": "Zone",
      "description": "Zone represents a Zone under a Lake, this will be used to create a Zone in Dataplex.",
      "type": "object",
      "properties": {
        "zoneId": {
          "description": "Required. The zone_id to use for creating the zone under the lake.",
          "type": "string"
        },
        "zone": {
          "description": "Output only. The relative resource name of the zone created inside lake in Dataplex in the form of `projects\/{project_number}\/locations\/{location_id}\/lakes\/{lake_id}\/zones\/{zone_id}`.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the zone.",
          "type": "string"
        },
        "type": {
          "description": "Required. The type of the zone.",
          "type": "string",
          "enumDescriptions": [
            "Zone type not specified.",
            "A zone that contains data that needs further processing before it is considered generally ready for consumption and analytics workloads.",
            "A zone that contains data that is considered to be ready for broader consumption and analytics workloads. Curated structured data stored in Cloud Storage must conform to certain file formats (parquet, avro and orc) and organized in a hive-compatible directory layout."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "RAW",
            "CURATED"
          ]
        },
        "uid": {
          "description": "Output only. Globally unique ID returned by the Dataplex.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. Current state of the zone.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        },
        "resourceSpec": {
          "description": "Required. Specification of the resources that are referenced by the assets within this zone.",
          "$ref": "ResourceSpec"
        },
        "discoverySpec": {
          "description": "Optional. Specification of the discovery feature applied to data in this zone.",
          "$ref": "DiscoverySpec"
        }
      }
    },
    "ResourceSpec": {
      "id": "ResourceSpec",
      "description": "Settings for resources attached as assets within the zone.",
      "type": "object",
      "properties": {
        "locationType": {
          "description": "Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified location type.",
            "Resources that are associated with a single region.",
            "Resources that are associated with a multi-region location."
          ],
          "enum": [
            "LOCATION_TYPE_UNSPECIFIED",
            "SINGLE_REGION",
            "MULTI_REGION"
          ]
        }
      }
    },
    "DiscoverySpec": {
      "id": "DiscoverySpec",
      "description": "Settings to manage the metadata discovery and publishing in a zone.",
      "type": "object",
      "properties": {
        "schedule": {
          "description": "Optional. Cron schedule (https:\/\/en.wikipedia.org\/wiki\/Cron) for running discovery periodically.",
          "type": "string"
        },
        "enabled": {
          "description": "Required. Whether discovery is enabled.",
          "type": "boolean"
        },
        "includePatterns": {
          "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludePatterns": {
          "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "csvOptions": {
          "description": "Optional. Configuration for CSV data.",
          "$ref": "CsvOptions"
        },
        "jsonOptions": {
          "description": "Optional. Configuration for Json data.",
          "$ref": "JsonOptions"
        }
      }
    },
    "CsvOptions": {
      "id": "CsvOptions",
      "description": "Describe CSV and similar semi-structured data formats.",
      "type": "object",
      "properties": {
        "headerRows": {
          "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.",
          "type": "integer",
          "format": "int32"
        },
        "delimiter": {
          "description": "Optional. The delimiter being used to separate values. This defaults to ','.",
          "type": "string"
        },
        "encoding": {
          "description": "Optional. The character encoding of the data. The default is UTF-8.",
          "type": "string"
        },
        "disableTypeInference": {
          "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.",
          "type": "boolean"
        }
      }
    },
    "JsonOptions": {
      "id": "JsonOptions",
      "description": "Describe JSON data format.",
      "type": "object",
      "properties": {
        "encoding": {
          "description": "Optional. The character encoding of the data. The default is UTF-8.",
          "type": "string"
        },
        "disableTypeInference": {
          "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).",
          "type": "boolean"
        }
      }
    },
    "Metastore": {
      "id": "Metastore",
      "description": "Settings to manage association of Dataproc Metastore with a lake in Dataplex].",
      "type": "object",
      "properties": {
        "service": {
          "description": "Optional. A relative reference to the Dataproc Metastore (https:\/\/cloud.google.com\/dataproc-metastore\/docs) service associated with the lake: `projects\/{project_id}\/locations\/{location_id}\/services\/{service_id}`",
          "type": "string"
        }
      }
    },
    "ListDataAssetsResponse": {
      "id": "ListDataAssetsResponse",
      "description": "Message for response to listing DataAssets",
      "type": "object",
      "properties": {
        "dataAssets": {
          "description": "The list of DataAsset",
          "type": "array",
          "items": {
            "$ref": "DataAsset"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataAsset": {
      "id": "DataAsset",
      "description": "Message describing DataAsset object",
      "type": "object",
      "properties": {
        "bigqueryAsset": {
          "description": "BigQuery Dataset.",
          "$ref": "BigQueryAsset"
        },
        "gcsAsset": {
          "description": "Cloud Storage Bucket.",
          "$ref": "GCSAsset"
        },
        "pubsubAsset": {
          "description": "Pub\/sub Topic.",
          "$ref": "PubSubAsset"
        },
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of DataAsset",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "BigQueryAsset": {
      "id": "BigQueryAsset",
      "description": "Message describing BigQuery data asset.",
      "type": "object",
      "properties": {
        "datasetId": {
          "description": "Dataset ID of the BigQuery Dataset.",
          "type": "string"
        }
      }
    },
    "GCSAsset": {
      "id": "GCSAsset",
      "description": "Message describing Cloud Storage data asset.",
      "type": "object",
      "properties": {
        "bucket": {
          "description": "Name of the Cloud Storage Bucket.",
          "type": "string"
        }
      }
    },
    "PubSubAsset": {
      "id": "PubSubAsset",
      "description": "Message describing Pub\/Sub data asset.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Pub\/Sub topic of the data asset.",
          "type": "string"
        }
      }
    },
    "ListPipelineSchedulersResponse": {
      "id": "ListPipelineSchedulersResponse",
      "description": "Message for response to listing PipelineSchedulers",
      "type": "object",
      "properties": {
        "pipelineSchedulers": {
          "description": "The list of PipelineScheduler",
          "type": "array",
          "items": {
            "$ref": "PipelineScheduler"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PipelineScheduler": {
      "id": "PipelineScheduler",
      "description": "Message describing PipelineScheduler object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of PipelineScheduler",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "ListBatchIngestionPipelinesResponse": {
      "id": "ListBatchIngestionPipelinesResponse",
      "description": "Message for response to listing BatchIngestionPipelines",
      "type": "object",
      "properties": {
        "batchIngestionPipelines": {
          "description": "The list of BatchIngestionPipeline",
          "type": "array",
          "items": {
            "$ref": "BatchIngestionPipeline"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BatchIngestionPipeline": {
      "id": "BatchIngestionPipeline",
      "description": "Message describing BatchIngestionPipeline object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of BatchIngestionPipeline",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "ListStreamIngestionPipelinesResponse": {
      "id": "ListStreamIngestionPipelinesResponse",
      "description": "Message for response to listing StreamIngestionPipelines",
      "type": "object",
      "properties": {
        "streamIngestionPipelines": {
          "description": "The list of StreamIngestionPipeline",
          "type": "array",
          "items": {
            "$ref": "StreamIngestionPipeline"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StreamIngestionPipeline": {
      "id": "StreamIngestionPipeline",
      "description": "Message describing StreamIngestionPipeline object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of StreamIngestionPipeline",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "ListMetricsCorrelationsResponse": {
      "id": "ListMetricsCorrelationsResponse",
      "description": "Message for response to listing MetricsCorrelations",
      "type": "object",
      "properties": {
        "metricsCorrelations": {
          "description": "The list of MetricsCorrelation",
          "type": "array",
          "items": {
            "$ref": "MetricsCorrelation"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetricsCorrelation": {
      "id": "MetricsCorrelation",
      "description": "Message describing MetricsCorrelation object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of ObservabilityPipeline",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "ListDataApiServersResponse": {
      "id": "ListDataApiServersResponse",
      "description": "Message for response to listing DataApiServers",
      "type": "object",
      "properties": {
        "dataApiServers": {
          "description": "The list of DataApiServer",
          "type": "array",
          "items": {
            "$ref": "DataApiServer"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataApiServer": {
      "id": "DataApiServer",
      "description": "Message describing DataApiServer object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of DataApiServer",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "ListDataAdaptersResponse": {
      "id": "ListDataAdaptersResponse",
      "description": "Message for response to listing DataAdapters",
      "type": "object",
      "properties": {
        "dataAdapters": {
          "description": "The list of DataAdapter",
          "type": "array",
          "items": {
            "$ref": "DataAdapter"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataAdapter": {
      "id": "DataAdapter",
      "description": "Message describing DataAdapter object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of DataAdapter",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "ListMetricsIngestionPipelinesResponse": {
      "id": "ListMetricsIngestionPipelinesResponse",
      "description": "Message for response to listing MetricsIngestionPipelines",
      "type": "object",
      "properties": {
        "metricsIngestionPipelines": {
          "description": "The list of MetricsIngestionPipeline",
          "type": "array",
          "items": {
            "$ref": "MetricsIngestionPipeline"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetricsIngestionPipeline": {
      "id": "MetricsIngestionPipeline",
      "description": "Message describing MetricsIngestionPipeline object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of MetricsIngestionPipeline",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "ListIaasMetricsCollectorsResponse": {
      "id": "ListIaasMetricsCollectorsResponse",
      "description": "Message for response to listing IaasMetricsCollectors",
      "type": "object",
      "properties": {
        "iaasMetricsCollectors": {
          "description": "The list of IaasMetricsCollector",
          "type": "array",
          "items": {
            "$ref": "IaasMetricsCollector"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IaasMetricsCollector": {
      "id": "IaasMetricsCollector",
      "description": "Message describing IaasMetricsCollector object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of IaasMetricsCollector",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "ListMetricsProcessorsResponse": {
      "id": "ListMetricsProcessorsResponse",
      "description": "Message for response to listing MetricsProcessors",
      "type": "object",
      "properties": {
        "metricsProcessors": {
          "description": "The list of MetricsProcessor",
          "type": "array",
          "items": {
            "$ref": "MetricsProcessor"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetricsProcessor": {
      "id": "MetricsProcessor",
      "description": "Message describing MetricsProcessor object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "Output only. State of MetricsProcessor",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State is not specified.",
            "Resource is active, i.e., ready to use.",
            "Resource is under creation.",
            "Resource is under deletion.",
            "Resource is active but has unresolved actions.",
            "Resource encountered an error.",
            "Resource is in inderministic state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "ACTION_REQUIRED",
            "FAILED",
            "MALFORMED"
          ]
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "telecomdatafabric.projects.locations.list",
              "path": "v1alpha/{+name}/locations",
              "flatPath": "v1alpha/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "telecomdatafabric.projects.locations.get",
              "path": "v1alpha/{+name}",
              "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.operations.list",
                  "path": "v1alpha/{+name}/operations",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.operations.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.operations.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "telecomdatafabric.projects.locations.operations.cancel",
                  "path": "v1alpha/{+name}:cancel",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "dataAssetManagers": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.dataAssetManagers.list",
                  "path": "v1alpha/{+parent}/dataAssetManagers",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssetManagers",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListDataAssetManagersRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDataAssetManagersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists DataAssetManagers in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.dataAssetManagers.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssetManagers/{dataAssetManagersId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataAssetManagers\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "DataAssetManager"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single DataAssetManager."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.dataAssetManagers.create",
                  "path": "v1alpha/{+parent}/dataAssetManagers",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssetManagers",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "dataAssetManagerId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and data_asset_manager_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "DataAssetManager"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new DataAssetManager in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.dataAssetManagers.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssetManagers/{dataAssetManagersId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataAssetManagers\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the DataAssetManager resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DataAssetManager"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single DataAssetManager."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.dataAssetManagers.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssetManagers/{dataAssetManagersId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataAssetManagers\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single DataAssetManager."
                }
              }
            },
            "dataAssets": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.dataAssets.list",
                  "path": "v1alpha/{+parent}/dataAssets",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssets",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListDataAssetsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDataAssetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists DataAssets in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.dataAssets.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssets/{dataAssetsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataAssets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "DataAsset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single DataAsset."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.dataAssets.create",
                  "path": "v1alpha/{+parent}/dataAssets",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssets",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "dataAssetId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and data_asset_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "DataAsset"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new DataAsset in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.dataAssets.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssets/{dataAssetsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataAssets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the DataAsset resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DataAsset"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single DataAsset."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.dataAssets.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAssets/{dataAssetsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataAssets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single DataAsset."
                }
              }
            },
            "pipelineSchedulers": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.pipelineSchedulers.list",
                  "path": "v1alpha/{+parent}/pipelineSchedulers",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/pipelineSchedulers",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListPipelineSchedulersRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPipelineSchedulersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists PipelineSchedulers in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.pipelineSchedulers.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/pipelineSchedulers/{pipelineSchedulersId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/pipelineSchedulers\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "PipelineScheduler"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single PipelineScheduler."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.pipelineSchedulers.create",
                  "path": "v1alpha/{+parent}/pipelineSchedulers",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/pipelineSchedulers",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pipelineSchedulerId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and pipeline_scheduler_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "PipelineScheduler"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new PipelineScheduler in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.pipelineSchedulers.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/pipelineSchedulers/{pipelineSchedulersId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/pipelineSchedulers\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the PipelineScheduler resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "PipelineScheduler"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single PipelineScheduler."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.pipelineSchedulers.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/pipelineSchedulers/{pipelineSchedulersId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/pipelineSchedulers\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single PipelineScheduler."
                }
              }
            },
            "batchIngestionPipelines": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.batchIngestionPipelines.list",
                  "path": "v1alpha/{+parent}/batchIngestionPipelines",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/batchIngestionPipelines",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListBatchIngestionPipelinesRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListBatchIngestionPipelinesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists BatchIngestionPipelines in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.batchIngestionPipelines.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/batchIngestionPipelines/{batchIngestionPipelinesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/batchIngestionPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "BatchIngestionPipeline"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single BatchIngestionPipeline."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.batchIngestionPipelines.create",
                  "path": "v1alpha/{+parent}/batchIngestionPipelines",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/batchIngestionPipelines",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "batchIngestionPipelineId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and batch_ingestion_pipeline_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "BatchIngestionPipeline"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new BatchIngestionPipeline in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.batchIngestionPipelines.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/batchIngestionPipelines/{batchIngestionPipelinesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/batchIngestionPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the BatchIngestionPipeline resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "BatchIngestionPipeline"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single BatchIngestionPipeline."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.batchIngestionPipelines.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/batchIngestionPipelines/{batchIngestionPipelinesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/batchIngestionPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single BatchIngestionPipeline."
                }
              }
            },
            "streamIngestionPipelines": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.streamIngestionPipelines.list",
                  "path": "v1alpha/{+parent}/streamIngestionPipelines",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/streamIngestionPipelines",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListStreamIngestionPipelinesRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListStreamIngestionPipelinesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists StreamIngestionPipelines in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.streamIngestionPipelines.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/streamIngestionPipelines/{streamIngestionPipelinesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamIngestionPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "StreamIngestionPipeline"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single StreamIngestionPipeline."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.streamIngestionPipelines.create",
                  "path": "v1alpha/{+parent}/streamIngestionPipelines",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/streamIngestionPipelines",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "streamIngestionPipelineId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and stream_ingestion_pipeline_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "StreamIngestionPipeline"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new StreamIngestionPipeline in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.streamIngestionPipelines.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/streamIngestionPipelines/{streamIngestionPipelinesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamIngestionPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the StreamIngestionPipeline resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StreamIngestionPipeline"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single StreamIngestionPipeline."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.streamIngestionPipelines.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/streamIngestionPipelines/{streamIngestionPipelinesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/streamIngestionPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single StreamIngestionPipeline."
                }
              }
            },
            "metricsCorrelations": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.metricsCorrelations.list",
                  "path": "v1alpha/{+parent}/metricsCorrelations",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsCorrelations",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListMetricsCorrelationsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMetricsCorrelationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists MetricsCorrelations in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.metricsCorrelations.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsCorrelations/{metricsCorrelationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/metricsCorrelations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MetricsCorrelation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single MetricsCorrelation."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.metricsCorrelations.create",
                  "path": "v1alpha/{+parent}/metricsCorrelations",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsCorrelations",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "metricsCorrelationId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and metrics_correlation_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "MetricsCorrelation"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new MetricsCorrelation in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.metricsCorrelations.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsCorrelations/{metricsCorrelationsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/metricsCorrelations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the MetricsCorrelation resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "MetricsCorrelation"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single MetricsCorrelation."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.metricsCorrelations.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsCorrelations/{metricsCorrelationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/metricsCorrelations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single MetricsCorrelation."
                }
              }
            },
            "dataApiServers": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.dataApiServers.list",
                  "path": "v1alpha/{+parent}/dataApiServers",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataApiServers",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListDataApiServersRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDataApiServersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists DataApiServers in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.dataApiServers.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataApiServers/{dataApiServersId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataApiServers\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "DataApiServer"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single DataApiServer."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.dataApiServers.create",
                  "path": "v1alpha/{+parent}/dataApiServers",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataApiServers",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "dataApiServerId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and data_api_server_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "DataApiServer"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new DataApiServer in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.dataApiServers.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataApiServers/{dataApiServersId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataApiServers\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the DataApiServer resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DataApiServer"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single DataApiServer."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.dataApiServers.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataApiServers/{dataApiServersId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataApiServers\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single DataApiServer."
                }
              }
            },
            "dataAdapters": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.dataAdapters.list",
                  "path": "v1alpha/{+parent}/dataAdapters",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAdapters",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListDataAdaptersRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDataAdaptersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists DataAdapters in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.dataAdapters.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAdapters/{dataAdaptersId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataAdapters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "DataAdapter"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single DataAdapter."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.dataAdapters.create",
                  "path": "v1alpha/{+parent}/dataAdapters",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAdapters",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "dataAdapterId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and data_adapter_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "DataAdapter"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new DataAdapter in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.dataAdapters.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAdapters/{dataAdaptersId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataAdapters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the DataAdapter resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DataAdapter"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single DataAdapter."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.dataAdapters.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/dataAdapters/{dataAdaptersId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/dataAdapters\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single DataAdapter."
                }
              }
            },
            "metricsIngestionPipelines": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.metricsIngestionPipelines.list",
                  "path": "v1alpha/{+parent}/metricsIngestionPipelines",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsIngestionPipelines",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListMetricsIngestionPipelinesRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMetricsIngestionPipelinesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists MetricsIngestionPipelines in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.metricsIngestionPipelines.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsIngestionPipelines/{metricsIngestionPipelinesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/metricsIngestionPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MetricsIngestionPipeline"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single MetricsIngestionPipeline."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.metricsIngestionPipelines.create",
                  "path": "v1alpha/{+parent}/metricsIngestionPipelines",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsIngestionPipelines",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "metricsIngestionPipelineId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and metrics_ingestion_pipeline_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "MetricsIngestionPipeline"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new MetricsIngestionPipeline in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.metricsIngestionPipelines.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsIngestionPipelines/{metricsIngestionPipelinesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/metricsIngestionPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the MetricsIngestionPipeline resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "MetricsIngestionPipeline"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single MetricsIngestionPipeline."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.metricsIngestionPipelines.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsIngestionPipelines/{metricsIngestionPipelinesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/metricsIngestionPipelines\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single MetricsIngestionPipeline."
                }
              }
            },
            "iaasMetricsCollectors": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.iaasMetricsCollectors.list",
                  "path": "v1alpha/{+parent}/iaasMetricsCollectors",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/iaasMetricsCollectors",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListIaasMetricsCollectorsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListIaasMetricsCollectorsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists IaasMetricsCollectors in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.iaasMetricsCollectors.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/iaasMetricsCollectors/{iaasMetricsCollectorsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/iaasMetricsCollectors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "IaasMetricsCollector"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single IaasMetricsCollector."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.iaasMetricsCollectors.create",
                  "path": "v1alpha/{+parent}/iaasMetricsCollectors",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/iaasMetricsCollectors",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "iaasMetricsCollectorId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and iaas_metrics_collector_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "IaasMetricsCollector"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new IaasMetricsCollector in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.iaasMetricsCollectors.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/iaasMetricsCollectors/{iaasMetricsCollectorsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/iaasMetricsCollectors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the IaasMetricsCollector resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "IaasMetricsCollector"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single IaasMetricsCollector."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.iaasMetricsCollectors.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/iaasMetricsCollectors/{iaasMetricsCollectorsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/iaasMetricsCollectors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single IaasMetricsCollector."
                }
              }
            },
            "metricsProcessors": {
              "methods": {
                "list": {
                  "id": "telecomdatafabric.projects.locations.metricsProcessors.list",
                  "path": "v1alpha/{+parent}/metricsProcessors",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsProcessors",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListMetricsProcessorsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMetricsProcessorsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists MetricsProcessors in a given project and location."
                },
                "get": {
                  "id": "telecomdatafabric.projects.locations.metricsProcessors.get",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsProcessors/{metricsProcessorsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/metricsProcessors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MetricsProcessor"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single MetricsProcessor."
                },
                "create": {
                  "id": "telecomdatafabric.projects.locations.metricsProcessors.create",
                  "path": "v1alpha/{+parent}/metricsProcessors",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsProcessors",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "metricsProcessorId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and metrics_processor_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "MetricsProcessor"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new MetricsProcessor in a given project and location."
                },
                "patch": {
                  "id": "telecomdatafabric.projects.locations.metricsProcessors.patch",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsProcessors/{metricsProcessorsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/metricsProcessors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the MetricsProcessor resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "MetricsProcessor"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single MetricsProcessor."
                },
                "delete": {
                  "id": "telecomdatafabric.projects.locations.metricsProcessors.delete",
                  "path": "v1alpha/{+name}",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/metricsProcessors/{metricsProcessorsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/metricsProcessors\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single MetricsProcessor."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}