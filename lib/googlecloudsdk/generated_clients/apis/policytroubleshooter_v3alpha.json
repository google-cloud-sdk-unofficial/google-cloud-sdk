{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "policytroubleshooter:v3alpha",
  "name": "policytroubleshooter",
  "canonicalName": "Policy Troubleshooter",
  "version": "v3alpha",
  "revision": "0",
  "title": "Policy Troubleshooter API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/iam/",
  "protocol": "rest",
  "rootUrl": "https://policytroubleshooter.googleapis.com/",
  "mtlsRootUrl": "https://policytroubleshooter.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://policytroubleshooter.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudPolicytroubleshooterIamV3alphaTroubleshootIamPolicyRequest": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaTroubleshootIamPolicyRequest",
      "description": "Request for TroubleshootIamPolicy.",
      "type": "object",
      "properties": {
        "accessTuple": {
          "description": "The information to use for checking whether a member has a permission for a resource.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaAccessTuple"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaAccessTuple": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaAccessTuple",
      "description": "Information about the member, resource, and permission to check.",
      "type": "object",
      "properties": {
        "principal": {
          "description": "Required. The member, or principal, whose access you want to check, in the form of the email address that represents that member. For example, `alice@example.com` or `my-service-account@my-project.iam.gserviceaccount.com`. The member must be a Google Account or a service account. Other types of members are not supported.",
          "type": "string"
        },
        "fullResourceName": {
          "description": "Required. The full resource name that identifies the resource. For example, `\/\/compute.googleapis.com\/projects\/my-project\/zones\/us-central1-a\/instances\/my-instance`. For examples of full resource names for Google Cloud services, see https:\/\/cloud.google.com\/iam\/help\/troubleshooter\/full-resource-names.",
          "type": "string"
        },
        "permission": {
          "description": "Required. The IAM permission to check for the specified member and resource. This field can be either permission or permission FQDN. For a complete list of IAM permissions, see https:\/\/cloud.google.com\/iam\/help\/permissions\/reference. For a complete list of predefined IAM roles and the permissions in each role, see https:\/\/cloud.google.com\/iam\/help\/roles\/reference. For a complete list of IAM permission FQDNs used in IAM v2, see https:\/\/cloud.google.com\/iam\/docs\/deny-permissions-support",
          "type": "string"
        },
        "permissionFqdn": {
          "description": "Output only. The FQDN of the IAM permission to check for the specified member and resource. For a complete list of IAM permission FQDNs used in IAM v2, see https:\/\/cloud.google.com\/iam\/docs\/deny-permissions-support",
          "readOnly": true,
          "type": "string"
        },
        "conditionContext": {
          "description": "Optional. The Cloud IAM condition context under which defines the kind of access being explained. TroubleshootIamPolicy would explain if and why the principal has the queried permission on the resource specified in full_resource_name under this context",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContext"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaConditionContext": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContext",
      "description": "Represents the attributes that will be used to do IAM condition evaluation.",
      "type": "object",
      "properties": {
        "resource": {
          "description": "Represents a target resource that is involved with a network activity. If multiple resources are involved with an activity, this must be the primary one.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextResource"
        },
        "destination": {
          "description": "The destination of a network activity, such as accepting a TCP connection. In a multi hop network activity, the destination represents the receiver of the last hop.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextPeer"
        },
        "request": {
          "description": "Represents a network request, such as an HTTP request.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextRequest"
        },
        "effectiveTags": {
          "description": "Output only. Represents the effective tags on the resource. The effective tags are fetched during Troubleshooting so this field in output only.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextEffectiveTag"
          }
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextResource": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextResource",
      "description": "This message defines core attributes for a resource. A resource is an addressable (named) entity provided by the destination service. For example, a file stored on a network storage service.",
      "type": "object",
      "properties": {
        "service": {
          "description": "The name of the service that this resource belongs to, such as `pubsub.googleapis.com`. The service may be different from the DNS hostname that actually serves the request.",
          "type": "string"
        },
        "name": {
          "description": "The stable identifier (name) of a resource on the `service`. A resource can be logically identified as \"\/\/{resource.service}\/{resource.name}\". The differences between a resource name and a URI are: * Resource name is a logical identifier, independent of network protocol and API version. For example, `\/\/pubsub.googleapis.com\/projects\/123\/topics\/news-feed`. * URI often includes protocol and version information, so it can be used directly by applications. For example, `https:\/\/pubsub.googleapis.com\/v1\/projects\/123\/topics\/news-feed`. See https:\/\/google.aip.dev\/122 for details.",
          "type": "string"
        },
        "type": {
          "description": "The type of the resource. The syntax is platform-specific because different platforms define their resources differently. For Google APIs, the type format must be \"{service}\/{kind}\".",
          "type": "string"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextPeer": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextPeer",
      "description": "This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate.",
      "type": "object",
      "properties": {
        "ip": {
          "description": "The IPv4 or IPv6 address of the peer.",
          "type": "string"
        },
        "port": {
          "description": "The network port of the peer.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextRequest": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextRequest",
      "description": "This message defines attributes for an HTTP request. If the actual request is not an HTTP request, the runtime system should try to map the actual request to an equivalent HTTP request.",
      "type": "object",
      "properties": {
        "receiveTime": {
          "description": "Optional. The timestamp when the `destination` service receives the first byte of the request.",
          "type": "string",
          "format": "google-datetime"
        },
        "satisfiedAccessLevels": {
          "description": "Optional. The information for access levels that are satisfied for the given access tuple. This field is google internal and can only be used by pantheon",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unsatisfiedAccessLevels": {
          "description": "Optional. The information for access levels that are unsatisfied for the given access tuple. This field is google internal and can only be used by pantheon",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextEffectiveTag": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaConditionContextEffectiveTag",
      "description": "An EffectiveTag represents a tag that applies to a resource during policy evaluation. Tags can be either directly bound to a resource or inherited from its ancestor. EffectiveTag contains the name and namespaced_name of the tag value and tag key, with additional fields of `inherited` to indicate the inheritance status of the effective tag.",
      "type": "object",
      "properties": {
        "tagValue": {
          "description": "Resource name for TagValue in the format `tagValues\/456`.",
          "type": "string"
        },
        "namespacedTagValue": {
          "description": "Namespaced name of the TagValue. Now only supported in the format `{organization_id}\/{tag_key_short_name}\/{tag_value_short_name}`. Other formats will be supported when we add non-org parented tags.",
          "type": "string"
        },
        "tagKey": {
          "description": "The name of the TagKey, in the format `tagKeys\/{id}`, such as `tagKeys\/123`.",
          "type": "string"
        },
        "namespacedTagKey": {
          "description": "The namespaced_name of the TagKey. Now only supported in the format of `{organization_id}\/{tag_key_short_name}`. Other formats will be supported when we add non-org parented tags.",
          "type": "string"
        },
        "tagKeyParentName": {
          "description": "The parent name of the tag key. Must be in the format `organizations\/{organization_id}`.",
          "type": "string"
        },
        "inherited": {
          "description": "Indicates the inheritance status of a tag value attached to the given resource. If the tag value is inherited from one of the resource's ancestors, inherited will be true. If false, then the tag value is directly attached to the resource, inherited will be false.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaTroubleshootIamPolicyResponse": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaTroubleshootIamPolicyResponse",
      "description": "Response for TroubleshootIamPolicy.",
      "type": "object",
      "properties": {
        "overallAccessState": {
          "description": "Indicates whether the member has the specified permission for the specified resource, based on evaluating all types of the applicable IAM policies.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The principal has the access.",
            "The principal does not have the access.",
            "The principal might have the access but it is unknown. The reason for unknown can be: 1. The sender lacks access to information needed to get a certain access state. 2. The sender did not provide required condition context which is required to get a certain access state."
          ],
          "enum": [
            "OVERALL_ACCESS_STATE_UNSPECIFIED",
            "CAN_ACCESS",
            "CANNOT_ACCESS",
            "UNKNOWN"
          ]
        },
        "accessTuple": {
          "description": "The access tuples with evaluation information of both IAM v1 and v2.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaAccessTuple"
        },
        "allowPolicyExplanation": {
          "description": "The explanation of IAM Allow policies with annotations to indicated how each policy contributed to the final result.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaAllowPolicyExplanation"
        },
        "denyPolicyExplanation": {
          "description": "The explanation of IAM Allow policies with annotations to indicated how each policy contributed to the final result.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyPolicyExplanation"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaAllowPolicyExplanation": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaAllowPolicyExplanation",
      "description": "Details about how IAM allow policies contributed to the access check.",
      "type": "object",
      "properties": {
        "allowAccessState": {
          "description": "Indicates whether the member has the specified permission for the specified resource, based on evaluating all applicable IAM allow policies.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "Access is granted.",
            "Access is not granted.",
            "Access is allowed only if a condition expression evaluates to `true`.",
            "The sender of the request does not have access to all of the policies that Policy Troubleshooter needs to evaluate."
          ],
          "enum": [
            "ALLOW_ACCESS_STATE_UNSPECIFIED",
            "ALLOW_ACCESS_STATE_GRANTED",
            "ALLOW_ACCESS_STATE_NOT_GRANTED",
            "ALLOW_ACCESS_STATE_UNKNOWN_CONDITIONAL",
            "ALLOW_ACCESS_STATE_UNKNOWN_INFO"
          ]
        },
        "explainedPolicies": {
          "description": "List of IAM allow policies that were evaluated to check the member's permissions, with annotations to indicate how each policy contributed to the final result. The list of policies can include the policy for the resource itself. It can also include policies that are inherited from higher levels of the resource hierarchy, including the organization, the folder, and the project. To learn more about the resource hierarchy, see https:\/\/cloud.google.com\/iam\/help\/resource-hierarchy.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaExplainedAllowPolicy"
          }
        },
        "relevance": {
          "description": "The relevance of the allow policy type to the overall access state.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaExplainedAllowPolicy": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaExplainedAllowPolicy",
      "description": "Details about how a specific IAM Policy contributed to the access check.",
      "type": "object",
      "properties": {
        "allowAccessState": {
          "description": "Required. Indicates whether _this policy_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "Access is granted.",
            "Access is not granted.",
            "Access is allowed only if a condition expression evaluates to `true`.",
            "The sender of the request does not have access to all of the policies that Policy Troubleshooter needs to evaluate."
          ],
          "enum": [
            "ALLOW_ACCESS_STATE_UNSPECIFIED",
            "ALLOW_ACCESS_STATE_GRANTED",
            "ALLOW_ACCESS_STATE_NOT_GRANTED",
            "ALLOW_ACCESS_STATE_UNKNOWN_CONDITIONAL",
            "ALLOW_ACCESS_STATE_UNKNOWN_INFO"
          ]
        },
        "fullResourceName": {
          "description": "The full resource name that identifies the resource. For example, `\/\/compute.googleapis.com\/projects\/my-project\/zones\/us-central1-a\/instances\/my-instance`. If the sender of the request does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https:\/\/cloud.google.com\/iam\/help\/troubleshooter\/full-resource-names.",
          "type": "string"
        },
        "bindingExplanations": {
          "description": "Details about how each binding in the policy affects the member's ability, or inability, to use the permission for the resource. The order of the bindings matches the binding order in the policy. If the sender of the request does not have access to the policy, this field is omitted.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaAllowBindingExplanation"
          }
        },
        "relevance": {
          "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the sender of the request does not have access to the policy, this field is omitted.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        },
        "policy": {
          "description": "The IAM allow policy attached to the resource. If the sender of the request does not have access to the policy, this field is empty.",
          "$ref": "GoogleIamV1Policy"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaAllowBindingExplanation": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaAllowBindingExplanation",
      "description": "Details about how a binding in an allow policy affects a member's ability to use a permission.",
      "type": "object",
      "properties": {
        "allowAccessState": {
          "description": "Required. Indicates whether _this binding_ provides the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "Access is granted.",
            "Access is not granted.",
            "Access is allowed only if a condition expression evaluates to `true`.",
            "The sender of the request does not have access to all of the policies that Policy Troubleshooter needs to evaluate."
          ],
          "enum": [
            "ALLOW_ACCESS_STATE_UNSPECIFIED",
            "ALLOW_ACCESS_STATE_GRANTED",
            "ALLOW_ACCESS_STATE_NOT_GRANTED",
            "ALLOW_ACCESS_STATE_UNKNOWN_CONDITIONAL",
            "ALLOW_ACCESS_STATE_UNKNOWN_INFO"
          ]
        },
        "role": {
          "description": "The role that this binding grants. For example, `roles\/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https:\/\/cloud.google.com\/iam\/help\/roles\/reference.",
          "type": "string"
        },
        "rolePermission": {
          "description": "Indicates whether the role granted by this binding contains the specified permission.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The permission is included in the role.",
            "The permission is not included in the role.",
            "The sender of the request is not allowed to access the binding."
          ],
          "enum": [
            "ROLE_PERMISSION_INCLUSION_STATE_UNSPECIFIED",
            "ROLE_PERMISSION_INCLUDED",
            "ROLE_PERMISSION_NOT_INCLUDED",
            "ROLE_PERMISSION_UNKNOWN_INFO"
          ]
        },
        "rolePermissionRelevance": {
          "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        },
        "combinedMembership": {
          "description": "The combined result of all memberships. Indicates if there is any member in the binding includes the principal specified in the request, either directly or indirectly.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaAllowBindingExplanationAnnotatedAllowMembership"
        },
        "memberships": {
          "description": "Indicates whether each member in the binding includes the member specified in the request, either directly or indirectly. Each key identifies a member in the binding, and each value indicates whether the member in the binding includes the member in the request. For example, suppose that a binding includes the following members: * `user:alice@example.com` * `group:product-eng@example.com` You want to troubleshoot access for `user:bob@example.com`. This user is a member of the group `group:product-eng@example.com`. For the first member in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `NOT_INCLUDED`. For the second member in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `INCLUDED`.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaAllowBindingExplanationAnnotatedAllowMembership"
          }
        },
        "relevance": {
          "description": "The relevance of this binding to the overall determination for the entire policy.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        },
        "condition": {
          "description": "A condition expression that prevents access unless the expression evaluates to `true`. To learn about IAM Conditions, see https:\/\/cloud.google.com\/iam\/help\/conditions\/overview.",
          "$ref": "GoogleTypeExpr"
        },
        "conditionExplanation": {
          "description": "Condition evaluation state for this binding.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaConditionExplanation"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaAllowBindingExplanationAnnotatedAllowMembership": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaAllowBindingExplanationAnnotatedAllowMembership",
      "description": "Details about whether the binding includes the member.",
      "type": "object",
      "properties": {
        "membership": {
          "description": "Indicates whether the binding includes the member.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The principal matches the member. The member can be included directly or indirectly. For example: * A member is included directly if that member is listed in the binding. * A member is included indirectly if that member is in a Google group or G Suite domain that is listed in the binding.",
            "The binding does not match the member.",
            "The sender of the request is not allowed to access the binding.",
            "The member is an unsupported type."
          ],
          "enum": [
            "MEMBERSHIP_MATCHING_STATE_UNSPECIFIED",
            "MEMBERSHIP_MATCHED",
            "MEMBERSHIP_NOT_MATCHED",
            "MEMBERSHIP_UNKNOWN_INFO",
            "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
          ]
        },
        "relevance": {
          "description": "The relevance of the member's status to the overall determination for the binding.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        }
      }
    },
    "GoogleTypeExpr": {
      "id": "GoogleTypeExpr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaConditionExplanation": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaConditionExplanation",
      "description": "Condition Explanation",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value of the condition.",
          "type": "any"
        },
        "errors": {
          "description": "The general errors contained in the overall expression explanation.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "evaluationStates": {
          "description": "List of evaluated states of non boolean expression in the condition",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaConditionExplanationEvaluationState"
          }
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaConditionExplanationEvaluationState": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaConditionExplanationEvaluationState",
      "description": "Evaluated state of an expression.",
      "type": "object",
      "properties": {
        "start": {
          "description": "Start position of an expression in the original condition, by character.",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "End position of an expression in the original condition, by character, end included, for example: the end position of the first part of \"a==b || c==d\" would be 4.",
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "description": "Value of this expression.",
          "type": "any"
        },
        "errors": {
          "description": "The general errors contained in the expression explanation.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      }
    },
    "GoogleIamV1Policy": {
      "id": "GoogleIamV1Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          }
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY\/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW\/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1Rule"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "GoogleIamV1Binding": {
      "id": "GoogleIamV1Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}\/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https:\/\/cloud.google.com\/kubernetes-engine\/docs\/how-to\/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace\/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "GoogleTypeExpr"
        },
        "bindingId": {
          "type": "string"
        }
      }
    },
    "GoogleIamV1AuditConfig": {
      "id": "GoogleIamV1AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          }
        }
      }
    },
    "GoogleIamV1AuditLogConfig": {
      "id": "GoogleIamV1AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreChildExemptions": {
          "type": "boolean"
        }
      }
    },
    "GoogleIamV1Rule": {
      "id": "GoogleIamV1Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "permissions": {
          "description": "A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "type": "string",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log the request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log the request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if the PRINCIPAL\/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches if the PRINCIPAL\/AUTHORITY_SELECTOR is in none of the entries. The format for in and not_in entries can be found at in the Local IAM documentation (see go\/local-iam#features).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Additional restrictions that must be met. All conditions must pass for the rule to match.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of CheckPolicy for any entries that match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1LogConfig"
          }
        }
      }
    },
    "GoogleIamV1Condition": {
      "id": "GoogleIamV1Condition",
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "iam": {
          "description": "Trusted attributes supplied by the IAM system.",
          "type": "string",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which must only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go\/security-realms). When used with IN, the condition indicates \"any of the request's realms match one of the given values; with NOT_IN, \"none of the realms match any of the given values\". Note that a value can be: - 'self:campus' (i.e., clients that are in the same campus) - 'self:metro' (i.e., clients that are in the same metro) - 'self:cloud-region' (i.e., allow connections from clients that are in the same cloud region) - 'self:prod-region' (i.e., allow connections from clients that are in the same prod region) - 'guardians' (i.e., allow connections from its guardian realms. See go\/security-realms-glossary#guardian for more information.) - 'self' [DEPRECATED] (i.e., allow connections from clients that are in the same security realm, which is currently but not guaranteed to be campus-sized) - a realm (e.g., 'campus-abc') - a realm group (e.g., 'realms-for-borg-cell-xx', see: go\/realm-groups) A match is determined by a realm group membership check performed by a RealmAclRep object (go\/realm-acl-howto). It is not permitted to grant access based on the *absence* of a realm, so realm conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this request. When used with IN, the condition indicates that one of the approvers associated with the request matches the specified principal, or is a member of the specified group. Approvers can only grant additional access, and are thus only used in a strictly positive context (e.g. ALLOW\/IN or DENY\/NOT_IN).",
            "What types of justifications have been supplied with this request. String values should match enum names from security.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not permitted to grant access based on the *absence* of a justification, so justification conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN). Multiple justifications, e.g., a Buganizer ID and a manually-entered reason, are normal and supported.",
            "What type of credentials have been supplied with this request. String values should match enum names from security_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY is supported. It is not permitted to grant access based on the *absence* of a credentials type, so the conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN).",
            "EXPERIMENTAL -- DO NOT USE. The conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN)."
          ],
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE",
            "CREDS_ASSERTION"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.",
          "type": "string",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "description": "An operator to apply the subject with.",
          "type": "string",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is a set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is a set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "values": {
          "description": "The objects of the condition.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleIamV1LogConfig": {
      "id": "GoogleIamV1LogConfig",
      "description": "Specifies what kind of log the caller must write",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "GoogleIamV1LogConfigCounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "GoogleIamV1LogConfigDataAccessOptions"
        },
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "GoogleIamV1LogConfigCloudAuditOptions"
        }
      }
    },
    "GoogleIamV1LogConfigCounterOptions": {
      "id": "GoogleIamV1LogConfigCounterOptions",
      "description": "Increment a streamz counter with the specified metric and field names. Metric names should start with a '\/', generally be lowercase-only, and end in \"_count\". Field names should not contain an initial slash. The actual exported metric names will have \"\/iam\/policy\" prepended. Field names correspond to IAM request parameters and field values are their respective values. Supported field names: - \"authority\", which is \"[token]\" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - \"iam_principal\", a representation of IAMContext.principal even if a token or authority selector is present; or - \"\" (empty string), resulting in a counter with no fields. Examples: counter { metric: \"\/debug_access_count\" field: \"iam_principal\" } ==> increment counter \/iam\/policy\/debug_access_count {iam_principal=[value of IAMContext.principal]}",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom fields.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1LogConfigCounterOptionsCustomField"
          }
        }
      }
    },
    "GoogleIamV1LogConfigCounterOptionsCustomField": {
      "id": "GoogleIamV1LogConfigCounterOptionsCustomField",
      "description": "Custom fields. These can be used to create a counter with arbitrary field\/value pairs. See: go\/rpcsp-custom-fields.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the field name.",
          "type": "string"
        },
        "value": {
          "description": "Value is the field value. It is important that in contrast to the CounterOptions.field, the value here is a constant that is not derived from the IAMContext.",
          "type": "string"
        }
      }
    },
    "GoogleIamV1LogConfigDataAccessOptions": {
      "id": "GoogleIamV1LogConfigDataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
        "logMode": {
          "type": "string",
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after the authorization check. If client chooses to write one and it fails, client may either fail open (allow the operation to continue) or fail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization check is being made may only be performed if it is successfully logged to Gin. For instance, the authorization library may satisfy this obligation by emitting a partial log entry at authorization check time and only returning ALLOW to the application if it succeeds. If a matching Rule has this directive, but the client has not indicated that it will honor such requirements, then the IAM check will result in authorization failure by setting CheckPolicyResponse.success=false."
          ],
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ]
        }
      }
    },
    "GoogleIamV1LogConfigCloudAuditOptions": {
      "id": "GoogleIamV1LogConfigCloudAuditOptions",
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
        "logName": {
          "description": "The log_name to populate in the Cloud Audit Record.",
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com\/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com\/data_access\""
          ],
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ]
        },
        "authorizationLoggingOptions": {
          "description": "Information used by the Cloud Audit Logging pipeline.",
          "$ref": "GoogleCloudAuditAuthorizationLoggingOptions"
        }
      }
    },
    "GoogleCloudAuditAuthorizationLoggingOptions": {
      "id": "GoogleCloudAuditAuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object",
      "properties": {
        "permissionType": {
          "description": "The type of the permission that was checked.",
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ]
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaDenyPolicyExplanation": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaDenyPolicyExplanation",
      "description": "Details about how IAM deny policies contributed to the access check.",
      "type": "object",
      "properties": {
        "denyAccessState": {
          "description": "Indicates whether the member is denied for the specified permission for the specified resource, based on evaluating all applicable IAM deny policies.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "Access is denied.",
            "Access is not denied.",
            "Access is denied only if a condition expression evaluates to `true`.",
            "The sender of the request does not have access to all of the deny policies that Policy Troubleshooter needs to evaluate."
          ],
          "enum": [
            "DENY_ACCESS_STATE_UNSPECIFIED",
            "DENY_ACCESS_STATE_DENIED",
            "DENY_ACCESS_STATE_NOT_DENIED",
            "DENY_ACCESS_STATE_UNKNOWN_CONDITIONAL",
            "DENY_ACCESS_STATE_UNKNOWN_INFO"
          ]
        },
        "explainedResources": {
          "description": "List of resources with IAM deny policies that were evaluated to check the member's denied permissions, with annotations to indicate how each policy contributed to the final result. The list of resources can include the policy for the resource itself. It can also include policies that are inherited from higher levels of the resource hierarchy, including the organization, the folder, and the project. The order of the resources starts from the resource and climbs up the resource hierarchy. To learn more about the resource hierarchy, see https:\/\/cloud.google.com\/iam\/help\/resource-hierarchy.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaExplainedDenyResource"
          }
        },
        "relevance": {
          "description": "The relevance of the deny policy type to the overall access state.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        },
        "permissionDeniable": {
          "description": "Indicates whether the permission to troubleshoot supports deny.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaExplainedDenyResource": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaExplainedDenyResource",
      "description": "Details about how a specific resource contributed to the deny access check.",
      "type": "object",
      "properties": {
        "denyAccessState": {
          "description": "Required. Indicates whether any policies attached to _this resource_ deny the specific permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "Access is denied.",
            "Access is not denied.",
            "Access is denied only if a condition expression evaluates to `true`.",
            "The sender of the request does not have access to all of the deny policies that Policy Troubleshooter needs to evaluate."
          ],
          "enum": [
            "DENY_ACCESS_STATE_UNSPECIFIED",
            "DENY_ACCESS_STATE_DENIED",
            "DENY_ACCESS_STATE_NOT_DENIED",
            "DENY_ACCESS_STATE_UNKNOWN_CONDITIONAL",
            "DENY_ACCESS_STATE_UNKNOWN_INFO"
          ]
        },
        "fullResourceName": {
          "description": "The full resource name that identifies the resource. For example, `\/\/compute.googleapis.com\/projects\/my-project\/zones\/us-central1-a\/instances\/my-instance`. If the sender of the request does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https:\/\/cloud.google.com\/iam\/help\/troubleshooter\/full-resource-names.",
          "type": "string"
        },
        "explainedPolicies": {
          "description": "List of IAM deny policies that were evaluated to check the member's denied permissions, with annotations to indicate how each policy contributed to the final result.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaExplainedDenyPolicy"
          }
        },
        "relevance": {
          "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the sender of the request does not have access to the policy, this field is omitted.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaExplainedDenyPolicy": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaExplainedDenyPolicy",
      "description": "Details about how a specific IAM deny policy Policy contributed to the access check.",
      "type": "object",
      "properties": {
        "denyAccessState": {
          "description": "Required. Indicates whether _this policy_ denies the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "Access is denied.",
            "Access is not denied.",
            "Access is denied only if a condition expression evaluates to `true`.",
            "The sender of the request does not have access to all of the deny policies that Policy Troubleshooter needs to evaluate."
          ],
          "enum": [
            "DENY_ACCESS_STATE_UNSPECIFIED",
            "DENY_ACCESS_STATE_DENIED",
            "DENY_ACCESS_STATE_NOT_DENIED",
            "DENY_ACCESS_STATE_UNKNOWN_CONDITIONAL",
            "DENY_ACCESS_STATE_UNKNOWN_INFO"
          ]
        },
        "policy": {
          "description": "The IAM deny policy attached to the resource. If the sender of the request does not have access to the policy, this field is omitted.",
          "$ref": "GoogleIamV2Policy"
        },
        "ruleExplanations": {
          "description": "Details about how each rule in the policy affects the member's inability to use the permission for the resource. The order of the deny rule matches the order of the rules in the deny policy. If the sender of the request does not have access to the policy, this field is omitted.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanation"
          }
        },
        "relevance": {
          "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the sender of the request does not have access to the policy, this field is omitted.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        }
      }
    },
    "GoogleIamV2Policy": {
      "id": "GoogleIamV2Policy",
      "description": "Data for an IAM policy.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the `Policy`, which must be unique. Format: `policies\/{attachment_point}\/denypolicies\/{policy_id}` The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, `\/`, must be written as `%2F`. For example, `policies\/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project\/denypolicies\/my-deny-policy`. For organizations and folders, use the numeric ID in the full resource name. For projects, requests can use the alphanumeric or the numeric ID. Responses always contain the numeric ID.",
          "type": "string"
        },
        "uid": {
          "description": "Immutable. The globally unique ID of the `Policy`. Assigned automatically when the `Policy` is created.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. The kind of the `Policy`. Always contains the value `DenyPolicy`.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "A user-specified description of the `Policy`. This value can be up to 63 characters.",
          "type": "string"
        },
        "annotations": {
          "description": "A key-value map to store arbitrary metadata for the `Policy`. Keys can be up to 63 characters. Values can be up to 255 characters.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "description": "An opaque tag that identifies the current version of the `Policy`. IAM uses this value to help manage concurrent updates, so they do not cause one update to be overwritten by another. If this field is present in a CreatePolicy request, the value is ignored.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time when the `Policy` was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time when the `Policy` was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "Output only. The time when the `Policy` was deleted. Empty if the policy is not deleted.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "rules": {
          "description": "A list of rules that specify the behavior of the `Policy`. All of the rules should be of the `kind` specified in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV2PolicyRule"
          }
        },
        "managingAuthority": {
          "description": "Immutable. Specifies that this policy is managed by an authority and can only be modified by that authority. Usage is restricted.",
          "type": "string"
        }
      }
    },
    "GoogleIamV2PolicyRule": {
      "id": "GoogleIamV2PolicyRule",
      "description": "A single rule in a `Policy`.",
      "type": "object",
      "properties": {
        "denyRule": {
          "description": "A rule for a deny policy.",
          "$ref": "GoogleIamV2DenyRule"
        },
        "accessBoundaryRule": {
          "description": "A rule for an access boundary policy.",
          "$ref": "GoogleIamV2AccessBoundaryRule"
        },
        "description": {
          "description": "A user-specified description of the rule. This value can be up to 256 characters.",
          "type": "string"
        }
      }
    },
    "GoogleIamV2DenyRule": {
      "id": "GoogleIamV2DenyRule",
      "description": "A deny rule in an IAM deny policy.",
      "type": "object",
      "properties": {
        "deniedPrincipals": {
          "description": "The identities that are prevented from using one or more permissions on Google Cloud resources. This field can contain the following values: * `principalSet:\/\/goog\/public:all`: A special identifier that represents any principal that is on the internet, even if they do not have a Google Account or are not logged in. * `principal:\/\/goog\/subject\/{email_id}`: A specific Google Account. Includes Gmail, Cloud Identity, and Google Workspace user accounts. For example, `principal:\/\/goog\/subject\/alice@example.com`. * `deleted:principal:\/\/goog\/subject\/{email_id}?uid={uid}`: A specific Google Account that was deleted recently. For example, `deleted:principal:\/\/goog\/subject\/alice@example.com?uid=1234567890`. If the Google Account is recovered, this identifier reverts to the standard identifier for a Google Account. * `principalSet:\/\/goog\/group\/{group_id}`: A Google group. For example, `principalSet:\/\/goog\/group\/admins@example.com`. * `deleted:principalSet:\/\/goog\/group\/{group_id}?uid={uid}`: A Google group that was deleted recently. For example, `deleted:principalSet:\/\/goog\/group\/admins@example.com?uid=1234567890`. If the Google group is restored, this identifier reverts to the standard identifier for a Google group. * `principal:\/\/iam.googleapis.com\/projects\/-\/serviceAccounts\/{service_account_id}`: A Google Cloud service account. For example, `principal:\/\/iam.googleapis.com\/projects\/-\/serviceAccounts\/my-service-account@iam.gserviceaccount.com`. * `deleted:principal:\/\/iam.googleapis.com\/projects\/-\/serviceAccounts\/{service_account_id}?uid={uid}`: A Google Cloud service account that was deleted recently. For example, `deleted:principal:\/\/iam.googleapis.com\/projects\/-\/serviceAccounts\/my-service-account@iam.gserviceaccount.com?uid=1234567890`. If the service account is undeleted, this identifier reverts to the standard identifier for a service account. * `principalSet:\/\/goog\/cloudIdentityCustomerId\/{customer_id}`: All of the principals associated with the specified Google Workspace or Cloud Identity customer ID. For example, `principalSet:\/\/goog\/cloudIdentityCustomerId\/C01Abc35`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exceptionPrincipals": {
          "description": "The identities that are excluded from the deny rule, even if they are listed in the `denied_principals`. For example, you could add a Google group to the `denied_principals`, then exclude specific users who belong to that group. This field can contain the same values as the `denied_principals` field, excluding `principalSet:\/\/goog\/public:all`, which represents all users on the internet.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deniedPermissions": {
          "description": "The permissions that are explicitly denied by this rule. Each permission uses the format `{service_fqdn}\/{resource}.{verb}`, where `{service_fqdn}` is the fully qualified domain name for the service. For example, `iam.googleapis.com\/roles.list`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exceptionPermissions": {
          "description": "Specifies the permissions that this rule excludes from the set of denied permissions given by `denied_permissions`. If a permission appears in `denied_permissions` _and_ in `exception_permissions` then it will _not_ be denied. The excluded permissions can be specified using the same syntax as `denied_permissions`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "denialCondition": {
          "description": "The condition that determines whether this deny rule applies to a request. If the condition expression evaluates to `true`, then the deny rule is applied; otherwise, the deny rule is not applied. Each deny rule is evaluated independently. If this deny rule does not apply to a request, other deny rules might still apply. The condition can use CEL functions that evaluate [resource tags](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-tags). Other functions and operators are not supported.",
          "$ref": "GoogleTypeExpr"
        }
      }
    },
    "GoogleIamV2AccessBoundaryRule": {
      "id": "GoogleIamV2AccessBoundaryRule",
      "description": "An IAM access boundary rule, which defines an upper bound of IAM permissions on a single resource. All access boundary rules in an access boundary policy are evaluated together as a union. Even if this access boundary rule does not allow access to the resource, another access boundary rule might allow access.",
      "type": "object",
      "properties": {
        "availableResource": {
          "description": "Required. The full resource name of a Google Cloud resource. The format is defined at https:\/\/cloud.google.com\/apis\/design\/resource_names. The only supported value is `*`, which represents all resources.",
          "type": "string"
        },
        "availablePermissions": {
          "description": "Required. A list of permissions that may be allowed for use on the specified resource. The only supported value is `*`, which represents all permissions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "availabilityCondition": {
          "description": "Optional. An availability condition that further constrains the access allowed by the access boundary rule. If the condition evaluates to `true`, then this access boundary rule will provide access to the specified resource, assuming the principal has the required permissions for the resource. If the condition does not evaluate to `true`, then access to the specified resource will not be available. The condition can only evaluate the access level for the request. Access levels use the format `accessPolicies\/{policy_name}\/accessLevels\/{access_level_shortname}`.",
          "$ref": "GoogleTypeExpr"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanation": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanation",
      "description": "Details about how a deny rule in a deny policy affects a member's ability to use a permission.",
      "type": "object",
      "properties": {
        "denyAccessState": {
          "description": "Required. Indicates whether _this rule_ denies the specified permission to the specified member for the specified resource. This field does _not_ indicate whether the member is actually denied on the permission for the resource. There might be another rule that overrides this rule. To determine whether the member actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "Access is denied.",
            "Access is not denied.",
            "Access is denied only if a condition expression evaluates to `true`.",
            "The sender of the request does not have access to all of the deny policies that Policy Troubleshooter needs to evaluate."
          ],
          "enum": [
            "DENY_ACCESS_STATE_UNSPECIFIED",
            "DENY_ACCESS_STATE_DENIED",
            "DENY_ACCESS_STATE_NOT_DENIED",
            "DENY_ACCESS_STATE_UNKNOWN_CONDITIONAL",
            "DENY_ACCESS_STATE_UNKNOWN_INFO"
          ]
        },
        "combinedDeniedPermission": {
          "description": "Indicates whether the permission matches any denied permission pattern.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedPermissionMatching"
        },
        "deniedPermissions": {
          "description": "Indicates whether the permission matches each denied permission pattern. Each key identifies a denied permission in the rule, and each value indicates whether the denied permission matches the permission in the request.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedPermissionMatching"
          }
        },
        "combinedExceptionPermission": {
          "description": "Indicates whether the permission matches any exception permission pattern.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedPermissionMatching"
        },
        "exceptionPermissions": {
          "description": "Indicates whether the permission matches each exception permission pattern. Each key identifies a exception permission in the rule, and each value indicates whether the exception permission matches the permission in the request.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedPermissionMatching"
          }
        },
        "combinedDeniedPrincipal": {
          "description": "Indicates whether the principal matches any denied principal pattern.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedDenyPrincipalMatching"
        },
        "deniedPrincipals": {
          "description": "Indicates whether the principal matches each denied principals. Each key identifies a denied principal in the rule, and each value indicates whether the denied principal matches the principal in the request.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedDenyPrincipalMatching"
          }
        },
        "combinedExceptionPrincipal": {
          "description": "Indicates whether the principal matches any exception principal pattern.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedDenyPrincipalMatching"
        },
        "exceptionPrincipals": {
          "description": "Indicates whether the principal matches each exception principal pattern. Each key identifies a exception principal in the rule, and each value indicates whether the exception principal matches the principal in the request.",
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedDenyPrincipalMatching"
          }
        },
        "relevance": {
          "description": "The relevance of this binding to the overall determination for the entire policy.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        },
        "condition": {
          "description": "A condition expression that prevents access unless the expression evaluates to `true`. To learn about IAM Conditions, see https:\/\/cloud.google.com\/iam\/help\/conditions\/overview.",
          "$ref": "GoogleTypeExpr"
        },
        "conditionExplanation": {
          "description": "Condition evaluation state for this binding.",
          "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaConditionExplanation"
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedPermissionMatching": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedPermissionMatching",
      "description": "Details about whether the permission matches the permission pattern.",
      "type": "object",
      "properties": {
        "permissionMatchingState": {
          "description": "Indicates whether the permission matches the permission pattern.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The permission matches the permission pattern.",
            "The permission does not match the permission pattern.."
          ],
          "enum": [
            "PERMISSION_PATTERN_MATCHING_STATE_UNSPECIFIED",
            "PERMISSION_PATTERN_MATCHED",
            "PERMISSION_PATTERN_NOT_MATCHED"
          ]
        },
        "relevance": {
          "description": "The relevance of the permission status to the overall determination for the rule.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        }
      }
    },
    "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedDenyPrincipalMatching": {
      "id": "GoogleCloudPolicytroubleshooterIamV3alphaDenyRuleExplanationAnnotatedDenyPrincipalMatching",
      "description": "Details about whether the principal matches the principal set.",
      "type": "object",
      "properties": {
        "membership": {
          "description": "Indicates whether the principal is matched.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The principal matches the member. The member can be included directly or indirectly. For example: * A member is included directly if that member is listed in the binding. * A member is included indirectly if that member is in a Google group or G Suite domain that is listed in the binding.",
            "The binding does not match the member.",
            "The sender of the request is not allowed to access the binding.",
            "The member is an unsupported type."
          ],
          "enum": [
            "MEMBERSHIP_MATCHING_STATE_UNSPECIFIED",
            "MEMBERSHIP_MATCHED",
            "MEMBERSHIP_NOT_MATCHED",
            "MEMBERSHIP_UNKNOWN_INFO",
            "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
          ]
        },
        "relevance": {
          "description": "The relevance of the member's status to the overall determination for the binding.",
          "type": "string",
          "enumDescriptions": [
            "Reserved for future use.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "HEURISTIC_RELEVANCE_NORMAL",
            "HEURISTIC_RELEVANCE_HIGH"
          ]
        }
      }
    }
  },
  "resources": {
    "iam": {
      "methods": {
        "troubleshoot": {
          "id": "policytroubleshooter.iam.troubleshoot",
          "path": "v3alpha/iam:troubleshoot",
          "flatPath": "v3alpha/iam:troubleshoot",
          "httpMethod": "POST",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaTroubleshootIamPolicyRequest"
          },
          "response": {
            "$ref": "GoogleCloudPolicytroubleshooterIamV3alphaTroubleshootIamPolicyResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Checks whether a member has a specific permission for a specific resource, and explains why the member does or does not have that permission."
        }
      }
    }
  },
  "basePath": ""
}