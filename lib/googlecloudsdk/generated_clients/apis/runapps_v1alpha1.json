{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "runapps:v1alpha1",
  "name": "runapps",
  "canonicalName": "Run Apps",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Serverless Integrations API",
  "description": "API for managing Cloud Run Integrations.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/run/docs/integrations/using-gcp-services",
  "protocol": "rest",
  "rootUrl": "https://runapps.googleapis.com/",
  "mtlsRootUrl": "https://runapps.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://runapps.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListApplicationsResponse": {
      "id": "ListApplicationsResponse",
      "description": "Message for response to listing Applications",
      "type": "object",
      "properties": {
        "applications": {
          "description": "The list of Application",
          "type": "array",
          "items": {
            "$ref": "Application"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Application": {
      "id": "Application",
      "description": "Message describing Application object Next tag: 9",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: http:\/\/kubernetes.io\/docs\/user-guide\/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deleteTime": {
          "description": "Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "config": {
          "description": "The application configuration. On output, both intent repo and application config are populated. On input, only one can be modified at a time.",
          "$ref": "Config"
        },
        "displayName": {
          "description": "A mutable, user-defined name for the application.",
          "type": "string"
        },
        "reconciling": {
          "description": "Output only. Indicates whether the resource's reconciliation is still in progress.",
          "readOnly": true,
          "type": "boolean"
        },
        "etag": {
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Config": {
      "id": "Config",
      "description": "Message for the Application Config Next tag: 6",
      "type": "object",
      "properties": {
        "resources": {
          "description": "The map of resource configs where the key is the name of resources and the value is the resource config.",
          "type": "object",
          "additionalProperties": {
            "$ref": "ResourceConfig"
          }
        },
        "config": {
          "description": "A byte array encapsulating the contents of the application config. This can be of any type of supported config (Simple Yaml, multi-file in-app config, etc.)",
          "type": "string",
          "format": "byte"
        },
        "resourceList": {
          "description": "The list of resources defined using the type-agnostic Resource definitions.",
          "type": "array",
          "items": {
            "$ref": "Resource"
          }
        }
      }
    },
    "ResourceConfig": {
      "id": "ResourceConfig",
      "description": "Message for the Resource configuration. Next tag: 8",
      "type": "object",
      "properties": {
        "router": {
          "description": "Router configuration.",
          "$ref": "RouterConfig"
        },
        "service": {
          "description": "Cloud Run service configuration.",
          "$ref": "CloudRunServiceConfig"
        },
        "redis": {
          "description": "Redis configuration.",
          "$ref": "RedisConfig"
        },
        "latestDeployment": {
          "description": "Output only. The deployment name for the most recent deployment that has been triggered for a given resource. If a resource was never deployed then this field will be empty.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "RouterConfig": {
      "id": "RouterConfig",
      "description": "Message for a Router resource.",
      "type": "object",
      "properties": {
        "domain": {
          "description": "Deprecated. Use the DomainConfig instead. Domain name to associate with the router.",
          "type": "string"
        },
        "default-route": {
          "description": "Deprecated. Use the DomainConfig instead. The default route config. The URL paths field is not required for this route config.",
          "$ref": "Route"
        },
        "routes": {
          "description": "Deprecated. Use the DomainConfig instead. A list of route configurations to associate with the router. Each Route configuration must include a paths configuration.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        },
        "dns-zone": {
          "description": "Deprecated. Use the DomainConfig instead. DNSZone represents an existing DNS zone for the router. It's used for bring-your-own-DNSZone case. If empty, a new managed DNS zone shall be created.",
          "type": "string"
        },
        "domains": {
          "description": "The config for each domain.",
          "type": "array",
          "items": {
            "$ref": "DomainConfig"
          }
        }
      }
    },
    "Route": {
      "id": "Route",
      "description": "Message for a single routeable resource within a Router.",
      "type": "object",
      "properties": {
        "paths": {
          "description": "List of paths to be routed to this route. e.g. [\"\/*, \/api\/*\"]. The path must fit the constraints at https:\/\/cloud.google.com\/load-balancing\/docs\/url-map-concepts#pm-constraints.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ref": {
          "description": "Required. A reference to the resource in the config to which this is routing. e.g. \"service\/hello-service\".",
          "type": "string"
        },
        "cdn": {
          "description": "Whether to enable CDN on the route.",
          "type": "boolean"
        }
      }
    },
    "DomainConfig": {
      "id": "DomainConfig",
      "type": "object",
      "properties": {
        "domain": {
          "description": "Domain name for this config.",
          "type": "string"
        },
        "routes": {
          "description": "A list of route configurations to associate with the domain. Each Route configuration must include a paths configuration.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        }
      }
    },
    "CloudRunServiceConfig": {
      "id": "CloudRunServiceConfig",
      "description": "Message for Cloud Run service configs.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "Bindings to other resources.",
          "type": "array",
          "items": {
            "$ref": "ServiceResourceBindingConfig"
          }
        }
      }
    },
    "ServiceResourceBindingConfig": {
      "id": "ServiceResourceBindingConfig",
      "description": "Message for a resource binding, defined in config of the source resource.",
      "type": "object",
      "properties": {
        "ref": {
          "description": "Reference to a target resource that is being bound. Format: \"\/\", e.g. \"cloudsql\/sql_db\"",
          "type": "string"
        },
        "binding-config": {
          "description": "Any configs associated with the binding. Supported keys are resource type specific.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RedisConfig": {
      "id": "RedisConfig",
      "description": "Message for Redis configs.",
      "type": "object",
      "properties": {
        "instance": {
          "description": "Configs for the Redis instance.",
          "$ref": "RedisInstanceConfig"
        }
      }
    },
    "RedisInstanceConfig": {
      "id": "RedisInstanceConfig",
      "description": "Message for Redis instance configs.",
      "type": "object",
      "properties": {
        "memory-size-gb": {
          "description": "The redis instance memory size, in GB.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Resource": {
      "id": "Resource",
      "description": "Resource defines a Stacks resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID describes the resource that's bound.",
          "$ref": "ResourceID"
        },
        "config": {
          "description": "Configuration is the typekit-specified set of fields that define the resource. The configuration has an associated typekit-specified JSONSchema (https:\/\/json-schema.org\/) that defines the expected shape.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "subresources": {
          "description": "Subresources is the set of subresources within this resource. Support for this field depends on the type of the Resource and is defined by the corresponding Typekit.",
          "type": "array",
          "items": {
            "$ref": "Resource"
          }
        },
        "bindings": {
          "description": "Bindings describe the resources that this resource references. For Ingress Services, this includes Components. For Components, this includes Backing Services. For Backing Services, this is empty.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        }
      }
    },
    "ResourceID": {
      "id": "ResourceID",
      "description": "ResourceID encapsulates the definition of the identity of a resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the name of the resource. This name must be unique within the type.",
          "type": "string"
        },
        "type": {
          "description": "Type is the name of the resource.",
          "type": "string"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Binding describes the edge between the Resource it's defined in and the specified Resource.",
      "type": "object",
      "properties": {
        "targetRef": {
          "description": "TargetRef describes the target resource.",
          "$ref": "ResourceRef"
        },
        "config": {
          "description": "Configuration allows the caller to provide configurations that are either specific to the binding or clarify *how* the binding works. The configuration has an associated typekit-specified JSONSchema (https:\/\/json-schema.org\/) that defines the expected shape.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "ResourceRef": {
      "id": "ResourceRef",
      "description": "ResourceRef encapsulates the definition of a reference to another resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of another resource specified in the config.",
          "$ref": "ResourceID"
        }
      }
    },
    "ApplicationStatus": {
      "id": "ApplicationStatus",
      "description": "Status of the application. Next tag: 7",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the application status, in the following form: `projects\/{project}\/locations\/{location}\/applications\/{application}\/status`",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Time at which the status was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "resources": {
          "description": "The map of resource status where the key is the name of resources and the value is the resource status.",
          "type": "object",
          "additionalProperties": {
            "$ref": "ResourceStatus"
          }
        },
        "createTime": {
          "description": "Output only. Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "Display name",
          "type": "string"
        },
        "annotations": {
          "description": "Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: http:\/\/kubernetes.io\/docs\/user-guide\/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reconciling": {
          "description": "Output only. Indicates whether the resource's reconciliation is still in progress.",
          "readOnly": true,
          "type": "boolean"
        },
        "etag": {
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ResourceStatus": {
      "id": "ResourceStatus",
      "description": "Status for a resource.",
      "type": "object",
      "properties": {
        "routerDetails": {
          "description": "Detail Status of Router resource.",
          "$ref": "RouterStatus"
        },
        "resourceName": {
          "description": "Name of the resource, pulled from the Application Config.",
          "type": "string"
        },
        "type": {
          "description": "Type of resource.",
          "type": "string"
        },
        "state": {
          "description": "The enum state of the resource.",
          "type": "string",
          "enumDescriptions": [
            "The status of this resource is unspecified.",
            "The resource is active.",
            "Some of the components of the resource are not working.",
            "The key components are missing after at least one successful deployment. The user could have manually removed a resource that was deployed.",
            "The resource is being deployed.",
            "Some of the resource's child resources are not in ready state.",
            "The resource is currently not deployed. This could happen if the resource was added to the application config, but was not deployed yet, or the resource was undeployed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "FAILED",
            "MISSING",
            "UPDATING",
            "NOT_READY",
            "NOT_DEPLOYED"
          ]
        },
        "reason": {
          "description": "The reason why this resource is in the current state.",
          "type": "string"
        },
        "resourceComponentStatuses": {
          "description": "Repeated field with status per component created for this resource.",
          "type": "array",
          "items": {
            "$ref": "ResourceComponentStatus"
          }
        },
        "bindingStatus": {
          "description": "The binding status related to this resource.",
          "type": "array",
          "items": {
            "$ref": "BindingStatus"
          }
        },
        "diverged": {
          "description": "Indicates that a child component of this resource has been altered and may not match the expected state.",
          "type": "boolean"
        },
        "consoleLink": {
          "description": "Pantheon link for the resource. For example, the custom domain will link to the GCLB page.",
          "type": "string"
        }
      }
    },
    "RouterStatus": {
      "id": "RouterStatus",
      "description": "Detail Status of Router resource.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "IP Address of the Google Cloud Load Balancer.",
          "type": "string"
        }
      }
    },
    "ResourceComponentStatus": {
      "id": "ResourceComponentStatus",
      "description": "Status for a component of a resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name the resource component. Usually it's the name of the GCP resource, which was used inside the Terraform Resource block that defines it. (e.g. cri-domain-cert)",
          "type": "string"
        },
        "type": {
          "description": "The Terraform Resource Type of the GCP resource (e.g. \"google_compute_managed_ssl_certificate\").",
          "type": "string"
        },
        "state": {
          "description": "The state of the resource component.",
          "type": "string",
          "enumDescriptions": [
            "The status of this component is unspecified.",
            "The component has been deployed.",
            "The component is missing.",
            "The component has been deployed and is provisioning.",
            "The component has been deployed and is working as intended. This is intended for resources that have a health indicator.",
            "The component has failed and the full error message will be populated in the resource."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DEPLOYED",
            "MISSING",
            "PROVISIONING",
            "ACTIVE",
            "FAILED"
          ]
        },
        "reason": {
          "description": "The reason why this resource component to be in its state.",
          "type": "string"
        },
        "diverged": {
          "description": "Indicates that this resource component has been altered and may not match the expected state.",
          "type": "boolean"
        },
        "selfLink": {
          "description": "Fully qualified URL to the object represented by this resource component.",
          "type": "string"
        },
        "consoleLink": {
          "description": "Pantheon link for the resource. This does not exist for every resource that makes up the SAF resource.",
          "type": "string"
        }
      }
    },
    "BindingStatus": {
      "id": "BindingStatus",
      "description": "The binding status of a resource",
      "type": "object",
      "properties": {
        "serviceName": {
          "description": "Name of the Cloud Run service.",
          "type": "string"
        },
        "resourceName": {
          "description": "Name of the binded resource.",
          "type": "string"
        },
        "resourceType": {
          "description": "Type of the binded resource.",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables of the Cloud Run service for the binded resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "Annotations of the Cloud Run service for the binded resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "serviceAccount": {
          "description": "Service account email used by the Cloud Run service for the binded resource.",
          "type": "string"
        }
      }
    },
    "ListDeploymentsResponse": {
      "id": "ListDeploymentsResponse",
      "description": "Message for response to listing Deployments",
      "type": "object",
      "properties": {
        "deployments": {
          "description": "The list of Deployment",
          "type": "array",
          "items": {
            "$ref": "Deployment"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Deployment": {
      "id": "Deployment",
      "description": "Message describing Deployment object Next tag: 14",
      "type": "object",
      "properties": {
        "createSelector": {
          "description": "Optional selectors that should be applied to limit the scope of the deployment creation.",
          "$ref": "Selector"
        },
        "deleteSelector": {
          "description": "Optional selectors that should be applied to limit the scope of the deployment deletion.",
          "$ref": "Selector"
        },
        "name": {
          "description": "Output only. Canonical name of resource",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: http:\/\/kubernetes.io\/docs\/user-guide\/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deleteTime": {
          "description": "Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "application": {
          "description": "Output only. The name of the parent application.",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "Output only. The status of the deployment",
          "readOnly": true,
          "$ref": "DeploymentStatus"
        },
        "dryRun": {
          "description": "The data used for dry run. When this dry run message is set, a dry run deployment will be created. A dry run deployment will not deploy live resources. It will generate change plans that include proposed changes and drift changes. The results will be populated inside the dry run message.",
          "$ref": "DryRun"
        },
        "reconciling": {
          "description": "Output only. Indicates whether the resource's reconciliation is still in progress.",
          "readOnly": true,
          "type": "boolean"
        },
        "etag": {
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Selector": {
      "id": "Selector",
      "description": "Message for selecting the resources within an application. Next tag: 3",
      "type": "object",
      "properties": {
        "matchTypeNames": {
          "description": "match_type_names is a list resource name + type to match. Use '*' or empty string for wildcard either the name or the type. E.g. type='service' name='' will match all services. type='*' name='default' will match all resources named as 'default'.",
          "type": "array",
          "items": {
            "$ref": "TypedName"
          }
        },
        "notTypeNames": {
          "description": "not_type_names excludes the names + types. If a type+name is in this list as well as match_type_names, it will not be selected.",
          "type": "array",
          "items": {
            "$ref": "TypedName"
          }
        }
      }
    },
    "TypedName": {
      "id": "TypedName",
      "description": "TypedName is a resource name + its type. Next tag: 3",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        }
      }
    },
    "DeploymentStatus": {
      "id": "DeploymentStatus",
      "description": "Message to encapsulate the current status of the deployment.",
      "type": "object",
      "properties": {
        "state": {
          "description": "The state associated with the deployment.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Deployment completed with failure.",
            "Deployment completed successfully.",
            "Deployment is running and has not completed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "FAILED",
            "SUCCEEDED",
            "IN_PROGRESS"
          ]
        },
        "errorMessage": {
          "description": "The error message associated with a failed deployment state, if applicable.",
          "type": "string"
        },
        "jobDetails": {
          "description": "Details of each deploy job.",
          "type": "array",
          "items": {
            "$ref": "JobDetails"
          }
        },
        "resourceStatus": {
          "description": "The state of resources that are being deployed. Order is not guaranteed to be stable when deployment is in progress.",
          "type": "array",
          "items": {
            "$ref": "ResourceDeploymentStatus"
          }
        }
      }
    },
    "JobDetails": {
      "id": "JobDetails",
      "description": "Message to encapsulate the current status deployment job.",
      "type": "object",
      "properties": {
        "components": {
          "description": "Components to be actuated by the job.",
          "type": "array",
          "items": {
            "$ref": "JobComponent"
          }
        },
        "jobUri": {
          "description": "URI of deployment job within Google Cloud Console.",
          "type": "string"
        },
        "jobName": {
          "description": "Name of deployment job. Format: projects\/{project}\/locations\/{location}\/builds\/{build}",
          "type": "string"
        },
        "state": {
          "description": "State of deployment job.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Job completed with failure.",
            "Job completed successfully.",
            "Job is running and has not completed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "FAILED",
            "SUCCEEDED",
            "IN_PROGRESS"
          ]
        }
      }
    },
    "JobComponent": {
      "id": "JobComponent",
      "description": "Message to encapsulate component actuated by a job. JobComponent does not represent a GCP API resource.",
      "type": "object",
      "properties": {
        "typedName": {
          "description": "TypedName is the component name and its type.",
          "$ref": "TypedName"
        },
        "operation": {
          "description": "Operation to be performed on component.",
          "type": "string",
          "enumDescriptions": [
            "ComponentOperation unset.",
            "Apply configuration to component.",
            "Destroy component."
          ],
          "enum": [
            "COMPONENT_OPERATION_UNSPECIFIED",
            "APPLY",
            "DESTROY"
          ]
        }
      }
    },
    "ResourceDeploymentStatus": {
      "id": "ResourceDeploymentStatus",
      "description": "Message decribing the status of a resource being deployed. Next tag: 5",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource.",
          "$ref": "TypedName"
        },
        "state": {
          "description": "Current status of the resource.",
          "type": "string",
          "enumDescriptions": [
            "Default value indicating the state is unknown.",
            "Resource queued for deployment.",
            "Deployment in progress.",
            "Deployment completed.",
            "Deployment completed successfully.",
            "Deployment completed with failure."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "RUNNING",
            "FINISHED",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "operation": {
          "description": "Operation to be performed on the resource .",
          "type": "string",
          "enumDescriptions": [
            "Default value indicating the operation is unknown.",
            "Apply configuration to resource.",
            "Destroy resource."
          ],
          "enum": [
            "OPERATION_UNSPECIFIED",
            "APPLY",
            "DESTROY"
          ]
        },
        "errorMessage": {
          "description": "The error details if the state is FAILED.",
          "type": "string"
        }
      }
    },
    "DryRun": {
      "id": "DryRun",
      "description": "Message describing the dry run deployment options and outputs.",
      "type": "object",
      "properties": {
        "useParent": {
          "description": "Indicates whether to use the parent application for dry run execution.",
          "type": "boolean"
        },
        "applicationConfig": {
          "description": "The Application Config to run the dry run on.",
          "$ref": "Config"
        },
        "resourceDrift": {
          "description": "Output only. Changes that were made externally since the previous non-dry run deployment.",
          "readOnly": true,
          "$ref": "DryRunChanges"
        },
        "resourceChanges": {
          "description": "Output only. Resulting changes as a result of the provided dry run Application Config.",
          "readOnly": true,
          "$ref": "DryRunChanges"
        }
      }
    },
    "DryRunChanges": {
      "id": "DryRunChanges",
      "description": "Message describing proposed changes from dry run.",
      "type": "object",
      "properties": {
        "hasChanges": {
          "description": "Whether there are changes.",
          "type": "boolean"
        },
        "textOutput": {
          "description": "Formatted output of the changes. Same format as the terraform plan output.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "verb": {
          "description": "Name of the verb executed by the operation.",
          "type": "string"
        },
        "statusMessage": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "API version used to start the operation.",
          "type": "string"
        }
      }
    },
    "DeploymentOperationMetadata": {
      "id": "DeploymentOperationMetadata",
      "description": "Operation metadata for Deployment.Create. Next tag: 8",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time this operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time this operation ended or empty if it is still active.",
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Resource path for the target resource of the operation.",
          "type": "string"
        },
        "verb": {
          "description": "The verb associated with the API method which triggered this operation.",
          "type": "string"
        },
        "cancelRequested": {
          "description": "Is cancelation requested for this operation.",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "The API version which triggered this operation.",
          "type": "string"
        },
        "resourceStatus": {
          "description": "The ongoinging state of resources that are being deployed. Order is not guaranteed to be stable between multiple reads of the same ongoing operation.",
          "type": "array",
          "items": {
            "$ref": "ResourceDeploymentStatus"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "runapps.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "runapps.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "runapps.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "runapps.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "runapps.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "runapps.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "applications": {
              "methods": {
                "list": {
                  "id": "runapps.projects.locations.applications.list",
                  "path": "v1alpha1/{+parent}/applications",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListApplicationsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListApplicationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Applications in a given project and location."
                },
                "get": {
                  "id": "runapps.projects.locations.applications.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Application"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Application."
                },
                "create": {
                  "id": "runapps.projects.locations.applications.create",
                  "path": "v1alpha1/{+parent}/applications",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "applicationId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and application_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Application"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Application in a given project and location."
                },
                "patch": {
                  "id": "runapps.projects.locations.applications.patch",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the Application resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Application"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Application."
                },
                "delete": {
                  "id": "runapps.projects.locations.applications.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "If set to true, any child deployments of this application will also be deleted. Followed the best practice from https:\/\/aip.dev\/135#cascading-delete",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Application."
                },
                "getStatus": {
                  "id": "runapps.projects.locations.applications.getStatus",
                  "path": "v1alpha1/{+name}/status",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}/status",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "readMask": {
                      "description": "Field mask used for limiting the resources to query status on.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ApplicationStatus"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets status of a single Application."
                }
              }
              ,
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "id": "runapps.projects.locations.applications.deployments.list",
                      "path": "v1alpha1/{+parent}/deployments",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}/deployments",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent value for ListDeploymentsRequest",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results the server should return.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filtering results",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Hint for how to order the results",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListDeploymentsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Deployments in a given project and location."
                    },
                    "get": {
                      "id": "runapps.projects.locations.applications.deployments.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}/deployments/{deploymentsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+\/deployments\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Deployment"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Deployment."
                    },
                    "create": {
                      "id": "runapps.projects.locations.applications.deployments.create",
                      "path": "v1alpha1/{+parent}/deployments",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/applications/{applicationsId}/deployments",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. Value for parent.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/applications\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "deploymentId": {
                          "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and deployment_id from the method_signature of Create RPC",
                          "location": "query",
                          "type": "string"
                        },
                        "validateOnly": {
                          "description": "If true, the Create request will just do a dry run of the deploy instead of actuating anything.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "requestId": {
                          "description": "An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Deployment"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new Deployment in a given project and location."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}