{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "networkservices:v1",
  "name": "networkservices",
  "canonicalName": "NetworkServices",
  "version": "v1",
  "revision": "0",
  "title": "Network Services API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/networking",
  "protocol": "rest",
  "rootUrl": "https://networkservices.googleapis.com/",
  "mtlsRootUrl": "https://networkservices.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://networkservices.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListMulticastGroupsResponse": {
      "id": "ListMulticastGroupsResponse",
      "description": "Message for response to listing MulticastGroups",
      "type": "object",
      "properties": {
        "multicastGroups": {
          "description": "The list of MulticastGroup",
          "type": "array",
          "items": {
            "$ref": "MulticastGroup"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MulticastGroup": {
      "id": "MulticastGroup",
      "description": "Message describing MulticastGroup object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "domainActivation": {
          "description": "Reference to the domain activation in the same zone as the group.",
          "type": "string"
        }
      }
    },
    "ListMulticastGroupDefinitionsResponse": {
      "id": "ListMulticastGroupDefinitionsResponse",
      "description": "Message for response to listing MulticastGroupDefinitions",
      "type": "object",
      "properties": {
        "multicastGroupDefinitions": {
          "description": "The list of MulticastGroupDefinition",
          "type": "array",
          "items": {
            "$ref": "MulticastGroupDefinition"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MulticastGroupDefinition": {
      "id": "MulticastGroupDefinition",
      "description": "Message describing MulticastGroupDefinition object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ListMulticastDomainsResponse": {
      "id": "ListMulticastDomainsResponse",
      "description": "Message for response to listing MulticastDomains",
      "type": "object",
      "properties": {
        "multicastDomains": {
          "description": "The list of MulticastDomain",
          "type": "array",
          "items": {
            "$ref": "MulticastDomain"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MulticastDomain": {
      "id": "MulticastDomain",
      "description": "Message describing MulticastDomain object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ListMulticastDomainActivationsResponse": {
      "id": "ListMulticastDomainActivationsResponse",
      "description": "Message for response to listing MulticastDomainActivations",
      "type": "object",
      "properties": {
        "multicastDomainActivations": {
          "description": "The list of MulticastDomainActivation",
          "type": "array",
          "items": {
            "$ref": "MulticastDomainActivation"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MulticastDomainActivation": {
      "id": "MulticastDomainActivation",
      "description": "Message describing MulticastDomainActivation object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "domain": {
          "description": "Reference to the domain that is being activated.",
          "type": "string"
        }
      }
    },
    "ListMulticastConsumerAssociationsResponse": {
      "id": "ListMulticastConsumerAssociationsResponse",
      "description": "Message for response to listing MulticastConsumerAssociations",
      "type": "object",
      "properties": {
        "multicastConsumerAssociations": {
          "description": "The list of MulticastConsumerAssociation",
          "type": "array",
          "items": {
            "$ref": "MulticastConsumerAssociation"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MulticastConsumerAssociation": {
      "id": "MulticastConsumerAssociation",
      "description": "Message describing MulticastConsumerAssociation object",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of resource",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. [Output only] Create time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. [Output only] Update time stamp",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels as key value pairs",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "multicastGroup": {
          "description": "Reference to the multicast group",
          "type": "string"
        },
        "network": {
          "description": "Reference to the network",
          "type": "string"
        }
      }
    },
    "ListEndpointPoliciesResponse": {
      "id": "ListEndpointPoliciesResponse",
      "description": "Response returned by the ListEndpointPolicies method.",
      "type": "object",
      "properties": {
        "endpointPolicies": {
          "description": "List of EndpointPolicy resources.",
          "type": "array",
          "items": {
            "$ref": "EndpointPolicy"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "EndpointPolicy": {
      "id": "EndpointPolicy",
      "description": "EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match specific criteria. For example, this resource can be used to apply \"authentication config\" an all endpoints that serve on port 8080.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the EndpointPolicy resource. It matches pattern `projects\/{project}\/locations\/global\/endpointPolicies\/{endpoint_policy}`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the EndpointPolicy resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "Required. The type of endpoint policy. This is primarily used to validate the configuration.",
          "type": "string",
          "enumDescriptions": [
            "Default value. Must not be used.",
            "Represents a proxy deployed as a sidecar.",
            "Represents a proxyless gRPC backend."
          ],
          "enum": [
            "ENDPOINT_POLICY_TYPE_UNSPECIFIED",
            "SIDECAR_PROXY",
            "GRPC_SERVER"
          ]
        },
        "authorizationPolicy": {
          "description": "Optional. This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization. If this field is not specified, authorization is disabled(no authz checks) for this endpoint.",
          "type": "string"
        },
        "endpointMatcher": {
          "description": "Required. A matcher that selects endpoints to which the policies should be applied.",
          "$ref": "EndpointMatcher"
        },
        "trafficPortSelector": {
          "description": "Optional. Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.",
          "$ref": "TrafficPortSelector"
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        },
        "serverTlsPolicy": {
          "description": "Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends. If this field is not set, authentication is disabled(open) for this endpoint.",
          "type": "string"
        },
        "clientTlsPolicy": {
          "description": "Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints. More specifically, it is applied to the outgoing traffic from the proxy to the endpoint. This is typically used for sidecar model where the proxy identifies itself as endpoint to the control plane, with the connection between sidecar and endpoint requiring authentication. If this field is not set, authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY.",
          "type": "string"
        }
      }
    },
    "EndpointMatcher": {
      "id": "EndpointMatcher",
      "description": "A definition of a matcher that selects endpoints to which the policies should be applied.",
      "type": "object",
      "properties": {
        "metadataLabelMatcher": {
          "description": "The matcher is based on node metadata presented by xDS clients.",
          "$ref": "EndpointMatcherMetadataLabelMatcher"
        }
      }
    },
    "EndpointMatcherMetadataLabelMatcher": {
      "id": "EndpointMatcherMetadataLabelMatcher",
      "description": "The matcher that is based on node metadata presented by xDS clients.",
      "type": "object",
      "properties": {
        "metadataLabelMatchCriteria": {
          "description": "Specifies how matching should be done. Supported values are: MATCH_ANY: At least one of the Labels specified in the matcher should match the metadata presented by xDS client. MATCH_ALL: The metadata presented by the xDS client should contain all of the labels specified here. The selection is determined based on the best match. For example, suppose there are three EndpointPolicy resources P1, P2 and P3 and if P1 has a the matcher as MATCH_ANY , P2 has MATCH_ALL , and P3 has MATCH_ALL . If a client with label connects, the config from P1 will be selected. If a client with label connects, the config from P2 will be selected. If a client with label connects, the config from P3 will be selected. If there is more than one best match, (for example, if a config P4 with selector exists and if a client with label connects), an error will be thrown.",
          "type": "string",
          "enumDescriptions": [
            "Default value. Should not be used.",
            "At least one of the Labels specified in the matcher should match the metadata presented by xDS client.",
            "The metadata presented by the xDS client should contain all of the labels specified here."
          ],
          "enum": [
            "METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED",
            "MATCH_ANY",
            "MATCH_ALL"
          ]
        },
        "metadataLabels": {
          "description": "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list can have at most 64 entries. The list can be empty if the match criteria is MATCH_ANY, to specify a wildcard match (i.e this matches any client).",
          "type": "array",
          "items": {
            "$ref": "EndpointMatcherMetadataLabelMatcherMetadataLabels"
          }
        }
      }
    },
    "EndpointMatcherMetadataLabelMatcherMetadataLabels": {
      "id": "EndpointMatcherMetadataLabelMatcherMetadataLabels",
      "description": "Defines a name-pair value for a single label.",
      "type": "object",
      "properties": {
        "labelName": {
          "description": "Required. Label name presented as key in xDS Node Metadata.",
          "type": "string"
        },
        "labelValue": {
          "description": "Required. Label value presented as value corresponding to the above key, in xDS Node Metadata.",
          "type": "string"
        }
      }
    },
    "TrafficPortSelector": {
      "id": "TrafficPortSelector",
      "description": "Specification of a port-based selector.",
      "type": "object",
      "properties": {
        "ports": {
          "description": "Optional. A list of ports. Can be port numbers or port range (example, [80-90] specifies all ports from 80 to 90, including 80 and 90) or named ports or * to specify all ports. If the list is empty, all ports are selected.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListEdgeCacheKeysetsResponse": {
      "id": "ListEdgeCacheKeysetsResponse",
      "description": "The response returned by the `ListEdgeCacheKeysets` method.",
      "type": "object",
      "properties": {
        "edgeCacheKeysets": {
          "description": "A list of `EdgeCacheKeyset` resources.",
          "type": "array",
          "items": {
            "$ref": "EdgeCacheKeyset"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as page_token.",
          "type": "string"
        }
      }
    },
    "EdgeCacheKeyset": {
      "id": "EdgeCacheKeyset",
      "description": "Represents a collection of public keys used for validating signed requests.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the resource as provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression `[a-zA-Z]([a-zA-Z0-9_-])*` which means the first character must be a letter, and all following characters must be a dash, an underscore, a letter, or a digit.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The update timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Optional. A human-readable description of the resource.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. A set of label tags associated with the EdgeCacheKeyset resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "publicKeys": {
          "description": "Optional. An ordered list of Ed25519 public keys to use for validating signed requests. Ed25519 public keys are not secret and only allow Google to validate that a request was signed by your corresponding private key. Ensure that the private key is kept secret and that only authorized users can add public keys to a keyset. You can rotate keys by appending (pushing) a new key to the list of public keys, and removing any superseded keys. You must specify `public_keys` or validation_shared_keys (or both). The keys in `public_keys` are checked first. You can specify at most one Google-managed public key. If you specify `public_keys`, you must specify at least one key and can specify up to three keys.",
          "type": "array",
          "items": {
            "$ref": "PublicKey"
          }
        },
        "validationSharedKeys": {
          "description": "Optional. An ordered list of shared keys to use for validating signed requests. Shared keys are secret. Ensure that only authorized users can add `validation_shared_keys` to a keyset. You can rotate keys by appending (pushing) a new key to the list of `validation_shared_keys` and removing any superseded keys. You must specify public_keys or `validation_shared_keys` (or both). The keys in `public_keys` are checked first. If you specify `validation_shared_keys`, you must specify at least one key and can specify up to three keys.",
          "type": "array",
          "items": {
            "$ref": "Secret"
          }
        }
      }
    },
    "PublicKey": {
      "id": "PublicKey",
      "description": "An Ed25519 public key used for validating signed requests.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. The ID of the public key. The ID must be 1-64 characters long, and match the regular expression `[a-zA-Z]([a-zA-Z0-9_-])*` which means the first character must be a letter, and all following characters must be a dash, an underscore, a letter, or a digit.",
          "type": "string"
        },
        "value": {
          "description": "Optional. The base64-encoded value of the Ed25519 public key. The base64 encoding can be padded (44 bytes) or unpadded (43 bytes). Representations or encodings of the public key other than this are rejected with an error. Either `value` or `managed` must be specified.",
          "type": "string"
        },
        "managed": {
          "description": "Optional. Set to `true` to have the CDN automatically manage this public key. Managed keys are used by the CDN for dual-token authentication. Media CDN internally generates, uses, and rotates the underlying public and private key pair. It is not possible to use a managed key outside of dual-token authentication. Either `value` or `managed` must be specified.",
          "type": "boolean"
        }
      }
    },
    "Secret": {
      "id": "Secret",
      "description": "A secret key stored in Secret Manager.",
      "type": "object",
      "properties": {
        "secretVersion": {
          "description": "Required. The name of the secret in Secret Manager. The resource name of the secret version must be in the format `projects\/*\/secrets\/*\/versions\/*` where the `*` values are replaced by the name of the secret. The secrets must be at least 16 bytes. The recommended secret size depends on the signature algorithm that you're using. * If you're using `HMAC-SHA1`, we recommend 20-byte secrets. * If you're using `HMAC-SHA256`, we recommend 32-byte secrets. See RFC 2104, Section 3 for more details on these recommendations.",
          "type": "string"
        }
      }
    },
    "ListEdgeCacheOriginsResponse": {
      "id": "ListEdgeCacheOriginsResponse",
      "description": "The response returned by the `ListEdgeCacheOrigins` method.",
      "type": "object",
      "properties": {
        "edgeCacheOrigins": {
          "description": "A list of `EdgeCacheOrigin` resources.",
          "type": "array",
          "items": {
            "$ref": "EdgeCacheOrigin"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as page_token.",
          "type": "string"
        }
      }
    },
    "EdgeCacheOrigin": {
      "id": "EdgeCacheOrigin",
      "description": "Represents an HTTP-reachable backend for an `EdgeCacheService` resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the resource as provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression `[a-zA-Z]([a-zA-Z0-9_-])*`, which means that the first character must be a letter, and all following characters must be a dash, an underscore, a letter, or a digit.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The update timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Optional. A human-readable description of the resource.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. A set of label tags associated with the EdgeCacheOrigin resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "originAddress": {
          "description": "Required. A fully qualified domain name (FQDN), an IPv4 or IPv6 address reachable over the public internet, or the address of a Google Cloud Storage bucket. This address is used as the origin for cache requests. The following are example origins: - **FQDN**: `media-backend.example.com` - **IPv4**: `35.218.1.1` - **IPv6**: `2607:f8b0:4012:809::200e` - **Google Cloud Storage**: `gs:\/\/bucketname` or `bucketname.storage.googleapis.com` The following limitations apply to fully-qualified domain names: * They must be resolvable through public DNS. * They must not contain a protocol (such as `https:\/\/`). * They must not contain any slashes. When providing an IP address, it must be publicly routable. IPv6 addresses must not be enclosed in square brackets.",
          "type": "string"
        },
        "protocol": {
          "description": "Optional. The protocol to use to connect to the configured origin. Defaults to HTTP2, which is strongly recommended for both security and performance. When using HTTP2 or HTTPS as the protocol, a valid, publicly-signed, unexpired TLS (SSL) certificate must be presented by the origin server.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value. Defaults to HTTP2.",
            "The HTTP\/2 protocol. HTTP\/2 refers to \"h2\", which requires TLS (HTTPS). Requires a valid (public and unexpired) TLS certificate present on the origin.",
            "HTTP\/1.1 with TLS (SSL). Requires a valid (public and unexpired) TLS certificate present on the origin.",
            "HTTP without TLS (SSL). This is not recommended, because communication outside of Google's network is unencrypted to the public endpoint (origin)."
          ],
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "HTTP2",
            "HTTPS",
            "HTTP"
          ]
        },
        "port": {
          "description": "Optional. The port to connect to the origin on. Defaults to port **443** for HTTP2 and HTTPS protocols and port **80** for HTTP.",
          "type": "integer",
          "format": "int32"
        },
        "maxAttempts": {
          "description": "Optional. The maximum number of attempts to cache fill from this origin. Another attempt is made when a cache fill fails with one of the retry_conditions or following a redirect response matching one of the origin_redirect.redirect_conditions. Once the maximum attempts to this origin have failed, the failover origin][], if specified, is used. The failover origin can have its own `max_attempts`, `retry_conditions`, `redirect_conditions`, and `failover_origin` values to control its cache fill failures. The total number of allowed attempts to cache fill across this and failover origins is limited to four. The total time allowed for cache fill attempts across this and failover origins can be controlled with `max_attempts_timeout`. The last valid, non-retried response from all origins is returned to the client. If no origin returns a valid response, an `HTTP 502` error is returned to the client. Defaults to 1. Must be a value greater than 0 and less than 5.",
          "type": "integer",
          "format": "int32"
        },
        "failoverOrigin": {
          "description": "Optional. The EdgeCacheOrigin resource to try when the current origin cannot be reached. After max_attempts is reached, the configured failover_origin is used to fulfil the request. The following are both valid paths to an `EdgeCacheOrigin` resource: * `projects\/my-project\/locations\/global\/edgeCacheOrigins\/my-origin` * `my-origin` The value of max_attempts_timeout dictates the timeout across all origins.",
          "type": "string"
        },
        "retryConditions": {
          "description": "Optional. Specifies one or more retry conditions for the configured origin. If the failure mode during a connection attempt to the origin matches the configured `retryConditions` values, the origin request retries up to max_attempts times. The failover origin, if configured, is then used to satisfy the request. The default `retry_conditions` value is `CONNECT_FAILURE`. `retry_conditions` values apply to this origin, and not to subsequent failover origins, which can specify their own `retry_conditions` and `max_attempts` values. For a list of valid values, see RetryConditions.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified",
              "Retry on failures connecting to origins include routing, DNS and TLS handshake errors, and TCP\/UDP timeouts.",
              "Retry if the origin responds with any `HTTP 5xx` response code.",
              "Similar to `5xx`, but only applies to HTTP response codes `502`, `503`, or `504`.",
              "Retry for retriable `4xx` response codes, which include `HTTP 409 (Conflict)` and `HTTP 429 (Too Many Requests)`.",
              "Retry if the origin returns an `HTTP 404 (Not Found)` error. This can be useful when generating video content when the segment is not yet available.",
              "Retry if the origin returns an `HTTP 403 (Forbidden)` error. This can be useful for origins that return `403` (instead of `404`) for missing content for security reasons."
            ],
            "enum": [
              "RETRY_CONDITIONS_UNSPECIFIED",
              "CONNECT_FAILURE",
              "HTTP_5XX",
              "GATEWAY_ERROR",
              "RETRIABLE_4XX",
              "NOT_FOUND",
              "FORBIDDEN"
            ]
          }
        },
        "timeout": {
          "description": "Optional. The connection and HTTP timeout configuration for this origin.",
          "$ref": "Timeout"
        },
        "awsV4Authentication": {
          "description": "Optional. Enable AWS Signature Version 4 origin authentication.",
          "$ref": "AWSV4Signature"
        },
        "originOverrideAction": {
          "description": "Optional. The override actions, including URL rewrites and header additions, for requests that use this origin.",
          "$ref": "OriginOverrideAction"
        },
        "originRedirect": {
          "description": "Optional. Follow redirects from this origin.",
          "$ref": "OriginRedirect"
        }
      }
    },
    "Timeout": {
      "id": "Timeout",
      "description": "The timeout configuration for this origin.",
      "type": "object",
      "properties": {
        "connectTimeout": {
          "description": "Optional. The maximum duration to wait for a single origin connection to be established, including DNS lookup, TLS handshake, and TCP\/QUIC connection establishment. Defaults to 5 seconds. The timeout must be a value between 1s and 15s. The `connect_timeout` capped by the deadline set by the request's max_attempts_timeout. The last connection attempt can have a smaller `connect_timeout` so that the total `max_attempts_timeout` value is not exceeded.",
          "type": "string",
          "format": "google-duration"
        },
        "maxAttemptsTimeout": {
          "description": "Optional. The maximum time across all connection attempts to all origins, including failover origins, before returning an error to the client. An `HTTP 504` error is returned if the timeout is reached before a response is returned. Defaults to 15 seconds. The timeout must be a value between 1s and 30s. If a failover origin is specified, the `max_attempts_timeout` value of the first configured origin sets the deadline for all connection attempts across all failover origins.",
          "type": "string",
          "format": "google-duration"
        },
        "responseTimeout": {
          "description": "Optional. The maximum duration to wait for the last byte of a response to arrive when reading from the HTTP connection\/stream. Defaults to 30 seconds. The timeout must be a value between 1s and 120s. The `response_timeout` starts after the connection has been established. Origins that take longer to write additional bytes to the response than the configured `response_timeout` value result in an error returned to the client. If the response headers have already been written to the connection, the response is truncated and logged.",
          "type": "string",
          "format": "google-duration"
        },
        "readTimeout": {
          "description": "Optional. The maximum duration to wait between reads of a single HTTP connection or stream. Defaults to 15 seconds. The timeout must be a value between 1s and 30s. The `read_timeout` value is capped by the response_timeout value. All reads of the HTTP connection or stream must be completed by the deadline set by response_timeout. If the response headers have already been written to the connection, the response is truncated and logged.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "AWSV4Signature": {
      "id": "AWSV4Signature",
      "description": "The configuration needed to generate an AWS V4 Signature",
      "type": "object",
      "properties": {
        "accessKeyId": {
          "description": "Required. The access key ID that your origin uses to identify the key.",
          "type": "string"
        },
        "secretAccessKeyVersion": {
          "description": "Required. The Secret Manager secret version of the secret access key used by your origin. This is the resource name of the secret version in the format `projects\/*\/secrets\/*\/versions\/*` where the `*` values are replaced by the project, the secret, and the version that you require.",
          "type": "string"
        },
        "originRegion": {
          "description": "Required. The name of the AWS region that your origin is in.",
          "type": "string"
        }
      }
    },
    "OriginOverrideAction": {
      "id": "OriginOverrideAction",
      "description": "Defines how requests and responses can be manipulated on cache fill to this origin.",
      "type": "object",
      "properties": {
        "urlRewrite": {
          "description": "Optional. The URL rewrite configuration for requests that are handled by this origin.",
          "$ref": "OriginUrlRewrite"
        },
        "headerAction": {
          "description": "Optional. The header actions, including adding and removing headers, for requests handled by this origin.",
          "$ref": "OriginHeaderAction"
        }
      }
    },
    "OriginUrlRewrite": {
      "id": "OriginUrlRewrite",
      "description": "The URL rewrite configuration for a given request handled by this origin.",
      "type": "object",
      "properties": {
        "hostRewrite": {
          "description": "Optional. Before forwarding the request to the selected origin, the request's `Host` header is replaced with the contents of `hostRewrite`. The host value must be between 1 and 255 characters.",
          "type": "string"
        }
      }
    },
    "OriginHeaderAction": {
      "id": "OriginHeaderAction",
      "description": "Defines the addition and removal of HTTP headers for requests\/responses.",
      "type": "object",
      "properties": {
        "requestHeadersToAdd": {
          "description": "Optional. A header to add. You can add a maximum of 25 request headers.",
          "type": "array",
          "items": {
            "$ref": "OriginHeaderActionAddHeader"
          }
        }
      }
    },
    "OriginHeaderActionAddHeader": {
      "id": "OriginHeaderActionAddHeader",
      "description": "Describes a header to add.",
      "type": "object",
      "properties": {
        "headerName": {
          "description": "Required. The name of the header to add.",
          "type": "string"
        },
        "headerValue": {
          "description": "Required. The value of the header to add.",
          "type": "string"
        },
        "replace": {
          "description": "Optional. Specifies whether to replace all existing headers with the same name. By default, added header values are appended to the response or request headers with the same field names. The added values are separated by commas. To overwrite existing values, set `replace` to `true`.",
          "type": "boolean"
        }
      }
    },
    "OriginRedirect": {
      "id": "OriginRedirect",
      "description": "The options for following redirects from the origin.",
      "type": "object",
      "properties": {
        "redirectConditions": {
          "description": "Optional. The set of HTTP redirect response codes that the CDN follows.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "It is an error to specify `REDIRECT_CONDITIONS_UNSPECIFIED`.",
              "Follow redirect on an `HTTP 301` error.",
              "Follow redirect on an `HTTP 302` error.",
              "Follow redirect on an `HTTP 303` error.",
              "Follow redirect on an `HTTP 307` error.",
              "Follow redirect on an `HTTP 308` error."
            ],
            "enum": [
              "REDIRECT_CONDITIONS_UNSPECIFIED",
              "MOVED_PERMANENTLY",
              "FOUND",
              "SEE_OTHER",
              "TEMPORARY_REDIRECT",
              "PERMANENT_REDIRECT"
            ]
          }
        }
      }
    },
    "ListEdgeCacheServicesResponse": {
      "id": "ListEdgeCacheServicesResponse",
      "description": "Response returned by the `list` method.",
      "type": "object",
      "properties": {
        "edgeCacheServices": {
          "description": "The list of EdgeCacheService resources.",
          "type": "array",
          "items": {
            "$ref": "EdgeCacheService"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as page_token.",
          "type": "string"
        }
      }
    },
    "EdgeCacheService": {
      "id": "EdgeCacheService",
      "description": "Defines the IP addresses, protocols, security policies, cache policies, and routing configuration.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the resource as provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression `[a-zA-Z]([a-zA-Z0-9_-])*` which means the first character must be a letter, and all following characters must be a dash, an underscore, a letter, or a digit.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The update timestamp in RFC3339 text format.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Optional. A human-readable description of the resource.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. A set of label tags associated with the `EdgeCacheService` resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "disableQuic": {
          "description": "Optional. HTTP\/3 (IETF QUIC) and Google QUIC are enabled by default.",
          "type": "boolean"
        },
        "disableHttp2": {
          "description": "Optional. Disables HTTP\/2. HTTP\/2 (h2) is enabled by default and recommended for performance. HTTP\/2 improves connection re-use and reduces connection setup overhead by sending multiple streams over the same connection. Some legacy HTTP clients might have issues with HTTP\/2 connections due to broken HTTP\/2 implementations. Setting this to `true` prevents HTTP\/2 from being advertised and negotiated.",
          "type": "boolean"
        },
        "requireTls": {
          "description": "Optional. Require TLS (HTTPS) for all clients connecting to this service. Clients who connect over HTTP (port 80) see an `HTTP 301` response to the same URL over HTTPS (port 443). You must have at least one edge_ssl_certificates specified to enable this.",
          "type": "boolean"
        },
        "edgeSslCertificates": {
          "description": "Optional. Certificate resources that are used to authenticate connections between users and the EdgeCacheService resource. Note that only global certificates with a scope of `EDGE_CACHE` can be attached to an EdgeCacheService resource. The following are both valid paths to an `edge_ssl_certificates` resource: * `projects\/project\/locations\/global\/certificates\/media-example-com-cert` * `media-example-com-cert` You can specify up to five SSL certificates.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipv4Addresses": {
          "description": "Output only. The IPv4 addresses associated with this service. Addresses are static for the lifetime of the service. IP addresses provisioned via Bring-Your-Own-IP (BYOIP) are not supported.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipv6Addresses": {
          "description": "Output only. The IPv6 addresses associated with this service. Addresses are static for the lifetime of the service. IP addresses provisioned via Bring-Your-Own-IP (BYOIP) are not supported.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "routing": {
          "description": "Required. Defines how requests are routed, modified, and cached, and which origin the content is filled from.",
          "$ref": "Routing"
        },
        "logConfig": {
          "description": "Optional. The logging options for the traffic served by this service. If logging is enabled, logs are exported to Cloud Logging.",
          "$ref": "LogConfig"
        },
        "edgeSecurityPolicy": {
          "description": "Optional. The resource URL that points at the Cloud Armor edge security policy that is applied on each request against the EdgeCacheService resource.",
          "type": "string"
        }
      }
    },
    "Routing": {
      "id": "Routing",
      "description": "Defines how requests are routed, modified, cached, and which origin the content is filled from.",
      "type": "object",
      "properties": {
        "hostRules": {
          "description": "Required. A list of HostRule rules to match against. `RouteRule` rules support advanced routing behavior, and can match on paths, headers and query parameters, as well as status codes and HTTP methods. You can specify up to five host rules.",
          "type": "array",
          "items": {
            "$ref": "HostRule"
          }
        },
        "pathMatchers": {
          "description": "Required. A list of PathMatcher values referenced by name by HostRule values. `PathMatcher` is used to match the path portion of the URL when a`HostRule` value matches the URL's host portion. You can specify up to 10 path matchers.",
          "type": "array",
          "items": {
            "$ref": "PathMatcher"
          }
        }
      }
    },
    "HostRule": {
      "id": "HostRule",
      "description": "The hostname configured for the EdgeCacheService. A `HostRule` value associates a hostname (or hostnames) with a set of routing rules, which define configuration based on the path and header.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Optional. A human-readable description of the `HostRule` value.",
          "type": "string"
        },
        "hosts": {
          "description": "Required. A list of host patterns to match. Host patterns must be valid hostnames. Ports are not allowed. Wildcard hosts are supported in the suffix or prefix form. `*` matches any string of `([a-z0-9-.]*)`. It does not match an empty string. When multiple hosts are specified, hosts are matched in the following priority: 1. Exact domain names: `www.foo.com`. 2. Suffix domain wildcards: `*.foo.com` or `*-bar.foo.com`. 3. Prefix domain wildcards: `foo.*` or `foo-*`. 4. Special wildcard `*` matching any domain. The wildcard doesn't match the empty string. For example, `*-bar.foo.com` matches `baz-bar.foo.com` but not `-bar.foo.com`. The longest wildcards match first. Only a single host in the entire service can match on ``*``. A domain must be unique across all configured hosts within a service. Hosts are matched against the HTTP `Host` header, or for HTTP\/2 and HTTP\/3, the `:authority` header, in the incoming request. You can specify up to 10 hosts.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pathMatcher": {
          "description": "Required. The name of the PathMatcher associated with this `HostRule`.",
          "type": "string"
        }
      }
    },
    "PathMatcher": {
      "id": "PathMatcher",
      "description": "The name of the `PathMatcher` to use to match the path portion of the URL if the HostRule matches the URL's host portion.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name to which this `PathMatcher` is referred by the HostRule.",
          "type": "string"
        },
        "description": {
          "description": "Optional. A human-readable description of the resource.",
          "type": "string"
        },
        "routeRules": {
          "description": "Required. A list of RouteRule rules to match against. `RouteRule` rules support advanced routing behavior, and can match on paths, headers and query parameters, as well as status codes and HTTP methods. You must specify at least one rule, and can specify a maximum of 64 rules. `RouteRule` rules must not have duplicate priority values.",
          "type": "array",
          "items": {
            "$ref": "RouteRule"
          }
        }
      }
    },
    "RouteRule": {
      "id": "RouteRule",
      "description": "The priority of a given route, including its match conditions and the actions to take on a request that matches.",
      "type": "object",
      "properties": {
        "origin": {
          "description": "Optional. An alternate EdgeCacheOrigin resource that this route responds with when a matching response is not in the cache. The following are both valid paths to an `EdgeCacheOrigin` resource: * `projects\/my-project\/locations\/global\/edgeCacheOrigins\/my-origin` * `my-origin` Only one of `origin` or url_redirect can be set.",
          "type": "string"
        },
        "urlRedirect": {
          "description": "Optional. The URL redirect configuration for requests that match this route. Only one of origin or `url_redirect` can be set.",
          "$ref": "UrlRedirect"
        },
        "priority": {
          "description": "Required. The priority of this route rule, where `1` is the highest priority. You cannot configure two or more `RouteRules` with the same priority. Priority for each rule must be set to a number between 1 and 999 inclusive. Priority numbers can have gaps, which enable you to add or remove rules in the future without affecting the rest of the rules. For example, `1, 2, 3, 4, 5, 9, 12, 16` is a valid series of priority numbers to which you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the future without any impact on existing rules.",
          "type": "string",
          "format": "int64"
        },
        "description": {
          "description": "Optional. A human-readable description of the `RouteRule`.",
          "type": "string"
        },
        "matchRules": {
          "description": "Required. The list of criteria for matching attributes of a request to this `RouteRule`. This list has `OR` semantics: the request matches this `RouteRule` when any of the MatchRules are satisfied. However, predicates within a given `MatchRule` have `AND` semantics. All predicates within a `MatchRule` must match for the request to match the rule. You can specify up to five match rules.",
          "type": "array",
          "items": {
            "$ref": "MatchRule"
          }
        },
        "headerAction": {
          "description": "Optional. The header actions, including adding and removing headers, for requests that match this route.",
          "$ref": "HeaderAction"
        },
        "routeAction": {
          "description": "Optional. In response to a matching path, the RouteAction performs advanced routing actions like URL rewrites, header transformations, and so forth prior to forwarding the request to the selected origin.",
          "$ref": "RouteAction"
        }
      }
    },
    "UrlRedirect": {
      "id": "UrlRedirect",
      "description": "The HTTP redirect configuration for a given request.",
      "type": "object",
      "properties": {
        "pathRedirect": {
          "description": "Optional. The path that is used in the redirect response instead of the one that was supplied in the request. `path_redirect` cannot be supplied together with prefix_redirect. Supply one alone or neither. If neither is supplied, the path of the original request is used for the redirect. The path value must be between 1 and 1024 characters.",
          "type": "string"
        },
        "prefixRedirect": {
          "description": "Optional. The prefix that replaces the prefix_match specified in the RouteRule rule, retaining the remaining portion of the URL before redirecting the request. `prefix_redirect` cannot be supplied together with path_redirect. Supply one alone or neither. If neither is supplied, the path of the original request is used for the redirect. The prefix value must be between 1 and 1024 characters.",
          "type": "string"
        },
        "hostRedirect": {
          "description": "Optional. The host that is used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
          "type": "string"
        },
        "redirectResponseCode": {
          "description": "Optional. The HTTP status code to use for this redirect action. For a list of supported values, see RedirectResponseCode.",
          "type": "string",
          "enumDescriptions": [
            "`HTTP 301 (Moved Permanently)`",
            "HTTP 302 Found",
            "HTTP 303 See Other",
            "`HTTP 307 (Temporary Redirect)`. In this case, the request method is retained.",
            "`HTTP 308 (Permanent Redirect)`. In this case, the request method is retained."
          ],
          "enum": [
            "MOVED_PERMANENTLY_DEFAULT",
            "FOUND",
            "SEE_OTHER",
            "TEMPORARY_REDIRECT",
            "PERMANENT_REDIRECT"
          ]
        },
        "httpsRedirect": {
          "description": "Optional. Determines whether the URL scheme in the redirected request is adjusted to `HTTPS` or remains that of the request. If it is set to `true` and at least one edge_ssl_certificates is set on the service, the URL scheme in the redirected request is set to `HTTPS`. If it is set to `false`, the URL scheme of the redirected request remains the same as that of the request.",
          "type": "boolean"
        },
        "stripQuery": {
          "description": "Optional. Determines whether accompanying query portions of the original URL are removed prior to redirecting the request. If it is set to `true`, the accompanying query portion of the original URL is removed before redirecting the request. If it is set to `false`, the query portion of the original URL is retained. The default is `false`.",
          "type": "boolean"
        }
      }
    },
    "MatchRule": {
      "id": "MatchRule",
      "description": "A collection of match conditions (such as query, header, or URI) for a request.",
      "type": "object",
      "properties": {
        "prefixMatch": {
          "description": "Optional. To satisfy the `MatchRule` condition, the request's path must begin with the specified `prefix_match`. `prefix_match` must begin with a `\/`. The value must be between 1 and 1024 characters (inclusive). One of `prefix_match`, full_path_match, or path_template_match must be specified.",
          "type": "string"
        },
        "fullPathMatch": {
          "description": "Optional. To satisfy the `MatchRule` condition, the path of the request must exactly match the value specified in `full_path_match` after removing any query parameters and anchors that might be part of the original URL. `full_path_match` must begin with a `\/`. The value must be between 1 and 1024 characters, (inclusive). One of prefix_match, `full_path_match`, or path_template_match must be specified.",
          "type": "string"
        },
        "pathTemplateMatch": {
          "description": "Optional. To satisfy the `MatchRule` condition, the path of the request must match the wildcard pattern specified in `path_template_match` after removing any query parameters and anchors that might be part of the original URL. `path_template_match` must be between 1 and 255 characters (inclusive). The pattern specified by `path_template_match` can have at most 10 wildcard operators and 10 variable captures. One of prefix_match, full_path_match, or `path_template_match` must be specified.",
          "type": "string"
        },
        "ignoreCase": {
          "description": "Optional. Specifies that prefix_match and full_path_match matches are not case sensitive. The default value is `false`, which means that matches are case sensitive.",
          "type": "boolean"
        },
        "headerMatches": {
          "description": "Optional. A list of HeaderMatch criteria, all of which must match corresponding headers in the request. You can specify up to three headers to match on.",
          "type": "array",
          "items": {
            "$ref": "HeaderMatch"
          }
        },
        "queryParameterMatches": {
          "description": "Optional. A list of QueryParameterMatcher criteria, all of which must match corresponding query parameters in the request. You can specify up to five query parameters to match on.",
          "type": "array",
          "items": {
            "$ref": "QueryParameterMatcher"
          }
        }
      }
    },
    "HeaderMatch": {
      "id": "HeaderMatch",
      "description": "The match conditions for HTTP request headers.",
      "type": "object",
      "properties": {
        "presentMatch": {
          "description": "Optional. A header with the contents of header_name must exist. The match takes place whether or not the request's header has a value. Only one of exact_match, prefix_match, suffix_match, or `present_match` must be set.",
          "type": "boolean"
        },
        "exactMatch": {
          "description": "Optional. The value of the header must exactly match contents of `exact_match`. Only one of `exact_match`, prefix_match, suffix_match, or present_match must be set.",
          "type": "string"
        },
        "prefixMatch": {
          "description": "Optional. The value of the header must start with the contents of `prefix_match`. Only one of exact_match, `prefix_match`, suffix_match, or present_match must be set.",
          "type": "string"
        },
        "suffixMatch": {
          "description": "Optional. The value of the header must end with the contents of `suffix_match`. Only one of exact_match, prefix_match, `suffix_match`, or present_match must be set.",
          "type": "string"
        },
        "headerName": {
          "description": "Required. The header name to match on.",
          "type": "string"
        },
        "invertMatch": {
          "description": "Optional. If set to `false`, HeaderMatch is considered a match when the match criteria above are met. If set to `true`, `HeaderMatch` is considered a match when the match criteria above are not met. The default is `false`.",
          "type": "boolean"
        }
      }
    },
    "QueryParameterMatcher": {
      "id": "QueryParameterMatcher",
      "description": "The match conditions for URI query parameters.",
      "type": "object",
      "properties": {
        "presentMatch": {
          "description": "Optional. Specifies that the QueryParameterMatcher matches if the request contains the query parameter. The match can succeed as long as the request contains the query parameter, regardless of whether the parameter has a value or not. Only one of `present_match` or exact_match must be set.",
          "type": "boolean"
        },
        "exactMatch": {
          "description": "Optional. The QueryParameterMatcher matches if the value of the parameter exactly matches the contents of `exact_match`. The match value must be between 1 and 64 characters long (inclusive). Only one of present_match or `exact_match` must be set.",
          "type": "string"
        },
        "name": {
          "description": "Required. The name of the query parameter to match. The query parameter must exist in the request; if it doesn't, the request match fails. The name must be specified and be between 1 and 32 characters long (inclusive).",
          "type": "string"
        }
      }
    },
    "HeaderAction": {
      "id": "HeaderAction",
      "description": "Defines the addition and removal of HTTP headers for requests and responses.",
      "type": "object",
      "properties": {
        "requestHeadersToAdd": {
          "description": "Optional. A list of headers to add to the request prior to forwarding the request to the origin. You can add a maximum of 25 request headers.",
          "type": "array",
          "items": {
            "$ref": "HeaderActionAddHeader"
          }
        },
        "responseHeadersToAdd": {
          "description": "Optional. A list of headers to add to the response before sending it back to the client. You can add a maximum of 25 response headers. Response headers are only sent to the client, and do not have an effect on the cache serving the response.",
          "type": "array",
          "items": {
            "$ref": "HeaderActionAddHeader"
          }
        },
        "requestHeadersToRemove": {
          "description": "Optional. A list of header names to remove from the request before forwarding the request to the origin. You can specify up to 25 request headers to remove.",
          "type": "array",
          "items": {
            "$ref": "HeaderActionRemoveHeader"
          }
        },
        "responseHeadersToRemove": {
          "description": "Optional. A list of headers to remove from the response before sending it back to the client. Response headers are only sent to the client, and do not have an effect on the cache serving the response. You can specify up to 25 response headers to remove.",
          "type": "array",
          "items": {
            "$ref": "HeaderActionRemoveHeader"
          }
        }
      }
    },
    "HeaderActionAddHeader": {
      "id": "HeaderActionAddHeader",
      "description": "The header to add.",
      "type": "object",
      "properties": {
        "headerName": {
          "description": "Required. The name of the header to add.",
          "type": "string"
        },
        "headerValue": {
          "description": "Required. The value of the header to add.",
          "type": "string"
        },
        "replace": {
          "description": "Optional. Specifies whether to replace all existing headers with the same name.",
          "type": "boolean"
        }
      }
    },
    "HeaderActionRemoveHeader": {
      "id": "HeaderActionRemoveHeader",
      "description": "The header to remove.",
      "type": "object",
      "properties": {
        "headerName": {
          "description": "Required. The name of the header to remove.",
          "type": "string"
        }
      }
    },
    "RouteAction": {
      "id": "RouteAction",
      "description": "The actions (such as rewrites, redirects, CORS header injection, and header modification) to take for a given route match.",
      "type": "object",
      "properties": {
        "cdnPolicy": {
          "description": "Optional. The policy to use for defining caching and signed request behavior for requests that match this route.",
          "$ref": "CDNPolicy"
        },
        "urlRewrite": {
          "description": "Optional. The URL rewrite configuration for requests that match this route.",
          "$ref": "UrlRewrite"
        },
        "corsPolicy": {
          "description": "Optional. The Cross-Origin Resource Sharing (CORS) policy for requests that match this route.",
          "$ref": "CORSPolicy"
        }
      }
    },
    "CDNPolicy": {
      "id": "CDNPolicy",
      "description": "The CDN policy to apply to the configured route.",
      "type": "object",
      "properties": {
        "cacheMode": {
          "description": "Optional. Set the CacheMode used by this route. BYPASS_CACHE and USE_ORIGIN_HEADERS proxy the origin's headers. Other cache modes pass Cache-Control to the client. Use client_ttl to override what is sent to the client.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value. Defaults to `CACHE_ALL_STATIC`.",
            "Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), aren't cached.",
            "Only cache responses with valid HTTP caching directives. Responses without these headers aren't cached at Google's edge, and require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server.",
            "Cache all content, ignoring any `private`, `no-store` or `no-cache` directives in Cache-Control response headers. **Warning:** this might result in caching private, per-user (user identifiable) content. Only enable this on routes where the EdgeCacheOrigin doesn't serve private or dynamic content, such as storage buckets.",
            "Bypass all caching for requests that match routes with this CDNPolicy applied. Enabling this causes the edge cache to ignore all HTTP caching directives. All responses are fulfilled from the origin."
          ],
          "enum": [
            "CACHE_MODE_UNSPECIFIED",
            "CACHE_ALL_STATIC",
            "USE_ORIGIN_HEADERS",
            "FORCE_CACHE_ALL",
            "BYPASS_CACHE"
          ]
        },
        "clientTtl": {
          "description": "Optional. Specifies a separate client (such as browser client) TTL, separate from the TTL used by the edge caches. Leaving this empty uses the same cache TTL for both the CDN and the client-facing response. - The TTL must be > `0` and <= `86400s` (1 day) - The `client_ttl` cannot be larger than the default_ttl (if set) - Fractions of a second are not allowed. Omit this field to use the `default_ttl`, or the max-age set by the origin, as the client-facing TTL. When the CacheMode is set to USE_ORIGIN_HEADERS or BYPASS_CACHE, you must omit this field.",
          "type": "string",
          "format": "google-duration"
        },
        "defaultTtl": {
          "description": "Optional. Specifies the default TTL for cached content served by this origin for responses that do not have an existing valid TTL (max-age or s-max-age). Defaults to `3600s` (1 hour). - The TTL must be >= `0` and <= `31,536,000` seconds (1 year) - Setting a TTL of `0` means \"always revalidate\" (equivalent to must-revalidate) - The value of `default_ttl` cannot be set to a value greater than that of max_ttl. - Fractions of a second are not allowed. - When the CacheMode is set to FORCE_CACHE_ALL, the `default_ttl` overwrites the TTL set in all responses. Infrequently accessed objects might be evicted from the cache before the defined TTL. Objects that expire are revalidated with the origin. When the CacheMode is set to USE_ORIGIN_HEADERS or BYPASS_CACHE, you must omit this field.",
          "type": "string",
          "format": "google-duration"
        },
        "maxTtl": {
          "description": "Optional. The maximum allowed TTL for cached content served by this origin. Defaults to `86400s` (1 day). Cache directives that attempt to set a max-age or s-maxage higher than this, or an Expires header more than `max_ttl` seconds in the future are capped at the value of `max_ttl`, as if it were the value of an s-maxage Cache-Control directive. - The TTL must be >= `0` and <= `31,536,000` seconds (1 year) - Setting a TTL of `0` means \"always revalidate\" - The value of `max_ttl` must be equal to or greater than default_ttl. - Fractions of a second are not allowed. When CacheMode is set to [USE_ORIGIN_HEADERS].[CacheMode.USE_ORIGIN_HEADERS], FORCE_CACHE_ALL, or BYPASS_CACHE, you must omit this field.",
          "type": "string",
          "format": "google-duration"
        },
        "cacheKeyPolicy": {
          "description": "Optional. The request parameters that contribute to the cache key.",
          "$ref": "CDNPolicyCacheKeyPolicy"
        },
        "negativeCaching": {
          "description": "Optional. Negative caching allows setting per-status code TTLs, in order to apply fine-grained caching for common errors or redirects. This can reduce the load on your origin and improve end-user experience by reducing response latency. By default, the CDNPolicy applies the following default TTLs to these status codes: - **10m**: HTTP 300 (Multiple Choice), 301, 308 (Permanent Redirects) - **120s**: HTTP 404 (Not Found), 410 (Gone), 451 (Unavailable For Legal Reasons) - **60s**: HTTP 405 (Method Not Found), 501 (Not Implemented) These defaults can be overridden in negative_caching_policy",
          "type": "boolean"
        },
        "negativeCachingPolicy": {
          "description": "Optional. A cache TTL for the specified HTTP status code. negative_caching must be enabled to configure `negative_caching_policy`. The following limitations apply: - Omitting the policy and leaving `negative_caching` enabled uses the default TTLs for each status code, defined in `negative_caching`. - TTLs must be >= `0` (where `0` is \"always revalidate\") and <= `86400s` (1 day) Only the following status codes can be set: - HTTP redirection (3xx) - Client error (4xx) - Server error (5xx) When you specify an explicit `negative_caching_policy`, ensure that you also specify a cache TTL for all response codes that you wish to cache. The CDNPolicy doesn't apply any default negative caching when a policy exists.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "google-duration"
          }
        },
        "signedRequestMode": {
          "description": "Optional. Specifies whether to enforce signed requests. The default value is DISABLED, which means all content is public, and does not authorize access. You must also set a signed_request_keyset to enable signed requests. When set to REQUIRE_SIGNATURES or REQUIRE_TOKENS, all matching requests get their signature validated. Requests that aren't signed with the corresponding private key, or that are otherwise invalid (such as expired or do not match the signature, IP address, or header) are rejected with an HTTP 403 error. If logging is turned on, then invalid requests are also logged.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value. Defaults to `DISABLED`.",
            "Do not enforce signed requests.",
            "Enforce signed requests using query parameter, path component, or cookie signatures. All requests must have a valid signature. Requests that are missing the signature (URL or cookie-based) are rejected as if the signature was invalid.",
            "Enforce signed requests using signed tokens. All requests must have a valid signed token. Requests that are missing a signed token (URL or cookie-based) are rejected as if the signed token was invalid."
          ],
          "enum": [
            "SIGNED_REQUEST_MODE_UNSPECIFIED",
            "DISABLED",
            "REQUIRE_SIGNATURES",
            "REQUIRE_TOKENS"
          ]
        },
        "signedRequestKeyset": {
          "description": "Optional. The EdgeCacheKeyset containing the set of public keys used to validate signed requests at the edge. The following are both valid paths to an `EdgeCacheKeyset` resource: * `projects\/project\/locations\/global\/edgeCacheKeysets\/yourKeyset` * `yourKeyset` SignedRequestMode must be set to a value other than DISABLED when a keyset is provided.",
          "type": "string"
        },
        "signedTokenOptions": {
          "description": "Optional. Any additional options for signed tokens. `signed_token_options` can only be specified when `signed_request_mode` is `REQUIRE_TOKENS`.",
          "$ref": "CDNPolicySignedTokenOptions"
        },
        "addSignatures": {
          "description": "Optional. Enables signature generation or propagation on this route. This field can only be specified when signed_request_mode is set to REQUIRE_TOKENS.",
          "$ref": "CDNPolicyAddSignaturesOptions"
        },
        "signedRequestMaximumExpirationTtl": {
          "description": "Optional. Limits how far into the future the expiration time of a signed request can be. When set, a signed request is rejected if its expiration time is later than `now` + `signed_request_maximum_expiration_ttl`, where `now` is the time at which the signed request is first handled by the CDN. - The TTL must be > 0. - Fractions of a second are not allowed. By default, `signed_request_maximum_expiration_ttl` is not set and the expiration time of a signed request might be arbitrarily far into future.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "CDNPolicyCacheKeyPolicy": {
      "id": "CDNPolicyCacheKeyPolicy",
      "description": "The request parameters that contribute to the cache key.",
      "type": "object",
      "properties": {
        "includeProtocol": {
          "description": "Optional. If `true`, HTTP and HTTPS requests are cached separately.",
          "type": "boolean"
        },
        "excludeQueryString": {
          "description": "Optional. If `true`, exclude query string parameters from the cache key. If `false` (the default), include the query string parameters in the cache key according to included_query_parameters and excluded_query_parameters. If neither is set, the entire query string is included.",
          "type": "boolean"
        },
        "excludeHost": {
          "description": "Optional. If `true`, requests to different hosts are cached separately. **Important:** Enable this only if the hosts share the same origin and content. Removing the host from the cache key might inadvertently result in different objects being cached than intended, depending on which route the first user matched.",
          "type": "boolean"
        },
        "includedQueryParameters": {
          "description": "Optional. The names of query string parameters to include in cache keys. All other parameters are excluded. Specify either included_query_parameters or excluded_query_parameters, not both. `&` and `=` are percent encoded and not treated as delimiters. You can include up to 20 query parameters. Each query parameter name must be between 1 and 32 characters long (inclusive).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedQueryParameters": {
          "description": "Optional. The names of query string parameters to exclude from cache keys. All other parameters are included. Specify either included_query_parameters or excluded_query_parameters, not both. `&` and `=` are percent encoded and not treated as delimiters. You can exclude up to 20 query parameters. Each query parameter name must be between 1 and 32 characters long (inclusive).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includedHeaderNames": {
          "description": "Optional. The names of HTTP request headers to include in cache keys. The value of the header field is used as part of the cache key. The following limitations apply: - Header names must be valid HTTP RFC 7230 header field values. - Header field names are case insensitive - You can specify up to five header names. - To include the HTTP method, use `:method` Refer to the documentation for the allowed list of header names. Specifying several headers or headers that have a large range of values, such as per-user, dramatically impacts the cache hit rate, and might result in a higher eviction rate and reduced performance.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includedCookieNames": {
          "description": "Optional. The names of cookies to include in cache keys. The cookie name and cookie value of each cookie named is used as part of the cache key. The following limitations apply: - Must be valid RFC 6265 \"cookie-name\" tokens - Are case sensitive - Cannot start with \"Edge-Cache-\" (case insensitive) Specifying several cookies or cookies that have a large range of values, such as per-user, dramatically impacts the cache hit rate, and might result in a higher eviction rate and reduced performance. You can specify up to three cookie names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CDNPolicySignedTokenOptions": {
      "id": "CDNPolicySignedTokenOptions",
      "description": "The configuration options for signed tokens.",
      "type": "object",
      "properties": {
        "tokenQueryParameter": {
          "description": "Optional. The query parameter in which to find the token. The name must be 1-64 characters long and match the regular expression `[a-zA-Z]([a-zA-Z0-9_-])*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit. Defaults to `edge-cache-token`.",
          "type": "string"
        },
        "allowedSignatureAlgorithms": {
          "description": "Optional. The allowed signature algorithms to use. Defaults to using only ED25519. You can specify up to 3 signature algorithms to use.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "It is an error to specify ALGORITHM_UNSPECIFIED.",
              "Use an Ed25519 signature scheme. The signature must be specified in the signature field of the token.",
              "Use an HMAC based on a SHA-256 hash. The HMAC must be specified in the hmac field of the token.",
              "Use an HMAC based on a SHA1 hash. The HMAC must be specified in the hmac field of the token."
            ],
            "enum": [
              "SIGNATURE_ALGORITHM_UNSPECIFIED",
              "ED25519",
              "HMAC_SHA_256",
              "HMAC_SHA1"
            ]
          }
        }
      }
    },
    "CDNPolicyAddSignaturesOptions": {
      "id": "CDNPolicyAddSignaturesOptions",
      "description": "The configuration options for adding signatures to responses.",
      "type": "object",
      "properties": {
        "actions": {
          "description": "Required. The actions to take to add signatures to responses. You must specify exactly one action.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "It is an error to specify `UNSPECIFIED`.",
              "Generate a new signed request cookie and return the cookie in a Set-Cookie header of the response. This action cannot be combined with the `PROPAGATE_TOKEN_HLS_COOKIELESS` action.",
              "Generate a new signed request authentication token and return the new token by manipulating URLs in an HTTP Live Stream (HLS) playlist. This action cannot be combined with the `PROPAGATE_TOKEN_HLS_COOKIELESS` action.",
              "Copy the authentication token used in the request to the URLs in an HTTP Live Stream (HLS) playlist. This action cannot be combined with either the `GENERATE_COOKIE` action or the `GENERATE_TOKEN_HLS_COOKIELESS` action."
            ],
            "enum": [
              "SIGNATURE_ACTION_UNSPECIFIED",
              "GENERATE_COOKIE",
              "GENERATE_TOKEN_HLS_COOKIELESS",
              "PROPAGATE_TOKEN_HLS_COOKIELESS"
            ]
          }
        },
        "keyset": {
          "description": "Optional. The keyset to use for signature generation. The following are both valid paths to an EdgeCacheKeyset resource: * `projects\/project\/locations\/global\/edgeCacheKeysets\/yourKeyset` * `yourKeyset` This must be specified when the `GENERATE_COOKIE` or `GENERATE_TOKEN_HLS_COOKIELESS` actions are specified. This field can not be specified otherwise.",
          "type": "string"
        },
        "tokenTtl": {
          "description": "Optional. The duration the token is valid for starting from the moment the token is first generated. Defaults to `86400s` (1 day). The TTL must be >= 0 and <= 604,800 seconds (1 week). This field can only be specified when the `GENERATE_COOKIE` or `GENERATE_TOKEN_HLS_COOKIELESS` actions are specified.",
          "type": "string",
          "format": "google-duration"
        },
        "tokenQueryParameter": {
          "description": "Optional. The query parameter in which to put the generated token. If not specified, defaults to `edge-cache-token`. If specified, the name must be 1-64 characters long and match the regular expression `[a-zA-Z]([a-zA-Z0-9_-])*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit. This field can only be set when the `GENERATE_TOKEN_HLS_COOKIELESS` or `PROPAGATE_TOKEN_HLS_COOKIELESS` actions are specified.",
          "type": "string"
        },
        "copiedParameters": {
          "description": "Optional. The parameters to copy from the verified token to the generated token. Only the following parameters can be copied: * `PathGlobs` * `paths` * `acl` * `URLPrefix` * `IPRanges` * `SessionID` * `id` * `Data` * `data` * `payload` * `Headers` You can specify up to 6 parameters to copy. A given parameter is be copied only if the parameter exists in the verified token. Parameter names are matched exactly as specified. The order of the parameters does not matter. Duplicates are not allowed. This field can only be specified when the `GENERATE_COOKIE` or `GENERATE_TOKEN_HLS_COOKIELESS` actions are specified.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UrlRewrite": {
      "id": "UrlRewrite",
      "description": "Defines the URL rewrite configuration for a given request.",
      "type": "object",
      "properties": {
        "pathPrefixRewrite": {
          "description": "Optional. Before forwarding the request to the selected origin, the matching portion of the request's path is replaced by `path_prefix_rewrite`. If specified, the path value must start with a `\/` and be between 1 and 1024 characters long (inclusive). `path_prefix_rewrite` can only be used when all of a route's match_rules specify prefix_match or full_path_match. Only one of `path_prefix_rewrite` and path_template_rewrite can be specified.",
          "type": "string"
        },
        "pathTemplateRewrite": {
          "description": "Optional. Before forwarding the request to the selected origin, if the request matched a path_template_match, the matching portion of the request's path is replaced re-written using the pattern specified by `path_template_rewrite`. `path_template_rewrite` must be between 1 and 255 characters (inclusive), must start with a `\/`, and must only use variables captured by the route's `path_template_match`. `path_template_rewrite` can only be used when all of a route's match_rules specify `path_template_match`. Only one of path_prefix_rewrite and `path_template_rewrite` can be specified.",
          "type": "string"
        },
        "hostRewrite": {
          "description": "Optional. Before forwarding the request to the selected origin, the request's host header is replaced with contents of `host_rewrite`. The host value must be between 1 and 255 characters.",
          "type": "string"
        }
      }
    },
    "CORSPolicy": {
      "id": "CORSPolicy",
      "description": "Defines Cross Origin Resource Sharing (CORS) configuration, including which CORS response headers are set.",
      "type": "object",
      "properties": {
        "maxAge": {
          "description": "Required. Specifies how long results of a preflight request can be cached by a client in seconds. Note that many browser clients enforce a maximum TTL of 600s (10 minutes). The following limitations apply: - Setting the value to `-1` forces a pre-flight check for all requests (not recommended) - A maximum TTL of `86400s` can be set; however, some clients might force pre-flight checks at a more regular interval. This translates to the `Access-Control-Max-Age` header.",
          "type": "string",
          "format": "google-duration"
        },
        "allowCredentials": {
          "description": "Optional. In response to a preflight request, setting this to `true` indicates that the actual request can include user credentials. This translates to the `Access-Control-Allow-Credentials` response header.",
          "type": "boolean"
        },
        "allowOrigins": {
          "description": "Optional. A list of origins that are allowed to do CORS requests. This translates to the `Access-Control-Allow-Origin` response header. You can specify up to 25 allowed origins.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowMethods": {
          "description": "Optional. The content for the `Access-Control-Allow-Methods` response header. You can specify up to five allowed methods.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowHeaders": {
          "description": "Optional. The content for the `Access-Control-Allow-Headers` response header. You can specify up to 25 headers to include in the `Access-Control-Allow-Headers` header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exposeHeaders": {
          "description": "Optional. The content for the Access-Control-Expose-Headers response header. You can specify up to 25 headers to expose in the `Access-Control-Expose-Headers` header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disabled": {
          "description": "Optional. If `true`, specifies that the CORS policy is disabled. The default value is `false`, which indicates that the CORS policy is in effect.",
          "type": "boolean"
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "The logging options for the traffic served by this service. If logging is enabled, logs are exported to Cloud Logging.",
      "type": "object",
      "properties": {
        "enable": {
          "description": "Optional. Specifies whether to enable logging for traffic served by this service. Defaults to false.",
          "type": "boolean"
        },
        "sampleRate": {
          "description": "Optional. The sampling rate of requests, where `1.0` means all logged requests are reported and `0.0` means no logged requests are reported. The default value is `0.0`, and the value of the field must be in `[0, 1]`. This field can be specified only if logging is enabled for this service.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "InvalidateCacheRequest": {
      "id": "InvalidateCacheRequest",
      "description": "The request used by the `InvalidateCache` method.",
      "type": "object",
      "properties": {
        "host": {
          "description": "The hostname to invalidate against. You can specify an exact or wildcard host based on the host component. For example, `video.example.com` or `*.example.com`.",
          "type": "string"
        },
        "path": {
          "description": "The path to invalidate against. You can specify an exact or wildcard path based on the a path component. For example, `\/videos\/hls\/139123.mp4` or `\/manifests\/*`.",
          "type": "string"
        },
        "cacheTags": {
          "description": "A list of cache tags used to identify cached objects. Cache tags are specified when the response is first cached, by setting the `Cache-Tag` response header at the origin. By default, all objects have a cache tag representing the HTTP status code of the response, the MIME content-type, and the origin. Multiple cache tags in the same revalidation request are treated as Boolean `OR` - for example, `tag1 OR tag2 OR tag3`. If a host and path are also specified, these are treated as Boolean `AND` with any tags. Up to 10 tags can be specified in a single invalidation request.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InvalidateCacheResponse": {
      "id": "InvalidateCacheResponse",
      "description": "The response used by the `InvalidateCache` method.",
      "type": "object",
      "properties": {
      }
    },
    "ListGatewaysResponse": {
      "id": "ListGatewaysResponse",
      "description": "Response returned by the ListGateways method.",
      "type": "object",
      "properties": {
        "gateways": {
          "description": "List of Gateway resources.",
          "type": "array",
          "items": {
            "$ref": "Gateway"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "Gateway": {
      "id": "Gateway",
      "description": "Gateway represents the configuration for a proxy, typically a load balancer. It captures the ip:port over which the services are exposed by the proxy, along with any policy configurations. Routes have reference to to Gateways to dictate how requests should be routed by this Gateway.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the Gateway resource. It matches pattern `projects\/*\/locations\/*\/gateways\/`.",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. Server-defined URL of this resource",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the Gateway resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        },
        "type": {
          "description": "Immutable. The type of the customer managed gateway. This field is required. If unspecified, an error is returned.",
          "type": "string",
          "enumDescriptions": [
            "The type of the customer managed gateway is unspecified.",
            "The type of the customer managed gateway is TrafficDirector Open Mesh.",
            "The type of the customer managed gateway is SecureWebGateway (SWG)."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "OPEN_MESH",
            "SECURE_WEB_GATEWAY"
          ]
        },
        "addresses": {
          "description": "Optional. Zero or one IPv4-address on which the Gateway will receive the traffic. When no address is provided, an IP from the subnetwork is allocated This field only applies to gateways of type 'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH' listen on 0.0.0.0.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ports": {
          "description": "Required. One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports. Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 and support multiple ports.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "scope": {
          "description": "Optional. Scope determines how configuration across multiple Gateway instances are merged. The configuration for multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy\/load balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.",
          "type": "string"
        },
        "serverTlsPolicy": {
          "description": "Optional. A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is disabled.",
          "type": "string"
        },
        "authorizationPolicy": {
          "description": "Optional. A fully-qualified AuthorizationPolicy URL reference. Specifies how traffic is authorized. If empty, authorization checks are disabled.",
          "type": "string"
        },
        "certificateUrls": {
          "description": "Optional. A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "securityPolicy": {
          "description": "Optional. A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM to Proxy) initiated connections. This policy is specific to gateways of type 'SECURE_WEB_GATEWAY'. DEPRECATED!!!! Use the gateway_security_policy field instead.",
          "type": "string"
        },
        "gatewaySecurityPolicy": {
          "description": "Optional. A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM to Proxy) initiated connections. For example: `projects\/*\/locations\/*\/gatewaySecurityPolicies\/swg-policy`. This policy is specific to gateways of type 'SECURE_WEB_GATEWAY'.",
          "type": "string"
        },
        "network": {
          "description": "Optional. The relative resource name identifying the VPC network that is using this configuration. For example: `projects\/*\/global\/networks\/network-1`. Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY'.",
          "type": "string"
        },
        "subnetwork": {
          "description": "Optional. The relative resource name identifying the subnetwork in which this SWG is allocated. For example: `projects\/*\/regions\/us-central1\/subnetworks\/network-1` Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY\".",
          "type": "string"
        }
      }
    },
    "ListGrpcRoutesResponse": {
      "id": "ListGrpcRoutesResponse",
      "description": "Response returned by the ListGrpcRoutes method.",
      "type": "object",
      "properties": {
        "grpcRoutes": {
          "description": "List of GrpcRoute resources.",
          "type": "array",
          "items": {
            "$ref": "GrpcRoute"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "GrpcRoute": {
      "id": "GrpcRoute",
      "description": "GrpcRoute is the resource defining how gRPC traffic routed by a Mesh or Gateway resource is routed.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the GrpcRoute resource. It matches pattern `projects\/*\/locations\/global\/grpcRoutes\/`",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. Server-defined URL of this resource",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the GrpcRoute resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        },
        "hostnames": {
          "description": "Required. Service hostnames with an optional port for which this route describes traffic. Format: [:] Hostname is the fully qualified domain name of a network host. This matches the RFC 1123 definition of a hostname with 2 notable exceptions: - IPs are not allowed. - A hostname may be prefixed with a wildcard label (*.). The wildcard label must appear by itself as the first label. Hostname can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. *.example.com). Note that as per RFC1035 and RFC1123, a label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character. No other punctuation is allowed. The routes associated with a Mesh or Gateway must have unique hostnames. If you attempt to attach multiple routes with conflicting hostnames, the configuration will be rejected. For example, while it is acceptable for routes for the hostnames \"*.foo.bar.com\" and \"*.bar.com\" to be associated with the same route, it is not possible to associate two routes both with \"*.bar.com\" or both with \"bar.com\". If a port is specified, then gRPC clients must use the channel URI with the port to match this rule (i.e. \"xds:\/\/\/service:123\"), otherwise they must supply the URI without a port (i.e. \"xds:\/\/\/service\").",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "meshes": {
          "description": "Optional. Meshes defines a list of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects\/*\/locations\/global\/meshes\/`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gateways": {
          "description": "Optional. Gateways defines a list of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects\/*\/locations\/global\/gateways\/`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rules": {
          "description": "Required. A list of detailed rules defining how to route traffic. Within a single GrpcRoute, the GrpcRoute.RouteAction associated with the first matching GrpcRoute.RouteRule will be executed. At least one rule must be supplied.",
          "type": "array",
          "items": {
            "$ref": "GrpcRouteRouteRule"
          }
        }
      }
    },
    "GrpcRouteRouteRule": {
      "id": "GrpcRouteRouteRule",
      "description": "Describes how to route traffic.",
      "type": "object",
      "properties": {
        "matches": {
          "description": "Optional. Matches define conditions used for matching the rule against incoming gRPC requests. Each match is independent, i.e. this rule will be matched if ANY one of the matches is satisfied. If no matches field is specified, this rule will unconditionally match traffic.",
          "type": "array",
          "items": {
            "$ref": "GrpcRouteRouteMatch"
          }
        },
        "action": {
          "description": "Required. A detailed rule defining how to route traffic. This field is required.",
          "$ref": "GrpcRouteRouteAction"
        }
      }
    },
    "GrpcRouteRouteMatch": {
      "id": "GrpcRouteRouteMatch",
      "description": "Criteria for matching traffic. A RouteMatch will be considered to match when all supplied fields match.",
      "type": "object",
      "properties": {
        "method": {
          "description": "Optional. A gRPC method to match against. If this field is empty or omitted, will match all methods.",
          "$ref": "GrpcRouteMethodMatch"
        },
        "headers": {
          "description": "Optional. Specifies a collection of headers to match.",
          "type": "array",
          "items": {
            "$ref": "GrpcRouteHeaderMatch"
          }
        }
      }
    },
    "GrpcRouteMethodMatch": {
      "id": "GrpcRouteMethodMatch",
      "description": "Specifies a match against a method.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Optional. Specifies how to match against the name. If not specified, a default value of \"EXACT\" is used.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Will only match the exact name provided.",
            "Will interpret grpc_method and grpc_service as regexes. RE2 syntax is supported."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXACT",
            "REGULAR_EXPRESSION"
          ]
        },
        "grpcService": {
          "description": "Required. Name of the service to match against. If unspecified, will match all services.",
          "type": "string"
        },
        "grpcMethod": {
          "description": "Required. Name of the method to match against. If unspecified, will match all methods.",
          "type": "string"
        },
        "caseSensitive": {
          "description": "Optional. Specifies that matches are case sensitive. The default value is true. case_sensitive must not be used with a type of REGULAR_EXPRESSION.",
          "type": "boolean"
        }
      }
    },
    "GrpcRouteHeaderMatch": {
      "id": "GrpcRouteHeaderMatch",
      "description": "A match against a collection of headers.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Optional. Specifies how to match against the value of the header. If not specified, a default value of EXACT is used.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Will only match the exact value provided.",
            "Will match paths conforming to the prefix specified by value. RE2 syntax is supported."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXACT",
            "REGULAR_EXPRESSION"
          ]
        },
        "key": {
          "description": "Required. The key of the header.",
          "type": "string"
        },
        "value": {
          "description": "Required. The value of the header.",
          "type": "string"
        }
      }
    },
    "GrpcRouteRouteAction": {
      "id": "GrpcRouteRouteAction",
      "description": "Specifies how to route matched traffic.",
      "type": "object",
      "properties": {
        "destinations": {
          "description": "Optional. The destination services to which traffic should be forwarded. If multiple destinations are specified, traffic will be split between Backend Service(s) according to the weight field of these destinations.",
          "type": "array",
          "items": {
            "$ref": "GrpcRouteDestination"
          }
        },
        "faultInjectionPolicy": {
          "description": "Optional. The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced on a percentage of requests before sending those requests to the destination service. Similarly requests from clients can be aborted by for a percentage of requests. timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy",
          "$ref": "GrpcRouteFaultInjectionPolicy"
        },
        "timeout": {
          "description": "Optional. Specifies the timeout for selected route. Timeout is computed from the time the request has been fully processed (i.e. end of stream) up until the response has been completely processed. Timeout includes all retries.",
          "type": "string",
          "format": "google-duration"
        },
        "retryPolicy": {
          "description": "Optional. Specifies the retry policy associated with this route.",
          "$ref": "GrpcRouteRetryPolicy"
        }
      }
    },
    "GrpcRouteDestination": {
      "id": "GrpcRouteDestination",
      "description": "The destination to which traffic will be routed.",
      "type": "object",
      "properties": {
        "serviceName": {
          "description": "Required. The URL of a destination service to which to route traffic. Must refer to either a BackendService or ServiceDirectoryService.",
          "type": "string"
        },
        "weight": {
          "description": "Optional. Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight\/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GrpcRouteFaultInjectionPolicy": {
      "id": "GrpcRouteFaultInjectionPolicy",
      "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced on a percentage of requests before sending those requests to the destination service. Similarly requests from clients can be aborted by for a percentage of requests.",
      "type": "object",
      "properties": {
        "delay": {
          "description": "The specification for injecting delay to client requests.",
          "$ref": "GrpcRouteFaultInjectionPolicyDelay"
        },
        "abort": {
          "description": "The specification for aborting to client requests.",
          "$ref": "GrpcRouteFaultInjectionPolicyAbort"
        }
      }
    },
    "GrpcRouteFaultInjectionPolicyDelay": {
      "id": "GrpcRouteFaultInjectionPolicyDelay",
      "description": "Specification of how client requests are delayed as part of fault injection before being sent to a destination.",
      "type": "object",
      "properties": {
        "fixedDelay": {
          "description": "Specify a fixed delay before forwarding the request.",
          "type": "string",
          "format": "google-duration"
        },
        "percentage": {
          "description": "The percentage of traffic on which delay will be injected. The value must be between [0, 100]",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GrpcRouteFaultInjectionPolicyAbort": {
      "id": "GrpcRouteFaultInjectionPolicyAbort",
      "description": "Specification of how client requests are aborted as part of fault injection before being sent to a destination.",
      "type": "object",
      "properties": {
        "httpStatus": {
          "description": "The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive.",
          "type": "integer",
          "format": "int32"
        },
        "percentage": {
          "description": "The percentage of traffic which will be aborted. The value must be between [0, 100]",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GrpcRouteRetryPolicy": {
      "id": "GrpcRouteRetryPolicy",
      "description": "The specifications for retries.",
      "type": "object",
      "properties": {
        "retryConditions": {
          "description": "- connect-failure: Router will retry on failures connecting to Backend Services, for example due to connection timeouts. - refused-stream: Router will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. - cancelled: Router will retry if the gRPC status code in the response header is set to cancelled - deadline-exceeded: Router will retry if the gRPC status code in the response header is set to deadline-exceeded - resource-exhausted: Router will retry if the gRPC status code in the response header is set to resource-exhausted - unavailable: Router will retry if the gRPC status code in the response header is set to unavailable",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numRetries": {
          "description": "Specifies the allowed number of retries. This number must be > 0. If not specified, default to 1.",
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "ListHttpRoutesResponse": {
      "id": "ListHttpRoutesResponse",
      "description": "Response returned by the ListHttpRoutes method.",
      "type": "object",
      "properties": {
        "httpRoutes": {
          "description": "List of HttpRoute resources.",
          "type": "array",
          "items": {
            "$ref": "HttpRoute"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "HttpRoute": {
      "id": "HttpRoute",
      "description": "HttpRoute is the resource defining how HTTP traffic should be routed by a Mesh or Gateway resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the HttpRoute resource. It matches pattern `projects\/*\/locations\/global\/httpRoutes\/http_route_name>`.",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. Server-defined URL of this resource",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "hostnames": {
          "description": "Required. Hostnames define a set of hosts that should match against the HTTP host header to select a HttpRoute to process the request. Hostname is the fully qualified domain name of a network host, as defined by RFC 1123 with the exception that: - IPs are not allowed. - A hostname may be prefixed with a wildcard label (*.). The wildcard label must appear by itself as the first label. Hostname can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. *.example.com). Note that as per RFC1035 and RFC1123, a label must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character. No other punctuation is allowed. The routes associated with a Mesh or Gateways must have unique hostnames. If you attempt to attach multiple routes with conflicting hostnames, the configuration will be rejected. For example, while it is acceptable for routes for the hostnames \"*.foo.bar.com\" and \"*.bar.com\" to be associated with the same Mesh (or Gateways under the same scope), it is not possible to associate two routes both with \"*.bar.com\" or both with \"bar.com\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "meshes": {
          "description": "Optional. Meshes defines a list of meshes this HttpRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects\/*\/locations\/global\/meshes\/` The attached Mesh should be of a type SIDECAR",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gateways": {
          "description": "Optional. Gateways defines a list of gateways this HttpRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects\/*\/locations\/global\/gateways\/`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the HttpRoute resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "rules": {
          "description": "Required. Rules that define how traffic is routed and handled. Rules will be matched sequentially based on the RouteMatch specified for the rule.",
          "type": "array",
          "items": {
            "$ref": "HttpRouteRouteRule"
          }
        }
      }
    },
    "HttpRouteRouteRule": {
      "id": "HttpRouteRouteRule",
      "description": "Specifies how to match traffic and how to route traffic when traffic is matched.",
      "type": "object",
      "properties": {
        "matches": {
          "description": "A list of matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if ANY one of the matches is satisfied. If no matches field is specified, this rule will unconditionally match traffic. If a default rule is desired to be configured, add a rule with no matches specified to the end of the rules list.",
          "type": "array",
          "items": {
            "$ref": "HttpRouteRouteMatch"
          }
        },
        "action": {
          "description": "The detailed rule defining how to route matched traffic.",
          "$ref": "HttpRouteRouteAction"
        }
      }
    },
    "HttpRouteRouteMatch": {
      "id": "HttpRouteRouteMatch",
      "description": "RouteMatch defines specifications used to match requests. If multiple match types are set, this RouteMatch will match if ALL type of matches are matched.",
      "type": "object",
      "properties": {
        "fullPathMatch": {
          "description": "The HTTP request path value should exactly match this value. Only one of full_path_match, prefix_match, or regex_match should be used.",
          "type": "string"
        },
        "prefixMatch": {
          "description": "The HTTP request path value must begin with specified prefix_match. prefix_match must begin with a \/. Only one of full_path_match, prefix_match, or regex_match should be used.",
          "type": "string"
        },
        "regexMatch": {
          "description": "The HTTP request path value must satisfy the regular expression specified by regex_match after removing any query parameters and anchor supplied with the original URL. For regular expression grammar, please see https:\/\/github.com\/google\/re2\/wiki\/Syntax Only one of full_path_match, prefix_match, or regex_match should be used.",
          "type": "string"
        },
        "ignoreCase": {
          "description": "Specifies if prefix_match and full_path_match matches are case sensitive. The default value is false.",
          "type": "boolean"
        },
        "headers": {
          "description": "Specifies a list of HTTP request headers to match against. ALL of the supplied headers must be matched.",
          "type": "array",
          "items": {
            "$ref": "HttpRouteHeaderMatch"
          }
        },
        "queryParameters": {
          "description": "Specifies a list of query parameters to match against. ALL of the query parameters must be matched.",
          "type": "array",
          "items": {
            "$ref": "HttpRouteQueryParameterMatch"
          }
        }
      }
    },
    "HttpRouteHeaderMatch": {
      "id": "HttpRouteHeaderMatch",
      "description": "Specifies how to select a route rule based on HTTP request headers.",
      "type": "object",
      "properties": {
        "exactMatch": {
          "description": "The value of the header should match exactly the content of exact_match.",
          "type": "string"
        },
        "regexMatch": {
          "description": "The value of the header must match the regular expression specified in regex_match. For regular expression grammar, please see: https:\/\/github.com\/google\/re2\/wiki\/Syntax",
          "type": "string"
        },
        "prefixMatch": {
          "description": "The value of the header must start with the contents of prefix_match.",
          "type": "string"
        },
        "presentMatch": {
          "description": "A header with header_name must exist. The match takes place whether or not the header has a value.",
          "type": "boolean"
        },
        "suffixMatch": {
          "description": "The value of the header must end with the contents of suffix_match.",
          "type": "string"
        },
        "rangeMatch": {
          "description": "If specified, the rule will match if the request header value is within the range.",
          "$ref": "HttpRouteHeaderMatchIntegerRange"
        },
        "header": {
          "description": "The name of the HTTP header to match against.",
          "type": "string"
        },
        "invertMatch": {
          "description": "If specified, the match result will be inverted before checking. Default value is set to false.",
          "type": "boolean"
        }
      }
    },
    "HttpRouteHeaderMatchIntegerRange": {
      "id": "HttpRouteHeaderMatchIntegerRange",
      "description": "Represents an integer value range.",
      "type": "object",
      "properties": {
        "start": {
          "description": "Start of the range (inclusive)",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "description": "End of the range (exclusive)",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HttpRouteQueryParameterMatch": {
      "id": "HttpRouteQueryParameterMatch",
      "description": "Specifications to match a query parameter in the request.",
      "type": "object",
      "properties": {
        "exactMatch": {
          "description": "The value of the query parameter must exactly match the contents of exact_match. Only one of exact_match, regex_match, or present_match must be set.",
          "type": "string"
        },
        "regexMatch": {
          "description": "The value of the query parameter must match the regular expression specified by regex_match. For regular expression grammar, please see https:\/\/github.com\/google\/re2\/wiki\/Syntax Only one of exact_match, regex_match, or present_match must be set.",
          "type": "string"
        },
        "presentMatch": {
          "description": "Specifies that the QueryParameterMatcher matches if request contains query parameter, irrespective of whether the parameter has a value or not. Only one of exact_match, regex_match, or present_match must be set.",
          "type": "boolean"
        },
        "queryParameter": {
          "description": "The name of the query parameter to match.",
          "type": "string"
        }
      }
    },
    "HttpRouteRouteAction": {
      "id": "HttpRouteRouteAction",
      "description": "The specifications for routing traffic and applying associated policies.",
      "type": "object",
      "properties": {
        "destinations": {
          "description": "The destination to which traffic should be forwarded.",
          "type": "array",
          "items": {
            "$ref": "HttpRouteDestination"
          }
        },
        "redirect": {
          "description": "If set, the request is directed as configured by this field.",
          "$ref": "HttpRouteRedirect"
        },
        "faultInjectionPolicy": {
          "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced on a percentage of requests before sending those requests to the backend service. Similarly requests from clients can be aborted for a percentage of requests. timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy",
          "$ref": "HttpRouteFaultInjectionPolicy"
        },
        "requestHeaderModifier": {
          "description": "The specification for modifying the headers of a matching request prior to delivery of the request to the destination.",
          "$ref": "HttpRouteHeaderModifier"
        },
        "responseHeaderModifier": {
          "description": "The specification for modifying the headers of a response prior to sending the response back to the client.",
          "$ref": "HttpRouteHeaderModifier"
        },
        "urlRewrite": {
          "description": "The specification for rewrite URL before forwarding requests to the destination.",
          "$ref": "HttpRouteURLRewrite"
        },
        "timeout": {
          "description": "Specifies the timeout for selected route. Timeout is computed from the time the request has been fully processed (i.e. end of stream) up until the response has been completely processed. Timeout includes all retries.",
          "type": "string",
          "format": "google-duration"
        },
        "retryPolicy": {
          "description": "Specifies the retry policy associated with this route.",
          "$ref": "HttpRouteRetryPolicy"
        },
        "requestMirrorPolicy": {
          "description": "Specifies the policy on how requests intended for the routes destination are shadowed to a separate mirrored destination. Proxy will not wait for the shadow destination to respond before returning the response. Prior to sending traffic to the shadow service, the host\/authority header is suffixed with -shadow.",
          "$ref": "HttpRouteRequestMirrorPolicy"
        },
        "corsPolicy": {
          "description": "The specification for allowing client side cross-origin requests.",
          "$ref": "HttpRouteCorsPolicy"
        }
      }
    },
    "HttpRouteDestination": {
      "id": "HttpRouteDestination",
      "description": "Specifications of a destination to which the request should be routed to.",
      "type": "object",
      "properties": {
        "serviceName": {
          "description": "The URL of a BackendService to route traffic to.",
          "type": "string"
        },
        "weight": {
          "description": "Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight\/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HttpRouteRedirect": {
      "id": "HttpRouteRedirect",
      "description": "The specification for redirecting traffic.",
      "type": "object",
      "properties": {
        "hostRedirect": {
          "description": "The host that will be used in the redirect response instead of the one that was supplied in the request.",
          "type": "string"
        },
        "pathRedirect": {
          "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. path_redirect can not be supplied together with prefix_redirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect.",
          "type": "string"
        },
        "prefixRewrite": {
          "description": "Indicates that during redirection, the matched prefix (or path) should be swapped with this value. This option allows URLs be dynamically created based on the request.",
          "type": "string"
        },
        "responseCode": {
          "description": "The HTTP Status code to use for the redirect.",
          "type": "string",
          "enumDescriptions": [
            "Default value",
            "Corresponds to 301.",
            "Corresponds to 302.",
            "Corresponds to 303.",
            "Corresponds to 307. In this case, the request method will be retained.",
            "Corresponds to 308. In this case, the request method will be retained."
          ],
          "enum": [
            "RESPONSE_CODE_UNSPECIFIED",
            "MOVED_PERMANENTLY_DEFAULT",
            "FOUND",
            "SEE_OTHER",
            "TEMPORARY_REDIRECT",
            "PERMANENT_REDIRECT"
          ]
        },
        "httpsRedirect": {
          "description": "If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. The default is set to false.",
          "type": "boolean"
        },
        "stripQuery": {
          "description": "if set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained. The default is set to false.",
          "type": "boolean"
        },
        "portRedirect": {
          "description": "The port that will be used in the redirected request instead of the one that was supplied in the request.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HttpRouteFaultInjectionPolicy": {
      "id": "HttpRouteFaultInjectionPolicy",
      "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced by client proxy on a percentage of requests before sending those requests to the destination service. Similarly requests can be aborted by client proxy for a percentage of requests.",
      "type": "object",
      "properties": {
        "delay": {
          "description": "The specification for injecting delay to client requests.",
          "$ref": "HttpRouteFaultInjectionPolicyDelay"
        },
        "abort": {
          "description": "The specification for aborting to client requests.",
          "$ref": "HttpRouteFaultInjectionPolicyAbort"
        }
      }
    },
    "HttpRouteFaultInjectionPolicyDelay": {
      "id": "HttpRouteFaultInjectionPolicyDelay",
      "description": "Specification of how client requests are delayed as part of fault injection before being sent to a destination.",
      "type": "object",
      "properties": {
        "fixedDelay": {
          "description": "Specify a fixed delay before forwarding the request.",
          "type": "string",
          "format": "google-duration"
        },
        "percentage": {
          "description": "The percentage of traffic on which delay will be injected. The value must be between [0, 100]",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HttpRouteFaultInjectionPolicyAbort": {
      "id": "HttpRouteFaultInjectionPolicyAbort",
      "description": "Specification of how client requests are aborted as part of fault injection before being sent to a destination.",
      "type": "object",
      "properties": {
        "httpStatus": {
          "description": "The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive.",
          "type": "integer",
          "format": "int32"
        },
        "percentage": {
          "description": "The percentage of traffic which will be aborted. The value must be between [0, 100]",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HttpRouteHeaderModifier": {
      "id": "HttpRouteHeaderModifier",
      "description": "The specification for modifying HTTP header in HTTP request and HTTP response.",
      "type": "object",
      "properties": {
        "set": {
          "description": "Completely overwrite\/replace the headers with given map where key is the name of the header, value is the value of the header.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "add": {
          "description": "Add the headers with given map where key is the name of the header, value is the value of the header.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "remove": {
          "description": "Remove headers (matching by header names) specified in the list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "HttpRouteURLRewrite": {
      "id": "HttpRouteURLRewrite",
      "description": "The specification for modifying the URL of the request, prior to forwarding the request to the destination.",
      "type": "object",
      "properties": {
        "pathPrefixRewrite": {
          "description": "Prior to forwarding the request to the selected destination, the matching portion of the requests path is replaced by this value.",
          "type": "string"
        },
        "hostRewrite": {
          "description": "Prior to forwarding the request to the selected destination, the requests host header is replaced by this value.",
          "type": "string"
        }
      }
    },
    "HttpRouteRetryPolicy": {
      "id": "HttpRouteRetryPolicy",
      "description": "The specifications for retries.",
      "type": "object",
      "properties": {
        "retryConditions": {
          "description": "Specifies one or more conditions when this retry policy applies. Valid values are: 5xx: Proxy will attempt a retry if the destination service responds with any 5xx response code, of if the destination service does not respond at all, example: disconnect, reset, read timeout, connection failure and refused streams. gateway-error: Similar to 5xx, but only applies to response codes 502, 503, 504. reset: Proxy will attempt a retry if the destination service does not respond at all (disconnect\/reset\/read timeout) connect-failure: Proxy will retry on failures connecting to destination for example due to connection timeouts. retriable-4xx: Proxy will retry fro retriable 4xx response codes. Currently the only retriable error supported is 409. refused-stream: Proxy will retry if the destination resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numRetries": {
          "description": "Specifies the allowed number of retries. This number must be > 0. If not specified, default to 1.",
          "type": "integer",
          "format": "int32"
        },
        "perTryTimeout": {
          "description": "Specifies a non-zero timeout per retry attempt.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "HttpRouteRequestMirrorPolicy": {
      "id": "HttpRouteRequestMirrorPolicy",
      "description": "Specifies the policy on how requests are shadowed to a separate mirrored destination service. The proxy does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host\/authority header is suffixed with -shadow.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "The destination the requests will be mirrored to. The weight of the destination will be ignored.",
          "$ref": "HttpRouteDestination"
        }
      }
    },
    "HttpRouteCorsPolicy": {
      "id": "HttpRouteCorsPolicy",
      "description": "The Specification for allowing client side cross-origin requests.",
      "type": "object",
      "properties": {
        "allowOrigins": {
          "description": "Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either an item in allow_origins or an item in allow_origin_regexes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowOriginRegexes": {
          "description": "Specifies the regular expression patterns that match allowed origins. For regular expression grammar, please see https:\/\/github.com\/google\/re2\/wiki\/Syntax.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowMethods": {
          "description": "Specifies the content for Access-Control-Allow-Methods header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowHeaders": {
          "description": "Specifies the content for Access-Control-Allow-Headers header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exposeHeaders": {
          "description": "Specifies the content for Access-Control-Expose-Headers header.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "description": "Specifies how long result of a preflight request can be cached in seconds. This translates to the Access-Control-Max-Age header.",
          "type": "string"
        },
        "allowCredentials": {
          "description": "In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header. Default value is false.",
          "type": "boolean"
        },
        "disabled": {
          "description": "If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.",
          "type": "boolean"
        }
      }
    },
    "ListTcpRoutesResponse": {
      "id": "ListTcpRoutesResponse",
      "description": "Response returned by the ListTcpRoutes method.",
      "type": "object",
      "properties": {
        "tcpRoutes": {
          "description": "List of TcpRoute resources.",
          "type": "array",
          "items": {
            "$ref": "TcpRoute"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "TcpRoute": {
      "id": "TcpRoute",
      "description": "TcpRoute is the resource defining how TCP traffic should be routed by a Mesh\/Gateway resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the TcpRoute resource. It matches pattern `projects\/*\/locations\/global\/tcpRoutes\/tcp_route_name>`.",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. Server-defined URL of this resource",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        },
        "rules": {
          "description": "Required. Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match.",
          "type": "array",
          "items": {
            "$ref": "TcpRouteRouteRule"
          }
        },
        "meshes": {
          "description": "Optional. Meshes defines a list of meshes this TcpRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects\/*\/locations\/global\/meshes\/` The attached Mesh should be of a type SIDECAR",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gateways": {
          "description": "Optional. Gateways defines a list of gateways this TcpRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects\/*\/locations\/global\/gateways\/`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the TcpRoute resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TcpRouteRouteRule": {
      "id": "TcpRouteRouteRule",
      "description": "Specifies how to match traffic and how to route traffic when traffic is matched.",
      "type": "object",
      "properties": {
        "matches": {
          "description": "Optional. RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \"OR\"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.",
          "type": "array",
          "items": {
            "$ref": "TcpRouteRouteMatch"
          }
        },
        "action": {
          "description": "Required. The detailed rule defining how to route matched traffic.",
          "$ref": "TcpRouteRouteAction"
        }
      }
    },
    "TcpRouteRouteMatch": {
      "id": "TcpRouteRouteMatch",
      "description": "RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \"OR\"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.",
      "type": "object",
      "properties": {
        "address": {
          "description": "Required. Must be specified in the CIDR range format. A CIDR range consists of an IP Address and a prefix length to construct the subnet mask. By default, the prefix length is 32 (i.e. matches a single IP address). Only IPV4 addresses are supported. Examples: \"10.0.0.1\" - matches against this exact IP address. \"10.0.0.0\/8\" - matches against any IP address within the 10.0.0.0 subnet and 255.255.255.0 mask. \"0.0.0.0\/0\" - matches against any IP address'.",
          "type": "string"
        },
        "port": {
          "description": "Required. Specifies the destination port to match against.",
          "type": "string"
        }
      }
    },
    "TcpRouteRouteAction": {
      "id": "TcpRouteRouteAction",
      "description": "The specifications for routing traffic and applying associated policies.",
      "type": "object",
      "properties": {
        "destinations": {
          "description": "Optional. The destination services to which traffic should be forwarded. At least one destination service is required.",
          "type": "array",
          "items": {
            "$ref": "TcpRouteRouteDestination"
          }
        },
        "originalDestination": {
          "description": "Optional. If true, Router will use the destination IP and port of the original connection as the destination of the request. Default is false.",
          "type": "boolean"
        }
      }
    },
    "TcpRouteRouteDestination": {
      "id": "TcpRouteRouteDestination",
      "description": "Describe the destination for traffic to be routed to.",
      "type": "object",
      "properties": {
        "serviceName": {
          "description": "Required. The URL of a BackendService to route traffic to.",
          "type": "string"
        },
        "weight": {
          "description": "Optional. Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight\/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListTlsRoutesResponse": {
      "id": "ListTlsRoutesResponse",
      "description": "Response returned by the ListTlsRoutes method.",
      "type": "object",
      "properties": {
        "tlsRoutes": {
          "description": "List of TlsRoute resources.",
          "type": "array",
          "items": {
            "$ref": "TlsRoute"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "TlsRoute": {
      "id": "TlsRoute",
      "description": "TlsRoute defines how traffic should be routed based on SNI and other matching L3 attributes.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the TlsRoute resource. It matches pattern `projects\/*\/locations\/global\/tlsRoutes\/tls_route_name>`.",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. Server-defined URL of this resource",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        },
        "rules": {
          "description": "Required. Rules that define how traffic is routed and handled. At least one RouteRule must be supplied. If there are multiple rules then the action taken will be the first rule to match.",
          "type": "array",
          "items": {
            "$ref": "TlsRouteRouteRule"
          }
        },
        "meshes": {
          "description": "Optional. Meshes defines a list of meshes this TlsRoute is attached to, as one of the routing rules to route the requests served by the mesh. Each mesh reference should match the pattern: `projects\/*\/locations\/global\/meshes\/` The attached Mesh should be of a type SIDECAR",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gateways": {
          "description": "Optional. Gateways defines a list of gateways this TlsRoute is attached to, as one of the routing rules to route the requests served by the gateway. Each gateway reference should match the pattern: `projects\/*\/locations\/global\/gateways\/`",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TlsRouteRouteRule": {
      "id": "TlsRouteRouteRule",
      "description": "Specifies how to match traffic and how to route traffic when traffic is matched.",
      "type": "object",
      "properties": {
        "matches": {
          "description": "Required. RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \"OR\"ed for evaluation.",
          "type": "array",
          "items": {
            "$ref": "TlsRouteRouteMatch"
          }
        },
        "action": {
          "description": "Required. The detailed rule defining how to route matched traffic.",
          "$ref": "TlsRouteRouteAction"
        }
      }
    },
    "TlsRouteRouteMatch": {
      "id": "TlsRouteRouteMatch",
      "description": "RouteMatch defines the predicate used to match requests to a given action. Multiple match types are \"AND\"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.",
      "type": "object",
      "properties": {
        "sniHost": {
          "description": "Optional. SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. www.example.com will be first matched against www.example.com, then *.example.com, then *.com. Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sni_host and alpn is required. Up to 5 sni hosts across all matches can be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alpn": {
          "description": "Optional. ALPN (Application-Layer Protocol Negotiation) to match against. Examples: \"http\/1.1\", \"h2\". At least one of sni_host and alpn is required. Up to 5 alpns across all matches can be set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TlsRouteRouteAction": {
      "id": "TlsRouteRouteAction",
      "description": "The specifications for routing traffic and applying associated policies.",
      "type": "object",
      "properties": {
        "destinations": {
          "description": "Required. The destination services to which traffic should be forwarded. At least one destination service is required.",
          "type": "array",
          "items": {
            "$ref": "TlsRouteRouteDestination"
          }
        }
      }
    },
    "TlsRouteRouteDestination": {
      "id": "TlsRouteRouteDestination",
      "description": "Describe the destination for traffic to be routed to.",
      "type": "object",
      "properties": {
        "serviceName": {
          "description": "Required. The URL of a BackendService to route traffic to.",
          "type": "string"
        },
        "weight": {
          "description": "Optional. Specifies the proportion of requests forwareded to the backend referenced by the service_name field. This is computed as: weight\/Sum(weights in destinations) Weights in all destinations does not need to sum up to 100.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListServiceBindingsResponse": {
      "id": "ListServiceBindingsResponse",
      "description": "Response returned by the ListServiceBindings method.",
      "type": "object",
      "properties": {
        "serviceBindings": {
          "description": "List of ServiceBinding resources.",
          "type": "array",
          "items": {
            "$ref": "ServiceBinding"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "ServiceBinding": {
      "id": "ServiceBinding",
      "description": "ServiceBinding is the resource that defines a Service Directory Service to be used in a BackendService resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the ServiceBinding resource. It matches pattern `projects\/*\/locations\/global\/serviceBindings\/service_binding_name`.",
          "type": "string"
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "service": {
          "description": "Required. The full Service Directory Service name of the format projects\/*\/locations\/*\/namespaces\/*\/services\/*",
          "type": "string"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the ServiceBinding resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ListMeshesResponse": {
      "id": "ListMeshesResponse",
      "description": "Response returned by the ListMeshes method.",
      "type": "object",
      "properties": {
        "meshes": {
          "description": "List of Mesh resources.",
          "type": "array",
          "items": {
            "$ref": "Mesh"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "Mesh": {
      "id": "Mesh",
      "description": "Mesh represents a logical configuration grouping for workload to workload communication within a service mesh. Routes that point to mesh dictate how requests are routed within this logical mesh boundary.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of the Mesh resource. It matches pattern `projects\/*\/locations\/global\/meshes\/`.",
          "type": "string"
        },
        "selfLink": {
          "description": "Output only. Server-defined URL of this resource",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Optional. Set of label tags associated with the Mesh resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
          "type": "string"
        },
        "interceptionPort": {
          "description": "Optional. If set to a valid TCP port (1-65535), instructs the SIDECAR proxy to listen on the specified port of localhost (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be redirected to this port regardless of its actual ip:port destination. If unset, a port '15001' is used as the interception port. This will is applicable only for sidecar proxy deployments.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}\/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https:\/\/cloud.google.com\/kubernetes-engine\/docs\/how-to\/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace\/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "networkservices.projects.locations.list",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "networkservices.projects.locations.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "networkservices.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "networkservices.projects.locations.operations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "networkservices.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "multicastGroups": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.multicastGroups.list",
                  "path": "v1/{+parent}/multicastGroups",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroups",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListMulticastGroupsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMulticastGroupsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists MulticastGroups in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.multicastGroups.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroups/{multicastGroupsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroups\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MulticastGroup"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single MulticastGroup."
                },
                "create": {
                  "id": "networkservices.projects.locations.multicastGroups.create",
                  "path": "v1/{+parent}/multicastGroups",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroups",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "multicastGroupId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and multicast_group_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "MulticastGroup"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new MulticastGroup in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.multicastGroups.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroups/{multicastGroupsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroups\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the MulticastGroup resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "MulticastGroup"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single MulticastGroup."
                },
                "delete": {
                  "id": "networkservices.projects.locations.multicastGroups.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroups/{multicastGroupsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroups\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single MulticastGroup."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.multicastGroups.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroups/{multicastGroupsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroups\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.multicastGroups.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroups/{multicastGroupsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroups\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.multicastGroups.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroups/{multicastGroupsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroups\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "multicastGroupDefinitions": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.multicastGroupDefinitions.list",
                  "path": "v1/{+parent}/multicastGroupDefinitions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroupDefinitions",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListMulticastGroupDefinitionsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMulticastGroupDefinitionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists MulticastGroupDefinitions in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.multicastGroupDefinitions.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroupDefinitions/{multicastGroupDefinitionsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroupDefinitions\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MulticastGroupDefinition"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single MulticastGroupDefinition."
                },
                "create": {
                  "id": "networkservices.projects.locations.multicastGroupDefinitions.create",
                  "path": "v1/{+parent}/multicastGroupDefinitions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroupDefinitions",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "multicastGroupDefinitionId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and multicast_group_definition_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "MulticastGroupDefinition"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new MulticastGroupDefinition in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.multicastGroupDefinitions.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroupDefinitions/{multicastGroupDefinitionsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroupDefinitions\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the MulticastGroupDefinition resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "MulticastGroupDefinition"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single MulticastGroupDefinition."
                },
                "delete": {
                  "id": "networkservices.projects.locations.multicastGroupDefinitions.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroupDefinitions/{multicastGroupDefinitionsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroupDefinitions\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single MulticastGroupDefinition."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.multicastGroupDefinitions.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroupDefinitions/{multicastGroupDefinitionsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroupDefinitions\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.multicastGroupDefinitions.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroupDefinitions/{multicastGroupDefinitionsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroupDefinitions\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.multicastGroupDefinitions.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastGroupDefinitions/{multicastGroupDefinitionsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastGroupDefinitions\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "multicastDomains": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.multicastDomains.list",
                  "path": "v1/{+parent}/multicastDomains",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomains",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListMulticastDomainsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMulticastDomainsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists MulticastDomains in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.multicastDomains.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomains/{multicastDomainsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomains\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MulticastDomain"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single MulticastDomain."
                },
                "create": {
                  "id": "networkservices.projects.locations.multicastDomains.create",
                  "path": "v1/{+parent}/multicastDomains",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomains",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "multicastDomainId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and multicast_domain_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "MulticastDomain"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new MulticastDomain in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.multicastDomains.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomains/{multicastDomainsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomains\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the MulticastDomain resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "MulticastDomain"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single MulticastDomain."
                },
                "delete": {
                  "id": "networkservices.projects.locations.multicastDomains.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomains/{multicastDomainsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomains\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single MulticastDomain."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.multicastDomains.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomains/{multicastDomainsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomains\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.multicastDomains.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomains/{multicastDomainsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomains\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.multicastDomains.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomains/{multicastDomainsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomains\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "multicastDomainActivations": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.multicastDomainActivations.list",
                  "path": "v1/{+parent}/multicastDomainActivations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomainActivations",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListMulticastDomainActivationsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMulticastDomainActivationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists MulticastDomainActivations in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.multicastDomainActivations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomainActivations/{multicastDomainActivationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomainActivations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MulticastDomainActivation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single MulticastDomainActivation."
                },
                "create": {
                  "id": "networkservices.projects.locations.multicastDomainActivations.create",
                  "path": "v1/{+parent}/multicastDomainActivations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomainActivations",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "multicastDomainActivationId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and multicast_domain_activation_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "MulticastDomainActivation"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new MulticastDomainActivation in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.multicastDomainActivations.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomainActivations/{multicastDomainActivationsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomainActivations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the MulticastDomainActivation resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "MulticastDomainActivation"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single MulticastDomainActivation."
                },
                "delete": {
                  "id": "networkservices.projects.locations.multicastDomainActivations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomainActivations/{multicastDomainActivationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomainActivations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single MulticastDomainActivation."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.multicastDomainActivations.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomainActivations/{multicastDomainActivationsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomainActivations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.multicastDomainActivations.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomainActivations/{multicastDomainActivationsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomainActivations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.multicastDomainActivations.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastDomainActivations/{multicastDomainActivationsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastDomainActivations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "multicastConsumerAssociations": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.multicastConsumerAssociations.list",
                  "path": "v1/{+parent}/multicastConsumerAssociations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastConsumerAssociations",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListMulticastConsumerAssociationsRequest",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filtering results",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Hint for how to order the results",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMulticastConsumerAssociationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists MulticastConsumerAssociations in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.multicastConsumerAssociations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastConsumerAssociations/{multicastConsumerAssociationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastConsumerAssociations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MulticastConsumerAssociation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single MulticastConsumerAssociation."
                },
                "create": {
                  "id": "networkservices.projects.locations.multicastConsumerAssociations.create",
                  "path": "v1/{+parent}/multicastConsumerAssociations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastConsumerAssociations",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. Value for parent.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "multicastConsumerAssociationId": {
                      "description": "Required. Id of the requesting object If auto-generating Id server-side, remove this field and multicast_consumer_association_id from the method_signature of Create RPC",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "MulticastConsumerAssociation"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new MulticastConsumerAssociation in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.multicastConsumerAssociations.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastConsumerAssociations/{multicastConsumerAssociationsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "name of resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastConsumerAssociations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the MulticastConsumerAssociation resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "MulticastConsumerAssociation"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single MulticastConsumerAssociation."
                },
                "delete": {
                  "id": "networkservices.projects.locations.multicastConsumerAssociations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastConsumerAssociations/{multicastConsumerAssociationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastConsumerAssociations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single MulticastConsumerAssociation."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.multicastConsumerAssociations.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastConsumerAssociations/{multicastConsumerAssociationsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastConsumerAssociations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.multicastConsumerAssociations.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastConsumerAssociations/{multicastConsumerAssociationsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastConsumerAssociations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.multicastConsumerAssociations.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/multicastConsumerAssociations/{multicastConsumerAssociationsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/multicastConsumerAssociations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "endpointPolicies": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.endpointPolicies.list",
                  "path": "v1/{+parent}/endpointPolicies",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the EndpointPolicies should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of EndpointPolicies to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListEndpointPoliciesResponse` Indicates that this is a continuation of a prior `ListEndpointPolicies` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEndpointPoliciesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists EndpointPolicies in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.endpointPolicies.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EndpointPolicy to get. Must be in the format `projects\/*\/locations\/global\/endpointPolicies\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "EndpointPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single EndpointPolicy."
                },
                "create": {
                  "id": "networkservices.projects.locations.endpointPolicies.create",
                  "path": "v1/{+parent}/endpointPolicies",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the EndpointPolicy. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "endpointPolicyId": {
                      "description": "Required. Short name of the EndpointPolicy resource to be created. E.g. \"CustomECS\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "EndpointPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new EndpointPolicy in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.endpointPolicies.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the EndpointPolicy resource. It matches pattern `projects\/{project}\/locations\/global\/endpointPolicies\/{endpoint_policy}`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the EndpointPolicy resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EndpointPolicy"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single EndpointPolicy."
                },
                "delete": {
                  "id": "networkservices.projects.locations.endpointPolicies.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the EndpointPolicy to delete. Must be in the format `projects\/*\/locations\/global\/endpointPolicies\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single EndpointPolicy."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.endpointPolicies.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.endpointPolicies.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.endpointPolicies.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointPolicies/{endpointPoliciesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/endpointPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "edgeCacheKeysets": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.list",
                  "path": "v1/{+parent}/edgeCacheKeysets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location to list EdgeCacheKeyset resources from, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of EdgeCacheKeyset resources to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last ListEdgeCacheKeysetsResponse resource. Indicates that this is a continuation of a previous `ListEdgeCacheKeysets` call, and that the system can return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEdgeCacheKeysetsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists EdgeCacheKeysets in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the EdgeCacheKeyset resource to get. Must be in the format `projects\/*\/locations\/global\/edgeCacheKeysets\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "EdgeCacheKeyset"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single EdgeCacheKeyset."
                },
                "create": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.create",
                  "path": "v1/{+parent}/edgeCacheKeysets",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the EdgeCacheKeyset resource. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "edgeCacheKeysetId": {
                      "description": "Required. The short name of the EdgeCacheKeyset resource to create, such as `MyEdgeCacheKeyset`.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "EdgeCacheKeyset"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new EdgeCacheKeyset in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the resource as provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression `[a-zA-Z]([a-zA-Z0-9_-])*` which means the first character must be a letter, and all following characters must be a dash, an underscore, a letter, or a digit.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. `FieldMask` is used to specify the fields to overwrite in the EdgeCacheKeyset resource by the update. The fields specified in the `update_mask` are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask then all fields are overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EdgeCacheKeyset"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single EdgeCacheKeyset."
                },
                "delete": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the EdgeCacheKeyset resource to delete. Must be in the format `projects\/*\/locations\/global\/edgeCacheKeysets\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single EdgeCacheKeyset."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.edgeCacheKeysets.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheKeysets/{edgeCacheKeysetsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheKeysets\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "edgeCacheOrigins": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.list",
                  "path": "v1/{+parent}/edgeCacheOrigins",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location to list EdgeCacheOrigin resources from, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of EdgeCacheOrigin resources to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListEdgeCacheOriginsResponse` resource. Indicates that this is a continuation of a previous `ListEdgeCacheOrigins` call, and that the system can return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEdgeCacheOriginsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists EdgeCacheOrigins in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the EdgeCacheOrigin resource to get. Must be in the format `projects\/*\/locations\/global\/edgeCacheOrigins\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "EdgeCacheOrigin"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single EdgeCacheOrigin."
                },
                "create": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.create",
                  "path": "v1/{+parent}/edgeCacheOrigins",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the EdgeCacheOrigin resource. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "edgeCacheOriginId": {
                      "description": "Required. The short name of the EdgeCacheOrigin resource to create, such as `MyEdgeCacheOrigin`.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "EdgeCacheOrigin"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new EdgeCacheOrigin in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the resource as provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression `[a-zA-Z]([a-zA-Z0-9_-])*`, which means that the first character must be a letter, and all following characters must be a dash, an underscore, a letter, or a digit.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. `FieldMask` is used to specify the fields to overwrite in the EdgeCacheOrigin resource by the update. The fields specified in `update_mask` are relative to the resource, not the full request. A field is overwritten if it is in the mask. If the user does not provide a mask value, then all fields are overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EdgeCacheOrigin"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single EdgeCacheOrigin."
                },
                "delete": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the EdgeCacheOrigin to delete. Must be in the format `projects\/*\/locations\/global\/edgeCacheOrigins\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single EdgeCacheOrigin."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.edgeCacheOrigins.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheOrigins/{edgeCacheOriginsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheOrigins\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "edgeCacheServices": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.edgeCacheServices.list",
                  "path": "v1/{+parent}/edgeCacheServices",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location to list EdgeCacheService resources from, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of EdgeCacheService resources to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `list` response. Indicates that this is a continuation of a previous `list` call, and that the system can return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEdgeCacheServicesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists EdgeCacheServices in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.edgeCacheServices.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the EdgeCacheService resource to get. Must be in the format `projects\/*\/locations\/global\/edgeCacheServices\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "EdgeCacheService"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single EdgeCacheService."
                },
                "create": {
                  "id": "networkservices.projects.locations.edgeCacheServices.create",
                  "path": "v1/{+parent}/edgeCacheServices",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the EdgeCacheService resource. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "edgeCacheServiceId": {
                      "description": "Required. The short name of the EdgeCacheService resource create, such as `MyEdgeService`.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "EdgeCacheService"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new EdgeCacheService in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.edgeCacheServices.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the resource as provided by the client when the resource is created. The name must be 1-64 characters long, and match the regular expression `[a-zA-Z]([a-zA-Z0-9_-])*` which means the first character must be a letter, and all following characters must be a dash, an underscore, a letter, or a digit.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. `FieldMask` is used to specify the fields to overwrite in the EdgeCacheService resource by the update. The fields specified in `update_mask` are relative to the resource, not the full request. A field is overwritten if it is in the mask. If a mask is not provided, then all fields are overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EdgeCacheService"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single EdgeCacheService."
                },
                "delete": {
                  "id": "networkservices.projects.locations.edgeCacheServices.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the EdgeCacheService resource to delete. Must be in the format `projects\/*\/locations\/global\/edgeCacheServices\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single EdgeCacheService."
                },
                "invalidateCache": {
                  "id": "networkservices.projects.locations.edgeCacheServices.invalidateCache",
                  "path": "v1/{+edgeCacheService}:invalidateCache",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:invalidateCache",
                  "httpMethod": "POST",
                  "parameters": {
                    "edgeCacheService": {
                      "description": "Required. The name of the EdgeCacheService resource to apply the invalidation request to. Must be in the format `projects\/*\/locations\/global\/edgeCacheServices\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "edgeCacheService"
                  ],
                  "request": {
                    "$ref": "InvalidateCacheRequest"
                  },
                  "response": {
                    "$ref": "InvalidateCacheResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sends a cache invalidation request."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheServices.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.edgeCacheServices.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.edgeCacheServices.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/edgeCacheServices/{edgeCacheServicesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/edgeCacheServices\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "gateways": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.gateways.list",
                  "path": "v1/{+parent}/gateways",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gateways",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the Gateways should be listed, specified in the format `projects\/*\/locations\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of Gateways to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListGatewaysResponse` Indicates that this is a continuation of a prior `ListGateways` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListGatewaysResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Gateways in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.gateways.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the Gateway to get. Must be in the format `projects\/*\/locations\/*\/gateways\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gateways\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Gateway"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Gateway."
                },
                "create": {
                  "id": "networkservices.projects.locations.gateways.create",
                  "path": "v1/{+parent}/gateways",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gateways",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the Gateway. Must be in the format `projects\/*\/locations\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "gatewayId": {
                      "description": "Required. Short name of the Gateway resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Gateway"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Gateway in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.gateways.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the Gateway resource. It matches pattern `projects\/*\/locations\/*\/gateways\/`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gateways\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the Gateway resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Gateway"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Gateway."
                },
                "delete": {
                  "id": "networkservices.projects.locations.gateways.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the Gateway to delete. Must be in the format `projects\/*\/locations\/*\/gateways\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gateways\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Gateway."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.gateways.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gateways\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.gateways.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gateways\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.gateways.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/gateways/{gatewaysId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/gateways\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "grpcRoutes": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.grpcRoutes.list",
                  "path": "v1/{+parent}/grpcRoutes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/grpcRoutes",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the GrpcRoutes should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of GrpcRoutes to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListGrpcRoutesResponse` Indicates that this is a continuation of a prior `ListGrpcRoutes` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListGrpcRoutesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists GrpcRoutes in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.grpcRoutes.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/grpcRoutes/{grpcRoutesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the GrpcRoute to get. Must be in the format `projects\/*\/locations\/global\/grpcRoutes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/grpcRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GrpcRoute"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single GrpcRoute."
                },
                "create": {
                  "id": "networkservices.projects.locations.grpcRoutes.create",
                  "path": "v1/{+parent}/grpcRoutes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/grpcRoutes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the GrpcRoute. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "grpcRouteId": {
                      "description": "Required. Short name of the GrpcRoute resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GrpcRoute"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new GrpcRoute in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.grpcRoutes.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/grpcRoutes/{grpcRoutesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the GrpcRoute resource. It matches pattern `projects\/*\/locations\/global\/grpcRoutes\/`",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/grpcRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the GrpcRoute resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GrpcRoute"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single GrpcRoute."
                },
                "delete": {
                  "id": "networkservices.projects.locations.grpcRoutes.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/grpcRoutes/{grpcRoutesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the GrpcRoute to delete. Must be in the format `projects\/*\/locations\/global\/grpcRoutes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/grpcRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single GrpcRoute."
                }
              }
            },
            "httpRoutes": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.httpRoutes.list",
                  "path": "v1/{+parent}/httpRoutes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/httpRoutes",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the HttpRoutes should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of HttpRoutes to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListHttpRoutesResponse` Indicates that this is a continuation of a prior `ListHttpRoutes` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListHttpRoutesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists HttpRoute in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.httpRoutes.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/httpRoutes/{httpRoutesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the HttpRoute to get. Must be in the format `projects\/*\/locations\/global\/httpRoutes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/httpRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "HttpRoute"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single HttpRoute."
                },
                "create": {
                  "id": "networkservices.projects.locations.httpRoutes.create",
                  "path": "v1/{+parent}/httpRoutes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/httpRoutes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the HttpRoute. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "httpRouteId": {
                      "description": "Required. Short name of the HttpRoute resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "HttpRoute"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new HttpRoute in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.httpRoutes.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/httpRoutes/{httpRoutesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the HttpRoute resource. It matches pattern `projects\/*\/locations\/global\/httpRoutes\/http_route_name>`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/httpRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the HttpRoute resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "HttpRoute"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single HttpRoute."
                },
                "delete": {
                  "id": "networkservices.projects.locations.httpRoutes.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/httpRoutes/{httpRoutesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the HttpRoute to delete. Must be in the format `projects\/*\/locations\/global\/httpRoutes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/httpRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single HttpRoute."
                }
              }
            },
            "tcpRoutes": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.tcpRoutes.list",
                  "path": "v1/{+parent}/tcpRoutes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tcpRoutes",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the TcpRoutes should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of TcpRoutes to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListTcpRoutesResponse` Indicates that this is a continuation of a prior `ListTcpRoutes` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTcpRoutesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists TcpRoute in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.tcpRoutes.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tcpRoutes/{tcpRoutesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the TcpRoute to get. Must be in the format `projects\/*\/locations\/global\/tcpRoutes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/tcpRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "TcpRoute"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single TcpRoute."
                },
                "create": {
                  "id": "networkservices.projects.locations.tcpRoutes.create",
                  "path": "v1/{+parent}/tcpRoutes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tcpRoutes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the TcpRoute. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "tcpRouteId": {
                      "description": "Required. Short name of the TcpRoute resource to be created. E.g. TODO(Add an example).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "TcpRoute"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new TcpRoute in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.tcpRoutes.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tcpRoutes/{tcpRoutesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the TcpRoute resource. It matches pattern `projects\/*\/locations\/global\/tcpRoutes\/tcp_route_name>`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/tcpRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the TcpRoute resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "TcpRoute"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single TcpRoute."
                },
                "delete": {
                  "id": "networkservices.projects.locations.tcpRoutes.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tcpRoutes/{tcpRoutesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the TcpRoute to delete. Must be in the format `projects\/*\/locations\/global\/tcpRoutes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/tcpRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single TcpRoute."
                }
              }
            },
            "tlsRoutes": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.tlsRoutes.list",
                  "path": "v1/{+parent}/tlsRoutes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tlsRoutes",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the TlsRoutes should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of TlsRoutes to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListTlsRoutesResponse` Indicates that this is a continuation of a prior `ListTlsRoutes` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTlsRoutesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists TlsRoute in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.tlsRoutes.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tlsRoutes/{tlsRoutesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the TlsRoute to get. Must be in the format `projects\/*\/locations\/global\/tlsRoutes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/tlsRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "TlsRoute"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single TlsRoute."
                },
                "create": {
                  "id": "networkservices.projects.locations.tlsRoutes.create",
                  "path": "v1/{+parent}/tlsRoutes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tlsRoutes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the TlsRoute. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "tlsRouteId": {
                      "description": "Required. Short name of the TlsRoute resource to be created. E.g. TODO(Add an example).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "TlsRoute"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new TlsRoute in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.tlsRoutes.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tlsRoutes/{tlsRoutesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the TlsRoute resource. It matches pattern `projects\/*\/locations\/global\/tlsRoutes\/tls_route_name>`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/tlsRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the TlsRoute resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "TlsRoute"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single TlsRoute."
                },
                "delete": {
                  "id": "networkservices.projects.locations.tlsRoutes.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tlsRoutes/{tlsRoutesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the TlsRoute to delete. Must be in the format `projects\/*\/locations\/global\/tlsRoutes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/tlsRoutes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single TlsRoute."
                }
              }
            },
            "serviceBindings": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.serviceBindings.list",
                  "path": "v1/{+parent}/serviceBindings",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceBindings",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the ServiceBindings should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of ServiceBindings to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListServiceBindingsResponse` Indicates that this is a continuation of a prior `ListRouters` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListServiceBindingsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists ServiceBinding in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.serviceBindings.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the ServiceBinding to get. Must be in the format `projects\/*\/locations\/global\/serviceBindings\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serviceBindings\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ServiceBinding"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single ServiceBinding."
                },
                "create": {
                  "id": "networkservices.projects.locations.serviceBindings.create",
                  "path": "v1/{+parent}/serviceBindings",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceBindings",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the ServiceBinding. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "serviceBindingId": {
                      "description": "Required. Short name of the ServiceBinding resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ServiceBinding"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new ServiceBinding in a given project and location."
                },
                "delete": {
                  "id": "networkservices.projects.locations.serviceBindings.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the ServiceBinding to delete. Must be in the format `projects\/*\/locations\/global\/serviceBindings\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serviceBindings\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single ServiceBinding."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.serviceBindings.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serviceBindings\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.serviceBindings.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serviceBindings\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.serviceBindings.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/serviceBindings/{serviceBindingsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/serviceBindings\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "meshes": {
              "methods": {
                "list": {
                  "id": "networkservices.projects.locations.meshes.list",
                  "path": "v1/{+parent}/meshes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/meshes",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the Meshes should be listed, specified in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of Meshes to return per call.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListMeshesResponse` Indicates that this is a continuation of a prior `ListMeshes` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMeshesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Meshes in a given project and location."
                },
                "get": {
                  "id": "networkservices.projects.locations.meshes.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the Mesh to get. Must be in the format `projects\/*\/locations\/global\/meshes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/meshes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Mesh"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Mesh."
                },
                "create": {
                  "id": "networkservices.projects.locations.meshes.create",
                  "path": "v1/{+parent}/meshes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/meshes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the Mesh. Must be in the format `projects\/*\/locations\/global`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "meshId": {
                      "description": "Required. Short name of the Mesh resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Mesh"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Mesh in a given project and location."
                },
                "patch": {
                  "id": "networkservices.projects.locations.meshes.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the Mesh resource. It matches pattern `projects\/*\/locations\/global\/meshes\/`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/meshes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the Mesh resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Mesh"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single Mesh."
                },
                "delete": {
                  "id": "networkservices.projects.locations.meshes.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the Mesh to delete. Must be in the format `projects\/*\/locations\/global\/meshes\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/meshes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Mesh."
                },
                "setIamPolicy": {
                  "id": "networkservices.projects.locations.meshes.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/meshes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "networkservices.projects.locations.meshes.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/meshes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "networkservices.projects.locations.meshes.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/meshes/{meshesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/meshes\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}