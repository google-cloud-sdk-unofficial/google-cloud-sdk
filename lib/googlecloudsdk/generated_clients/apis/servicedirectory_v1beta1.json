{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "servicedirectory:v1beta1",
  "name": "servicedirectory",
  "canonicalName": "Service Directory",
  "version": "v1beta1",
  "revision": "0",
  "title": "Service Directory API",
  "description": "Service Directory is a platform for discovering, publishing, and connecting services. ",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/service-directory",
  "protocol": "rest",
  "rootUrl": "https://servicedirectory.googleapis.com/",
  "mtlsRootUrl": "https://servicedirectory.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://servicedirectory.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "ResolveServiceRequest": {
      "id": "ResolveServiceRequest",
      "description": "The request message for LookupService.ResolveService. Looks up a service by its name, returns the service and its endpoints.",
      "type": "object",
      "properties": {
        "maxEndpoints": {
          "description": "Optional. The maximum number of endpoints to return. Defaults to 25. Maximum is 100. If a value less than one is specified, the Default is used. If a value greater than the Maximum is specified, the Maximum is used.",
          "type": "integer",
          "format": "int32"
        },
        "endpointFilter": {
          "description": "Optional. The filter applied to the endpoints of the resolved service. General `filter` string syntax: ` ()` * `` can be `name`, `address`, `port`, or `metadata.` for map field * `` can be `<`, `>`, `<=`, `>=`, `!=`, `=`, `:`. Of which `:` means `HAS`, and is roughly the same as `=` * `` must be the same data type as field * `` can be `AND`, `OR`, `NOT` Examples of valid filters: * `metadata.owner` returns endpoints that have a annotation with the key `owner`, this is the same as `metadata:owner` * `metadata.protocol=gRPC` returns endpoints that have key\/value `protocol=gRPC` * `address=192.108.1.105` returns endpoints that have this address * `port>8080` returns endpoints that have port number larger than 8080 * `name>projects\/my-project\/locations\/us-east1\/namespaces\/my-namespace\/services\/my-service\/endpoints\/endpoint-c` returns endpoints that have name that is alphabetically later than the string, so \"endpoint-e\" is returned but \"endpoint-a\" is not * `name=projects\/my-project\/locations\/us-central1\/namespaces\/my-namespace\/services\/my-service\/endpoints\/ep-1` returns the endpoint that has an endpoint_id equal to `ep-1` * `metadata.owner!=sd AND metadata.foo=bar` returns endpoints that have `owner` in annotation key but value is not `sd` AND have key\/value `foo=bar` * `doesnotexist.foo=bar` returns an empty list. Note that endpoint doesn't have a field called \"doesnotexist\". Since the filter does not match any endpoint, it returns no results For more information about filtering, see [API Filtering](https:\/\/aip.dev\/160).",
          "type": "string"
        }
      }
    },
    "ResolveServiceResponse": {
      "id": "ResolveServiceResponse",
      "description": "The response message for LookupService.ResolveService.",
      "type": "object",
      "properties": {
        "service": {
          "$ref": "Service"
        }
      }
    },
    "Service": {
      "id": "Service",
      "description": "An individual service. A service contains a name and optional metadata. A service must exist before endpoints can be added to it.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name for the service in the format `projects\/*\/locations\/*\/namespaces\/*\/services\/*`.",
          "type": "string"
        },
        "metadata": {
          "description": "Optional. Metadata for the service. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 2000 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (\/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (\/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read\/write to the same location in Service Directory.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "endpoints": {
          "description": "Output only. Endpoints associated with this service. Returned on LookupService.ResolveService. Control plane clients should use RegistrationService.ListEndpoints.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Endpoint"
          }
        },
        "hostname": {
          "description": "Optional. Hostname. Service consumer may use for: 1) HTTP parameter for Host (HTTP\/1.1) or Authority (HTTP\/2, HTTP\/3) 2) TLS SNI Hostname parameter (most commonly used for HTTPS) 3) TLS Hostname Authorization against the x509 SAN DNS entries (necessary for HTTPS) Example: `service.example.com` Limits: Field limited to 255 ASCII characters per https:\/\/www.ietf.org\/rfc\/rfc1035.txt",
          "type": "string"
        },
        "serviceIdentities": {
          "description": "Optional. Authorized Service Identities. If provided, the consumer may use this information to determine whether the service provider is authorized. Examples: `spiffe_id:spiffe:\/\/example.org\/my-service` `service_account:my-service@iam.gserviceaccount.com` Limits: service_identities list is limited to 10 items.",
          "type": "array",
          "items": {
            "$ref": "ServiceIdentity"
          }
        },
        "createTime": {
          "description": "Output only. The timestamp when the service was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the service was last updated. Note: endpoints being created\/deleted\/updated within the service are not considered service updates for the purpose of this timestamp.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "uid": {
          "description": "Output only. A globally unique identifier (in UUID4 format) for this service.",
          "readOnly": true,
          "type": "string"
        },
        "attributes": {
          "description": "Optional. Attributes associated with this Service.",
          "$ref": "Attributes"
        },
        "workloads": {
          "description": "Output only. Service to Workload relationship is 1:1, 1:N, N:1, N:M The list could be empty if the service is opaque (i.e. PSC endpoint of SaaS) and do not have workloads. Example: \/projects\/123\/locations\/us-east1\/namespaces\/ns\/serviceWorkloads\/sw1",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Endpoint": {
      "id": "Endpoint",
      "description": "An individual endpoint that provides a service. The service must already exist to create an endpoint.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name for the endpoint in the format `projects\/*\/locations\/*\/namespaces\/*\/services\/*\/endpoints\/*`.",
          "type": "string"
        },
        "address": {
          "description": "Optional. An IPv4 or IPv6 address. Service Directory rejects bad addresses like: * `8.8.8` * `8.8.8.8:53` * `test:bad:address` * `[::1]` * `[::1]:8080` Limited to 45 characters.",
          "type": "string"
        },
        "port": {
          "description": "Optional. Service Directory rejects values outside of `[0, 65535]`.",
          "type": "integer",
          "format": "int32"
        },
        "metadata": {
          "description": "Optional. Metadata for the endpoint. This data can be consumed by service clients. Restrictions: * The entire metadata dictionary may contain up to 512 characters, spread accoss all key-value pairs. Metadata that goes beyond this limit are rejected * Valid metadata keys have two segments: an optional prefix and name, separated by a slash (\/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (\/). Metadata that fails to meet these requirements are rejected Note: This field is equivalent to the `annotations` field in the v1 API. They have the same syntax and read\/write to the same location in Service Directory.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "network": {
          "description": "Immutable. The Google Compute Engine network (VPC) of the endpoint in the format `projects\/\/locations\/global\/networks\/*`. The project must be specified by project number (project id is rejected). Incorrectly formatted networks are rejected, but no other validation is performed on this field (ex. network or project existence, reachability, or permissions).",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the endpoint was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the endpoint was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "uid": {
          "description": "Output only. A globally unique identifier (in UUID4 format) for this endpoint.",
          "readOnly": true,
          "type": "string"
        },
        "attributes": {
          "description": "Optional. Attributes associated with this Endpoint.",
          "$ref": "EndpointAttributes"
        },
        "fqdn": {
          "description": "Optional. A fully qualified domain name address. Service Directory rejects special characters outside of letters, numbers, dots, and hyphens. FQDN is formatted as [hostname].[domain].[tld] eg: mail.google.com",
          "type": "string"
        }
      }
    },
    "EndpointAttributes": {
      "id": "EndpointAttributes",
      "description": "Attributes associated with endpoints.",
      "type": "object",
      "properties": {
        "managedRegistration": {
          "description": "Output only. Indicates whether a GCP product or service manages this resource. When a resource is fully managed by another GCP product or system the information in Service Directory is read-only. The source of truth is the relevant GCP product or system which is managing the resource. The Service Directory resource will be updated or deleted as appropriate to reflect the state of the underlying `origin_resource`.",
          "readOnly": true,
          "type": "boolean"
        },
        "originResource": {
          "description": "Optional. Reference to the underlying resource that this endpoint represents. This should be the full name of the resource that this endpoint was created from.",
          "type": "string"
        },
        "region": {
          "description": "Optional. Region of the underlying resource, or \"global\" for global resources.",
          "type": "string"
        },
        "zone": {
          "description": "Optional. GCP zone of the underlying resource. Meant to be populated only for zonal resources, left unset for others.",
          "type": "string"
        },
        "gcpFleetMembership": {
          "description": "Optional. Membership URI (scheme-less URI) for resources registered to Google Cloud Fleet. Currently populated only for kubernetes resources. Sample URI: `\/\/gkehub.googleapis.com\/projects\/my-project\/locations\/global\/memberships\/my-membership`",
          "type": "string"
        },
        "kubernetesResourceType": {
          "description": "Optional. Kubernetes resource-type associated with this endpoint",
          "type": "string",
          "enumDescriptions": [
            "Not a Kubernetes workload.",
            "Cluster IP service related resource",
            "Node port service related resource",
            "Load balancer service related resource",
            "Headless service related resource"
          ],
          "enum": [
            "KUBERNETES_RESOURCE_TYPE_UNSPECIFIED",
            "KUBERNETES_RESOURCE_TYPE_CLUSTER_IP",
            "KUBERNETES_RESOURCE_TYPE_NODE_PORT",
            "KUBERNETES_RESOURCE_TYPE_LOAD_BALANCER",
            "KUBERNETES_RESOURCE_TYPE_HEADLESS"
          ]
        }
      }
    },
    "ServiceIdentity": {
      "id": "ServiceIdentity",
      "description": "Specifies the Service Identity of the authorized server.",
      "type": "object",
      "properties": {
        "serviceAccount": {
          "description": "service_account: gcp service account, usable with ALTS. Example: `my-service@iam.gserviceaccount.com` Limits: Limited to 320 characters. https:\/\/tools.ietf.org\/html\/rfc3696",
          "type": "string"
        },
        "spiffeId": {
          "description": "spiffe_id as works with x509 certs with Subject Alternative Name (SAN) specified as uniformResourceIdentifier:*spiffe_id* Example: `spiffe:\/\/example.org\/my-service` Limits: 2048 ASCII Characters https:\/\/github.com\/spiffe\/spiffe\/blob\/master\/standards\/SPIFFE-ID.md#23-maximum-spiffe-id-length",
          "type": "string"
        }
      }
    },
    "Attributes": {
      "id": "Attributes",
      "description": "Attributes are structured data attached to a given resource.",
      "type": "object",
      "properties": {
        "managedRegistration": {
          "description": "Output only. Indicates whether a GCP product or service manages this resource. When a resource is fully managed by another GCP product or system the information in Service Directory is read-only. The source of truth is the relevant GCP product or system which is managing the resource. The Service Directory resource will be updated or deleted as appropriate to reflect the state of the underlying `origin_resource`. Note: The `origin_resource` can be found in the endpoint(s) associated with this service.",
          "readOnly": true,
          "type": "boolean"
        },
        "pscTarget": {
          "description": "Optional. The target resource for the Private Service Connect service. This field should be unset if the service is not a Private Service Connect service. For a Private Service Connect service accessing managed services, this is the URI of the service producer's service attachment. For a Private Service Connect service accessing Google APIs, this will be the name of the Google API bundle. See the [Private Service Connect documentation](https:\/\/cloud.google.com\/vpc\/docs\/private-service-connect) for more information.",
          "type": "string"
        },
        "pscConnectionId": {
          "description": "Optional. The Private Service Connect connection id of the Private Service Connect Forwarding Rule. This field should be unset if the service is not a Private Service Connect service.",
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "Namespace": {
      "id": "Namespace",
      "description": "A container for services. Namespaces allow administrators to group services together and define permissions for a collection of services.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name for the namespace in the format `projects\/*\/locations\/*\/namespaces\/*`.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. Resource labels associated with this namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. The timestamp when the namespace was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the namespace was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "uid": {
          "description": "Output only. A globally unique identifier (in UUID4 format) for this namespace.",
          "readOnly": true,
          "type": "string"
        },
        "attributes": {
          "description": "Optional. Attributes associated with this Namespace.",
          "$ref": "NamespaceAttributes"
        }
      }
    },
    "NamespaceAttributes": {
      "id": "NamespaceAttributes",
      "description": "Attributes associated with Namespace.",
      "type": "object",
      "properties": {
        "managedRegistration": {
          "description": "Output only. Indicates whether a GCP product or service manages this resource. When a resource is fully managed by another GCP product or system the information in Service Directory is read-only. The source of truth is the relevant GCP product or system which is managing the resource. The Service Directory resource will be updated or deleted as appropriate to reflect the state of the underlying `origin_resource`. Note: The `origin_resource` can be found in the endpoint(s) associated with service(s) associated with this namespace.",
          "readOnly": true,
          "type": "boolean"
        },
        "cloudDnsManagedZones": {
          "description": "Output only. List of Cloud DNS ManagedZones that this namespace is associated with.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListNamespacesResponse": {
      "id": "ListNamespacesResponse",
      "description": "The response message for RegistrationService.ListNamespaces.",
      "type": "object",
      "properties": {
        "namespaces": {
          "description": "The list of namespaces.",
          "type": "array",
          "items": {
            "$ref": "Namespace"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {
      }
    },
    "ListServicesResponse": {
      "id": "ListServicesResponse",
      "description": "The response message for RegistrationService.ListServices.",
      "type": "object",
      "properties": {
        "services": {
          "description": "The list of services.",
          "type": "array",
          "items": {
            "$ref": "Service"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "ListEndpointsResponse": {
      "id": "ListEndpointsResponse",
      "description": "The response message for RegistrationService.ListEndpoints.",
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "The list of endpoints.",
          "type": "array",
          "items": {
            "$ref": "Endpoint"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "ServiceWorkload": {
      "id": "ServiceWorkload",
      "description": "An individual ServiceWorkload. A logical collection of workloads that provide the same functionality, with a common set of core attributes, that power services in Service Directory and to which policies can be applied.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name for the service workload in the format `projects\/*\/locations\/*\/namespaces\/*\/serviceWorkloads\/*`.",
          "type": "string"
        },
        "uid": {
          "description": "Output only. A globally unique identifier (in UUID4 format) for this service workload.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Optional. Friendly name. User modifiable.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when this service workload was created in Service Directory.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the service workload was last updated in Service Directory.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "annotations": {
          "description": "Optional. Blackbox annotations on the service workload.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "attributes": {
          "description": "Optional. Attributes associated with this service workload. -- Attributes should stay visibility protected until we have user-visible attributes to share with the user.",
          "$ref": "ServiceWorkloadAttributes"
        },
        "components": {
          "description": "Optional. List of workloads (as schemeless URIs) that are part of this ServiceWorkload. Example for Google Compute Engine components: [ \/\/compute.googleapis.com\/projects\/1234\/zones\/us-east1-c\/instances\/mig1, \/\/compute.googleapis.com\/projects\/1234\/zones\/us-east1-a\/instances\/mig2] Example for Google Kubernetes Engine components: [ \/\/container.googleapis.com\/projects\/servicedirectory-sandman-10\/zones\/us-east1-b\/clusters\/cluster-name\/namespaces\/namespace-name\/apps\/deployment\/dep-name, \/\/container.googleapis.com\/projects\/servicedirectory-sandman-10\/zones\/us-east1-b\/clusters\/cluster-name\/namespaces\/namespace-name\/apps\/replicasets\/rs-name ]",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backendServices": {
          "description": "Optional. List of backend services (as schemeless URIs) used as grouping constructs for this ServiceWorkload. Populated for service workloads that are auto-registered from Google Compute Engine. For service workloads auto-registed from Google Kubernetes Engine, this field is not populated. Example: [ \/\/compute.googleapis.com\/projects\/123\/zones\/us-east1-c\/backend_services\/bs1, \/\/compute.googleapis.com\/projects\/123\/regions\/us-east1\/backend_services\/bs2]",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "incomingServices": {
          "description": "Output only. List of services that front this workload. Multiple services are due to multiple endpoints configured either because of different protocols or desire to separate traffic or different APIs. This list could be empty if this is not a serving workload. Example: \/projects\/123\/locations\/us-east1\/namespaces\/ns\/services\/s1\"",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServiceWorkloadAttributes": {
      "id": "ServiceWorkloadAttributes",
      "description": "Attributes associated with service workload.",
      "type": "object",
      "properties": {
        "managerType": {
          "description": "Output only. The GCP resource\/product responsible for this service workload.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Resource managed by GKE Hub.",
            "Resource managed by Arcus, Backend Service"
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "GKE_HUB",
            "BACKEND_SERVICE"
          ]
        },
        "managedRegistration": {
          "description": "Output only. TODO(b\/230323652) Update documentation for managed_registration field ! Indicates if the ServiceWorkload is GCP managed or not.",
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "ListServiceWorkloadsResponse": {
      "id": "ListServiceWorkloadsResponse",
      "description": "The response message for RegistrationService.ListServiceWorkloads.",
      "type": "object",
      "properties": {
        "serviceWorkloads": {
          "description": "The list of service workloads.",
          "type": "array",
          "items": {
            "$ref": "ServiceWorkload"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "RegistrationPolicy": {
      "id": "RegistrationPolicy",
      "description": "An individual RegistrationPolicy. A list of policies that can be applied to a Service Directory project in order to register the Service Workloads associated with the resources in the policies.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Immutable. The resource name for the Registration Policy in the format `projects\/*\/locations\/*\/registrationPolicies\/*`.",
          "type": "string"
        },
        "namespace": {
          "description": "Optional. Service Directory Namespace name to which the Registration Policy is applied. Only one Registration Policy is allowed for a given namespace. Default Namespace is goog-sdrp-default.",
          "type": "string"
        },
        "resourcePolicies": {
          "description": "Required. The list of ResourcePolicy which are applicable to the Registration Policy.",
          "type": "array",
          "items": {
            "$ref": "ResourcePolicy"
          }
        }
      }
    },
    "ResourcePolicy": {
      "id": "ResourcePolicy",
      "description": "Resource Policies applied to the Registration Policy.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Required. The type of resource which needs to be registered to the Service Workload.",
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "GCP Managed Instance Group resource."
          ],
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MIG"
          ]
        },
        "selector": {
          "description": "Required. The selector used to specify resources. Only applies to those in the same project and region as the Service Directory registration policy. Following fields can be selected for MIGs: name, zone, region. Example - 'zone == us-east-c && name != my-secret-mig' selects all zonal MIGs in us-east1-c except those named my-secret-mig. Represents CEL expression.",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "ListRegistrationPoliciesResponse": {
      "id": "ListRegistrationPoliciesResponse",
      "description": "The response message for RegistrationService.ListRegistrationPolicies.",
      "type": "object",
      "properties": {
        "registrationPolicies": {
          "description": "The list of registration policies.",
          "type": "array",
          "items": {
            "$ref": "RegistrationPolicy"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "GetIamPolicyRequest": {
      "id": "GetIamPolicyRequest",
      "description": "Request message for `GetIamPolicy` method.",
      "type": "object",
      "properties": {
        "options": {
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
          "$ref": "GetPolicyOptions"
        }
      }
    },
    "GetPolicyOptions": {
      "id": "GetPolicyOptions",
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "type": "object",
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY\/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW\/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}\/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https:\/\/cloud.google.com\/kubernetes-engine\/docs\/how-to\/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace\/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        },
        "bindingId": {
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreChildExemptions": {
          "type": "boolean"
        }
      }
    },
    "Rule": {
      "id": "Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "permissions": {
          "description": "A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "type": "string",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log the request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log the request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if the PRINCIPAL\/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches if the PRINCIPAL\/AUTHORITY_SELECTOR is in none of the entries. The format for in and not_in entries can be found at in the Local IAM documentation (see go\/local-iam#features).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "description": "Additional restrictions that must be met. All conditions must pass for the rule to match.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of CheckPolicy for any entries that match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "iam": {
          "description": "Trusted attributes supplied by the IAM system.",
          "type": "string",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which must only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go\/security-realms). When used with IN, the condition indicates \"any of the request's realms match one of the given values; with NOT_IN, \"none of the realms match any of the given values\". Note that a value can be: - 'self:campus' (i.e., clients that are in the same campus) - 'self:metro' (i.e., clients that are in the same metro) - 'self:cloud-region' (i.e., allow connections from clients that are in the same cloud region) - 'self:prod-region' (i.e., allow connections from clients that are in the same prod region) - 'guardians' (i.e., allow connections from its guardian realms. See go\/security-realms-glossary#guardian for more information.) - 'self' [DEPRECATED] (i.e., allow connections from clients that are in the same security realm, which is currently but not guaranteed to be campus-sized) - a realm (e.g., 'campus-abc') - a realm group (e.g., 'realms-for-borg-cell-xx', see: go\/realm-groups) A match is determined by a realm group membership check performed by a RealmAclRep object (go\/realm-acl-howto). It is not permitted to grant access based on the *absence* of a realm, so realm conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this request. When used with IN, the condition indicates that one of the approvers associated with the request matches the specified principal, or is a member of the specified group. Approvers can only grant additional access, and are thus only used in a strictly positive context (e.g. ALLOW\/IN or DENY\/NOT_IN).",
            "What types of justifications have been supplied with this request. String values should match enum names from security.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not permitted to grant access based on the *absence* of a justification, so justification conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN). Multiple justifications, e.g., a Buganizer ID and a manually-entered reason, are normal and supported.",
            "What type of credentials have been supplied with this request. String values should match enum names from security_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY is supported. It is not permitted to grant access based on the *absence* of a credentials type, so the conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN).",
            "EXPERIMENTAL -- DO NOT USE. The conditions can only be used in a \"positive\" context (e.g., ALLOW\/IN or DENY\/NOT_IN)."
          ],
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE",
            "CREDS_ASSERTION"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.",
          "type": "string",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "description": "An operator to apply the subject with.",
          "type": "string",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is a set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is a set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "values": {
          "description": "The objects of the condition.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogConfig": {
      "id": "LogConfig",
      "description": "Specifies what kind of log the caller must write",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        },
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "CloudAuditOptions"
        }
      }
    },
    "CounterOptions": {
      "id": "CounterOptions",
      "description": "Increment a streamz counter with the specified metric and field names. Metric names should start with a '\/', generally be lowercase-only, and end in \"_count\". Field names should not contain an initial slash. The actual exported metric names will have \"\/iam\/policy\" prepended. Field names correspond to IAM request parameters and field values are their respective values. Supported field names: - \"authority\", which is \"[token]\" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - \"iam_principal\", a representation of IAMContext.principal even if a token or authority selector is present; or - \"\" (empty string), resulting in a counter with no fields. Examples: counter { metric: \"\/debug_access_count\" field: \"iam_principal\" } ==> increment counter \/iam\/policy\/debug_access_count {iam_principal=[value of IAMContext.principal]}",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom fields.",
          "type": "array",
          "items": {
            "$ref": "CustomField"
          }
        }
      }
    },
    "CustomField": {
      "id": "CustomField",
      "description": "Custom fields. These can be used to create a counter with arbitrary field\/value pairs. See: go\/rpcsp-custom-fields.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the field name.",
          "type": "string"
        },
        "value": {
          "description": "Value is the field value. It is important that in contrast to the CounterOptions.field, the value here is a constant that is not derived from the IAMContext.",
          "type": "string"
        }
      }
    },
    "DataAccessOptions": {
      "id": "DataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
        "logMode": {
          "type": "string",
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after the authorization check. If client chooses to write one and it fails, client may either fail open (allow the operation to continue) or fail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization check is being made may only be performed if it is successfully logged to Gin. For instance, the authorization library may satisfy this obligation by emitting a partial log entry at authorization check time and only returning ALLOW to the application if it succeeds. If a matching Rule has this directive, but the client has not indicated that it will honor such requirements, then the IAM check will result in authorization failure by setting CheckPolicyResponse.success=false."
          ],
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ]
        }
      }
    },
    "CloudAuditOptions": {
      "id": "CloudAuditOptions",
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
        "logName": {
          "description": "The log_name to populate in the Cloud Audit Record.",
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com\/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com\/data_access\""
          ],
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ]
        },
        "authorizationLoggingOptions": {
          "description": "Information used by the Cloud Audit Logging pipeline.",
          "$ref": "AuthorizationLoggingOptions"
        }
      }
    },
    "AuthorizationLoggingOptions": {
      "id": "AuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object",
      "properties": {
        "permissionType": {
          "description": "The type of the permission that was checked.",
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ]
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "servicedirectory.projects.locations.list",
              "path": "v1beta1/{+name}/locations",
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https:\/\/google.aip.dev\/160).",
                  "location": "query",
                  "type": "string"
                },
                "includeUnrevealedLocations": {
                  "description": "If true, the returned list will include locations which are not yet revealed.",
                  "location": "query",
                  "type": "boolean"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "servicedirectory.projects.locations.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "namespaces": {
              "methods": {
                "create": {
                  "id": "servicedirectory.projects.locations.namespaces.create",
                  "path": "v1beta1/{+parent}/namespaces",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the project and location the namespace will be created in.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "namespaceId": {
                      "description": "Required. The Resource ID must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Namespace"
                  },
                  "response": {
                    "$ref": "Namespace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a namespace, and returns the new namespace."
                },
                "list": {
                  "id": "servicedirectory.projects.locations.namespaces.list",
                  "path": "v1beta1/{+parent}/namespaces",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the project and location whose namespaces you'd like to list.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter to list results by. General `filter` string syntax: ` ()` * `` can be `name`, `labels.` for map field, or `attributes.` for attributes field * `` can be `<`, `>`, `<=`, `>=`, `!=`, `=`, `:`. Of which `:` means `HAS`, and is roughly the same as `=` * `` must be the same data type as field * `` can be `AND`, `OR`, `NOT` Examples of valid filters: * `labels.owner` returns namespaces that have a label with the key `owner`, this is the same as `labels:owner` * `labels.owner=sd` returns namespaces that have key\/value `owner=sd` * `name>projects\/my-project\/locations\/us-east1\/namespaces\/namespace-c` returns namespaces that have name that is alphabetically later than the string, so \"namespace-e\" is returned but \"namespace-a\" is not * `labels.owner!=sd AND labels.foo=bar` returns namespaces that have `owner` in label key but value is not `sd` AND have key\/value `foo=bar` * `doesnotexist.foo=bar` returns an empty list. Note that namespace doesn't have a field called \"doesnotexist\". Since the filter does not match any namespaces, it returns no results * `attributes.managed_registration=true` returns namespaces that are managed by a GCP product or service For more information about filtering, see [API Filtering](https:\/\/aip.dev\/160).",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. The order to list results by. General `order_by` string syntax: ` () (,)` * `` allows value: `name` * `` ascending or descending order by ``. If this is left blank, `asc` is used Note that an empty `order_by` string results in default order, which is order by `name` in ascending order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListNamespacesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all namespaces."
                },
                "get": {
                  "id": "servicedirectory.projects.locations.namespaces.get",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the namespace to retrieve.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Namespace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a namespace."
                },
                "patch": {
                  "id": "servicedirectory.projects.locations.namespaces.patch",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Immutable. The resource name for the namespace in the format `projects\/*\/locations\/*\/namespaces\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. List of fields to be updated in this request.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Namespace"
                  },
                  "response": {
                    "$ref": "Namespace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a namespace."
                },
                "delete": {
                  "id": "servicedirectory.projects.locations.namespaces.delete",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the namespace to delete.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a namespace. This also deletes all services and endpoints in the namespace."
                },
                "getIamPolicy": {
                  "id": "servicedirectory.projects.locations.namespaces.getIamPolicy",
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}:getIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the IAM Policy for a resource"
                },
                "setIamPolicy": {
                  "id": "servicedirectory.projects.locations.namespaces.setIamPolicy",
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the IAM Policy for a resource"
                },
                "testIamPermissions": {
                  "id": "servicedirectory.projects.locations.namespaces.testIamPermissions",
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Tests IAM permissions for a resource (namespace, service or service workload only)."
                }
              }
              ,
              "resources": {
                "services": {
                  "methods": {
                    "resolve": {
                      "id": "servicedirectory.projects.locations.namespaces.services.resolve",
                      "path": "v1beta1/{+name}:resolve",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}:resolve",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the service to resolve.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "ResolveServiceRequest"
                      },
                      "response": {
                        "$ref": "ResolveServiceResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns a service and its associated endpoints. Resolving a service is not considered an active developer method."
                    },
                    "create": {
                      "id": "servicedirectory.projects.locations.namespaces.services.create",
                      "path": "v1beta1/{+parent}/services",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the namespace this service will belong to.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "serviceId": {
                          "description": "Required. The Resource ID must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Service"
                      },
                      "response": {
                        "$ref": "Service"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a service, and returns the new service."
                    },
                    "list": {
                      "id": "servicedirectory.projects.locations.namespaces.services.list",
                      "path": "v1beta1/{+parent}/services",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the namespace whose services you'd like to list.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. The filter to list results by. General `filter` string syntax: ` ()` * `` can be `name` or `metadata.` for map field * `` can be `<`, `>`, `<=`, `>=`, `!=`, `=`, `:`. Of which `:` means `HAS`, and is roughly the same as `=` * `` must be the same data type as field * `` can be `AND`, `OR`, `NOT` Examples of valid filters: * `metadata.owner` returns services that have a metadata with the key `owner`, this is the same as `metadata:owner` * `metadata.protocol=gRPC` returns services that have key\/value `protocol=gRPC` * `name>projects\/my-project\/locations\/us-east1\/namespaces\/my-namespace\/services\/service-c` returns services that have name that is alphabetically later than the string, so \"service-e\" is returned but \"service-a\" is not * `metadata.owner!=sd AND metadata.foo=bar` returns services that have `owner` in metadata key but value is not `sd` AND have key\/value `foo=bar` * `doesnotexist.foo=bar` returns an empty list. Note that service doesn't have a field called \"doesnotexist\". Since the filter does not match any services, it returns no results * `attributes.managed_registration=true` returns services that are managed by a GCP product or service For more information about filtering, see [API Filtering](https:\/\/aip.dev\/160).",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. The order to list results by. General `order_by` string syntax: ` () (,)` * `` allows value: `name` * `` ascending or descending order by ``. If this is left blank, `asc` is used Note that an empty `order_by` string results in default order, which is order by `name` in ascending order.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListServicesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists all services belonging to a namespace."
                    },
                    "get": {
                      "id": "servicedirectory.projects.locations.namespaces.services.get",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the service to get.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Service"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets a service."
                    },
                    "patch": {
                      "id": "servicedirectory.projects.locations.namespaces.services.patch",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Immutable. The resource name for the service in the format `projects\/*\/locations\/*\/namespaces\/*\/services\/*`.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Required. List of fields to be updated in this request.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Service"
                      },
                      "response": {
                        "$ref": "Service"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates a service."
                    },
                    "delete": {
                      "id": "servicedirectory.projects.locations.namespaces.services.delete",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the service to delete.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a service. This also deletes all endpoints associated with the service."
                    },
                    "getIamPolicy": {
                      "id": "servicedirectory.projects.locations.namespaces.services.getIamPolicy",
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}:getIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the IAM Policy for a resource"
                    },
                    "setIamPolicy": {
                      "id": "servicedirectory.projects.locations.namespaces.services.setIamPolicy",
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the IAM Policy for a resource"
                    },
                    "testIamPermissions": {
                      "id": "servicedirectory.projects.locations.namespaces.services.testIamPermissions",
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Tests IAM permissions for a resource (namespace, service or service workload only)."
                    }
                  }
                  ,
                  "resources": {
                    "endpoints": {
                      "methods": {
                        "create": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.create",
                          "path": "v1beta1/{+parent}/endpoints",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints",
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the service that this endpoint provides.",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "endpointId": {
                              "description": "Required. The Resource ID must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "Endpoint"
                          },
                          "response": {
                            "$ref": "Endpoint"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Creates an endpoint, and returns the new endpoint."
                        },
                        "list": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.list",
                          "path": "v1beta1/{+parent}/endpoints",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints",
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. The resource name of the service whose endpoints you'd like to list.",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Optional. The maximum number of items to return.",
                              "location": "query",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pageToken": {
                              "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Optional. The filter to list results by. General `filter` string syntax: ` ()` * `` can be `name`, `address`, `port`, `metadata.` for map field, or `attributes.` for attributes field * `` can be `<`, `>`, `<=`, `>=`, `!=`, `=`, `:`. Of which `:` means `HAS`, and is roughly the same as `=` * `` must be the same data type as field * `` can be `AND`, `OR`, `NOT` Examples of valid filters: * `metadata.owner` returns endpoints that have a metadata with the key `owner`, this is the same as `metadata:owner` * `metadata.protocol=gRPC` returns endpoints that have key\/value `protocol=gRPC` * `address=192.108.1.105` returns endpoints that have this address * `port>8080` returns endpoints that have port number larger than 8080 * `name>projects\/my-project\/locations\/us-east1\/namespaces\/my-namespace\/services\/my-service\/endpoints\/endpoint-c` returns endpoints that have name that is alphabetically later than the string, so \"endpoint-e\" is returned but \"endpoint-a\" is not * `metadata.owner!=sd AND metadata.foo=bar` returns endpoints that have `owner` in metadata key but value is not `sd` AND have key\/value `foo=bar` * `doesnotexist.foo=bar` returns an empty list. Note that endpoint doesn't have a field called \"doesnotexist\". Since the filter does not match any endpoints, it returns no results * `attributes.kubernetes_resource_type=KUBERNETES_RESOURCE_TYPE_CLUSTER_ IP` returns endpoints with the corresponding kubernetes_resource_type For more information about filtering, see [API Filtering](https:\/\/aip.dev\/160).",
                              "location": "query",
                              "type": "string"
                            },
                            "orderBy": {
                              "description": "Optional. The order to list results by. General `order_by` string syntax: ` () (,)` * `` allows values: `name`, `address`, `port` * `` ascending or descending order by ``. If this is left blank, `asc` is used Note that an empty `order_by` string results in default order, which is order by `name` in ascending order.",
                              "location": "query",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "ListEndpointsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists all endpoints."
                        },
                        "get": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.get",
                          "path": "v1beta1/{+name}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints/{endpointsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the endpoint to get.",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+\/endpoints\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Endpoint"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets an endpoint."
                        },
                        "patch": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.patch",
                          "path": "v1beta1/{+name}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints/{endpointsId}",
                          "httpMethod": "PATCH",
                          "parameters": {
                            "name": {
                              "description": "Immutable. The resource name for the endpoint in the format `projects\/*\/locations\/*\/namespaces\/*\/services\/*\/endpoints\/*`.",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+\/endpoints\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "updateMask": {
                              "description": "Required. List of fields to be updated in this request.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "Endpoint"
                          },
                          "response": {
                            "$ref": "Endpoint"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Updates an endpoint."
                        },
                        "delete": {
                          "id": "servicedirectory.projects.locations.namespaces.services.endpoints.delete",
                          "path": "v1beta1/{+name}",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/services/{servicesId}/endpoints/{endpointsId}",
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the endpoint to delete.",
                              "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/services\/[^\/]+\/endpoints\/[^\/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Empty"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Deletes an endpoint."
                        }
                      }
                    }
                  }
                },
                "serviceWorkloads": {
                  "methods": {
                    "create": {
                      "id": "servicedirectory.projects.locations.namespaces.serviceWorkloads.create",
                      "path": "v1beta1/{+parent}/serviceWorkloads",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/serviceWorkloads",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the namespace this service workload will belong to.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "serviceWorkloadId": {
                          "description": "Required. The Resource ID must be 1-63 characters long, and comply with [RFC 1035](https:\/\/www.ietf.org\/rfc\/rfc1035.txt). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "ServiceWorkload"
                      },
                      "response": {
                        "$ref": "ServiceWorkload"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a service workload, and returns the new service workload."
                    },
                    "list": {
                      "id": "servicedirectory.projects.locations.namespaces.serviceWorkloads.list",
                      "path": "v1beta1/{+parent}/serviceWorkloads",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/serviceWorkloads",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The resource name of the namespace whose service workloads you'd like to list.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Optional. The filter to list results by. General `filter` string syntax: ` ()` * `` can be any field name on the ServiceWorkload proto. For example: `name`, `create_time`, `annotations.`, or `components` * `` can be `<`, `>`, `<=`, `>=`, `!=`, `=`, `:`. Of which `:` means `HAS`, and is roughly the same as `=` * `` must be the same data type as field * `` can be `AND`, `OR`, `NOT` Examples of valid filters: * `annotations.owner` returns service workloads that have an annotation with the key `owner`, this is the same as `annotations:owner` * `components:\/\/compute.googleapis.com\/projects\/1234\/zones\/us-east1-c\/instances\/mig1` returns service workloads that contain the specified component * `name>projects\/my-project\/locations\/us-east1\/namespaces\/my-namespace\/serviceWorkloads\/service-workload-c` returns workloads that have names that are alphabetically later than the string, so \"service-workload-e\" is returned but \"service-workload-a\" is not * `annotations.owner!=sd AND annotations.foo=bar` returns service workloads that have `owner` in annotation key but value is not `sd` AND have key\/value `foo=bar` * `doesnotexist.foo=bar` returns an empty list. Note that service workload doesn't have a field called \"doesnotexist\". Since the filter does not match any service workloads, it returns no results For more information about filtering, see [API Filtering](https:\/\/aip.dev\/160).",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. The order to list results by. General `order_by` string syntax: ` () (,)` * `` allows values: `name`, `display_name`, `create_time`, `update_time` * `` ascending or descending order by ``. If this is left blank, `asc` is used Note that an empty `order_by` string results in default order, which is order by `name` in ascending order.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListServiceWorkloadsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists all service workloads."
                    },
                    "get": {
                      "id": "servicedirectory.projects.locations.namespaces.serviceWorkloads.get",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/serviceWorkloads/{serviceWorkloadsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the service workload to get.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/serviceWorkloads\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ServiceWorkload"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets a service workload."
                    },
                    "patch": {
                      "id": "servicedirectory.projects.locations.namespaces.serviceWorkloads.patch",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/serviceWorkloads/{serviceWorkloadsId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "Immutable. The resource name for the service workload in the format `projects\/*\/locations\/*\/namespaces\/*\/serviceWorkloads\/*`.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/serviceWorkloads\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Required. List of fields to be updated in this request. Allowable fields: `display_name`, `annotations`. -- Internal integrations may update other service_workload fields",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        },
                        "allowMissing": {
                          "description": "If set to true, and the service workload is not found, a new service workload will be created. -- Will remain GOOGLE_INTERNAL visibility post-launch.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "ServiceWorkload"
                      },
                      "response": {
                        "$ref": "ServiceWorkload"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates a service workload."
                    },
                    "delete": {
                      "id": "servicedirectory.projects.locations.namespaces.serviceWorkloads.delete",
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/serviceWorkloads/{serviceWorkloadsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the service workload to delete.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/serviceWorkloads\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "managerType": {
                          "description": "Stores extra information about what Google resource is directly responsible for a given Service Workload resource.",
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "Default. Should not be used.",
                            "Resource managed by GKE Hub.",
                            "Resource managed by Arcus, Backend Service"
                          ],
                          "enum": [
                            "TYPE_UNSPECIFIED",
                            "GKE_HUB",
                            "BACKEND_SERVICE"
                          ]
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a service workload."
                    },
                    "getIamPolicy": {
                      "id": "servicedirectory.projects.locations.namespaces.serviceWorkloads.getIamPolicy",
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/serviceWorkloads/{serviceWorkloadsId}:getIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/serviceWorkloads\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "GetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the IAM Policy for a resource"
                    },
                    "setIamPolicy": {
                      "id": "servicedirectory.projects.locations.namespaces.serviceWorkloads.setIamPolicy",
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/serviceWorkloads/{serviceWorkloadsId}:setIamPolicy",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/serviceWorkloads\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the IAM Policy for a resource"
                    },
                    "testIamPermissions": {
                      "id": "servicedirectory.projects.locations.namespaces.serviceWorkloads.testIamPermissions",
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/namespaces/{namespacesId}/serviceWorkloads/{serviceWorkloadsId}:testIamPermissions",
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/namespaces\/[^\/]+\/serviceWorkloads\/[^\/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Tests IAM permissions for a resource (namespace, service or service workload only)."
                    }
                  }
                }
              }
            },
            "registrationPolicies": {
              "methods": {
                "create": {
                  "id": "servicedirectory.projects.locations.registrationPolicies.create",
                  "path": "v1beta1/{+parent}/registrationPolicies",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/registrationPolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the namespace this registration policy will belong to.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "registrationPolicyId": {
                      "description": "Required. The Resource ID must be 1-63 characters long, and comply with [RFC 1035](https:\/\/www.ietf.org\/rfc\/rfc1035.txt). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "RegistrationPolicy"
                  },
                  "response": {
                    "$ref": "RegistrationPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a Registration Policy, and returns the new registration policy."
                },
                "list": {
                  "id": "servicedirectory.projects.locations.registrationPolicies.list",
                  "path": "v1beta1/{+parent}/registrationPolicies",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/registrationPolicies",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The resource name of the namespace whose service workloads you'd like to list.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return. maximum default page size is 10000 for unfiltered queries and 25 for filtered queries",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. The filter to list results by. General `filter` string syntax: ` ()` * `` can be any field name on the RegistrationPolicy proto. For example: `name`, `namespace`, or `resource_policies` * `` can be `<`, `>`, `<=`, `>=`, `!=`, `=`, `:`. Of which `:` means `HAS`, and is roughly the same as `=` * `` must be the same data type as field * `` can be `AND`, `OR`, `NOT` Examples of valid filters: * `resource.kind:MIG` returns all the registration policies with MIGs associated with them * `name>projects\/my-project\/locations\/us-east1\/registrationPolicies\/registration-policy-c` returns registration policies that have names that are alphabetically later than the string, so \"registration-policy-e\" is returned but \"registration-policy-a\" is not For more information about filtering, see [API Filtering](https:\/\/aip.dev\/160).",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. The order to list results by. General `order_by` string syntax: ` () (,)` * `` allows values: `name`, `namespace` * `` ascending or descending order by ``. If this is left blank, `asc` is used Note that an empty `order_by` string results in default order, which is order by `name` in ascending order.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListRegistrationPoliciesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all registration policies"
                },
                "get": {
                  "id": "servicedirectory.projects.locations.registrationPolicies.get",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/registrationPolicies/{registrationPoliciesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the registration policy to get.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrationPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "RegistrationPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a registration policy."
                },
                "patch": {
                  "id": "servicedirectory.projects.locations.registrationPolicies.patch",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/registrationPolicies/{registrationPoliciesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. Immutable. The resource name for the Registration Policy in the format `projects\/*\/locations\/*\/registrationPolicies\/*`.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrationPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. List of fields to be updated in this request. Allowable fields: `resource_policies'",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "allowMissing": {
                      "description": "If set to true, and the registration policy is not found, a new registration policy will be created. -- Will remain GOOGLE_INTERNAL visibility post-launch.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RegistrationPolicy"
                  },
                  "response": {
                    "$ref": "RegistrationPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a registration policy."
                },
                "delete": {
                  "id": "servicedirectory.projects.locations.registrationPolicies.delete",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/registrationPolicies/{registrationPoliciesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the registration policy to delete.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrationPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a registration policy."
                },
                "getIamPolicy": {
                  "id": "servicedirectory.projects.locations.registrationPolicies.getIamPolicy",
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/registrationPolicies/{registrationPoliciesId}:getIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrationPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the IAM Policy for a resource"
                },
                "setIamPolicy": {
                  "id": "servicedirectory.projects.locations.registrationPolicies.setIamPolicy",
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/registrationPolicies/{registrationPoliciesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrationPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the IAM Policy for a resource"
                },
                "testIamPermissions": {
                  "id": "servicedirectory.projects.locations.registrationPolicies.testIamPermissions",
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/registrationPolicies/{registrationPoliciesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https:\/\/cloud.google.com\/apis\/design\/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/registrationPolicies\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Tests IAM permissions for a resource (namespace, service or service workload only)."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}