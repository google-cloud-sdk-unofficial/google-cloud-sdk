{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "run:v1alpha1",
  "name": "run",
  "canonicalName": "Cloud Run",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Cloud Run Admin API",
  "description": "Deploy and manage user provided container images that scale automatically based on incoming requests. The Cloud Run Admin API v1 follows the Knative Serving API specification, while v2 is aligned with Google Cloud AIP-based API standards, as described in https:\/\/google.aip.dev\/.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/run/",
  "protocol": "rest",
  "rootUrl": "https://run.googleapis.com/",
  "mtlsRootUrl": "https://run.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://run.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "schemas": {
    "DomainMapping": {
      "id": "DomainMapping",
      "description": "Resource to hold the state and status of a user's domain mapping. NOTE: This resource is currently in Beta.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"domains.cloudrun.com\/v1alpha1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of resource, in this case \"DomainMapping\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this BuildTemplate.",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "description": "The spec for this DomainMapping.",
          "$ref": "DomainMappingSpec"
        },
        "status": {
          "description": "The current status of the DomainMapping.",
          "$ref": "DomainMappingStatus"
        }
      }
    },
    "ObjectMeta": {
      "id": "ObjectMeta",
      "description": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the resource. In Cloud Run, name is required when creating top-level resources (Service, Job), must be unique within a Cloud Run project\/region, and cannot be changed once created. More info: https:\/\/kubernetes.io\/docs\/user-guide\/identifiers#names",
          "type": "string"
        },
        "generateName": {
          "description": "Not supported by Cloud Run",
          "type": "string"
        },
        "namespace": {
          "description": "Required. Defines the space within each name must be unique within a Cloud Run region. In Cloud Run, it must be project ID or number.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL representing this object.",
          "type": "string"
        },
        "uid": {
          "description": "Unique, system-generated identifier for this resource. More info: https:\/\/kubernetes.io\/docs\/user-guide\/identifiers#uids",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Opaque, system-generated value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server or omit the value to disable conflict-detection. More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/sig-architecture\/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "generation": {
          "description": "A system-provided sequence number representing a specific generation of the desired state.",
          "type": "integer",
          "format": "int32"
        },
        "creationTimestamp": {
          "description": "UTC timestamp representing the server time when this object was created. More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#metadata",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: https:\/\/kubernetes.io\/docs\/user-guide\/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "Unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. In Cloud Run, annotations with 'run.googleapis.com\/' and 'autoscaling.knative.dev' are restricted, and the accepted annotations will be different depending on the resource type. * `autoscaling.knative.dev\/maxScale`: Revision. * `autoscaling.knative.dev\/minScale`: Revision. * `run.googleapis.com\/binary-authorization-breakglass`: Service, Job, * `run.googleapis.com\/binary-authorization`: Service, Job, Execution. * `run.googleapis.com\/client-name`: All resources. * `run.googleapis.com\/cloudsql-instances`: Revision, Execution. * `run.googleapis.com\/cpu-throttling`: Revision. * `run.googleapis.com\/custom-audiences`: Service. * `run.googleapis.com\/description`: Service. * `run.googleapis.com\/encryption-key-shutdown-hours`: Revision * `run.googleapis.com\/encryption-key`: Revision, Execution. * `run.googleapis.com\/execution-environment`: Revision, Execution. * `run.googleapis.com\/gc-traffic-tags`: Service. * `run.googleapis.com\/ingress`: Service. * `run.googleapis.com\/network-interfaces`: Revision, Execution. * `run.googleapis.com\/post-key-revocation-action-type`: Revision. * `run.googleapis.com\/secrets`: Revision, Execution. * `run.googleapis.com\/secure-session-agent`: Revision. * `run.googleapis.com\/sessionAffinity`: Revision. * `run.googleapis.com\/startup-cpu-boost`: Revision. * `run.googleapis.com\/vpc-access-connector`: Revision, Execution. * `run.googleapis.com\/vpc-access-egress`: Revision, Execution. Execution. More info: https:\/\/kubernetes.io\/docs\/user-guide\/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ownerReferences": {
          "description": "Not supported by Cloud Run",
          "type": "array",
          "items": {
            "$ref": "OwnerReference"
          }
        },
        "deletionTimestamp": {
          "description": "The read-only soft deletion timestamp for this resource. In Cloud Run, users are not able to set this field. Instead, they must call the corresponding Delete API.",
          "type": "string",
          "format": "google-datetime"
        },
        "deletionGracePeriodSeconds": {
          "description": "Not supported by Cloud Run",
          "type": "integer",
          "format": "int32"
        },
        "finalizers": {
          "description": "Not supported by Cloud Run",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterName": {
          "description": "Not supported by Cloud Run",
          "type": "string"
        }
      }
    },
    "OwnerReference": {
      "id": "OwnerReference",
      "description": "This is not supported or used by Cloud Run.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "This is not supported or used by Cloud Run.",
          "type": "string"
        },
        "kind": {
          "description": "This is not supported or used by Cloud Run.",
          "type": "string"
        },
        "name": {
          "description": "This is not supported or used by Cloud Run.",
          "type": "string"
        },
        "uid": {
          "description": "This is not supported or used by Cloud Run.",
          "type": "string"
        },
        "controller": {
          "description": "This is not supported or used by Cloud Run.",
          "type": "boolean"
        },
        "blockOwnerDeletion": {
          "description": "This is not supported or used by Cloud Run.",
          "type": "boolean"
        }
      }
    },
    "DomainMappingSpec": {
      "id": "DomainMappingSpec",
      "description": "The desired state of the Domain Mapping.",
      "type": "object",
      "properties": {
        "routeName": {
          "description": "The name of the Knative Route that this DomainMapping applies to. The route must exist.",
          "type": "string"
        },
        "certificateMode": {
          "description": "The mode of the certificate.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Do not provision an HTTPS certificate.",
            "Automatically provisions an HTTPS certificate via GoogleCA or LetsEncrypt."
          ],
          "enum": [
            "CERTIFICATE_MODE_UNSPECIFIED",
            "NONE",
            "AUTOMATIC"
          ]
        },
        "forceOverride": {
          "description": "If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning.",
          "type": "boolean"
        }
      }
    },
    "DomainMappingStatus": {
      "id": "DomainMappingStatus",
      "description": "The current state of the Domain Mapping.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Array of observed DomainMappingConditions, indicating the current state of the DomainMapping.",
          "type": "array",
          "items": {
            "$ref": "DomainMappingCondition"
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.",
          "type": "integer",
          "format": "int32"
        },
        "resourceRecords": {
          "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.",
          "type": "array",
          "items": {
            "$ref": "ResourceRecord"
          }
        },
        "mappedRouteName": {
          "description": "The name of the route that the mapping currently points to.",
          "type": "string"
        },
        "url": {
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Holds the URL that will serve the traffic of the DomainMapping. +optional",
          "type": "string"
        }
      }
    },
    "DomainMappingCondition": {
      "id": "DomainMappingCondition",
      "description": "DomainMappingCondition contains state information for a DomainMapping.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of domain mapping condition.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "reason": {
          "description": "One-word CamelCase reason for the condition's current status. +optional",
          "type": "string"
        },
        "message": {
          "description": "Human readable message indicating details about the current status. +optional",
          "type": "string"
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another. +optional",
          "type": "string",
          "format": "google-datetime"
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info +optional",
          "type": "string"
        }
      }
    },
    "ResourceRecord": {
      "id": "ResourceRecord",
      "description": "A DNS resource record.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'.",
          "type": "string"
        },
        "rrdata": {
          "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).",
          "type": "string"
        },
        "type": {
          "description": "Resource record type. Example: `AAAA`.",
          "type": "string",
          "enumDescriptions": [
            "An unknown resource record.",
            "An A resource record. Data is an IPv4 address.",
            "An AAAA resource record. Data is an IPv6 address.",
            "A CNAME resource record. Data is a domain name to be aliased."
          ],
          "enum": [
            "RECORD_TYPE_UNSPECIFIED",
            "A",
            "AAAA",
            "CNAME"
          ]
        }
      }
    },
    "ListDomainMappingsResponse": {
      "id": "ListDomainMappingsResponse",
      "description": "ListDomainMappingsResponse is a list of DomainMapping resources.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"domains.cloudrun.com\/v1alpha1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"DomainMappingList\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this DomainMapping list.",
          "$ref": "ListMeta"
        },
        "items": {
          "description": "List of DomainMappings.",
          "type": "array",
          "items": {
            "$ref": "DomainMapping"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListMeta": {
      "id": "ListMeta",
      "description": "Metadata for synthetic resources like List. In Cloud Run, all List Resources Responses will have a ListMeta instead of ObjectMeta.",
      "type": "object",
      "properties": {
        "selfLink": {
          "description": "URL representing this object.",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Opaque string that identifies the server's internal version of this object. It can be used by clients to determine when objects have changed. If the message is passed back to the server, it must be left unmodified. https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "continue": {
          "description": "Continuation token is a value emitted when the count of items is larger than the user\/system limit. To retrieve the next page of items, pass the value of `continue` as the next request's `page_token`.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "domainmappings": {
              "methods": {
                "create": {
                  "id": "run.projects.locations.domainmappings.create",
                  "path": "v1alpha1/{+parent}/domainmappings",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "The project ID or project number in which this domain mapping should be created.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "DomainMapping"
                  },
                  "response": {
                    "$ref": "DomainMapping"
                  },
                  "description": "Creates a new domain mapping."
                },
                "list": {
                  "id": "run.projects.locations.domainmappings.list",
                  "path": "v1alpha1/{+parent}/domainmappings",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "The project ID or project number from which the domain mappings should be listed.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "limit": {
                      "description": "The maximum number of records that should be returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "fieldSelector": {
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "location": "query",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "continue": {
                      "description": "Optional encoded string to continue paging.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDomainMappingsResponse"
                  },
                  "description": "Rpc to list domain mappings."
                },
                "get": {
                  "id": "run.projects.locations.domainmappings.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the domain mapping being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/domainmappings\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "DomainMapping"
                  },
                  "description": "Rpc to get information about a domain mapping."
                },
                "replaceDomainMapping": {
                  "id": "run.projects.locations.domainmappings.replaceDomainMapping",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                  "httpMethod": "PUT",
                  "parameters": {
                    "name": {
                      "description": "The name of the domain mapping being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/domainmappings\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DomainMapping"
                  },
                  "response": {
                    "$ref": "DomainMapping"
                  },
                  "description": "Rpc to replace a domain mapping. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control."
                },
                "delete": {
                  "id": "run.projects.locations.domainmappings.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the domain mapping being deleted. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/domainmappings\/[^\/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "orphanDependents": {
                      "description": "Deprecated. Specifies the cascade behavior on delete. Cloud Run only supports cascading behavior, so this must be false. This attribute is deprecated, and is now replaced with PropagationPolicy See https:\/\/github.com\/kubernetes\/kubernetes\/issues\/46659 for more info.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "propagationPolicy": {
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io\/docs\/concepts\/workloads\/controllers\/garbage-collection\/ for more information.",
                      "location": "query",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "location": "query",
                      "type": "string"
                    },
                    "apiVersion": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Rpc to delete a domain mapping."
                }
              }
            }
          }
        }
      }
    },
    "namespaces": {
      "resources": {
        "domainmappings": {
          "methods": {
            "create": {
              "id": "run.namespaces.domainmappings.create",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings",
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The project ID or project number in which this domain mapping should be created.",
                  "pattern": "^namespaces\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "DomainMapping"
              },
              "response": {
                "$ref": "DomainMapping"
              },
              "description": "Creates a new domain mapping."
            },
            "list": {
              "id": "run.namespaces.domainmappings.list",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings",
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The project ID or project number from which the domain mappings should be listed.",
                  "pattern": "^namespaces\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "limit": {
                  "description": "The maximum number of records that should be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "includeUninitialized": {
                  "description": "Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "string"
                },
                "labelSelector": {
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "location": "query",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "string"
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "continue": {
                  "description": "Optional encoded string to continue paging.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListDomainMappingsResponse"
              },
              "description": "Rpc to list domain mappings."
            },
            "get": {
              "id": "run.namespaces.domainmappings.get",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+name}",
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the domain mapping being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces\/[^\/]+\/domainmappings\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "DomainMapping"
              },
              "description": "Rpc to get information about a domain mapping."
            },
            "replaceDomainMapping": {
              "id": "run.namespaces.domainmappings.replaceDomainMapping",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+name}",
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "description": "The name of the domain mapping being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces\/[^\/]+\/domainmappings\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "DomainMapping"
              },
              "response": {
                "$ref": "DomainMapping"
              },
              "description": "Rpc to replace a domain mapping. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control."
            },
            "delete": {
              "id": "run.namespaces.domainmappings.delete",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+name}",
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The name of the domain mapping being deleted. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces\/[^\/]+\/domainmappings\/[^\/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "orphanDependents": {
                  "description": "Deprecated. Specifies the cascade behavior on delete. Cloud Run only supports cascading behavior, so this must be false. This attribute is deprecated, and is now replaced with PropagationPolicy See https:\/\/github.com\/kubernetes\/kubernetes\/issues\/46659 for more info.",
                  "location": "query",
                  "type": "boolean"
                },
                "propagationPolicy": {
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io\/docs\/concepts\/workloads\/controllers\/garbage-collection\/ for more information.",
                  "location": "query",
                  "type": "string"
                },
                "kind": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                },
                "apiVersion": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "description": "Rpc to delete a domain mapping."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}